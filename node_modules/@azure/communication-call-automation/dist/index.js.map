{"version":3,"file":"index.js","sources":["../src/models/logger.ts","../src/generated/src/pagingHelper.ts","../src/generated/src/models/index.ts","../src/generated/src/models/mappers.ts","../src/generated/src/models/parameters.ts","../src/generated/src/operations/callConnection.ts","../src/generated/src/operations/callMedia.ts","../src/generated/src/operations/callRecording.ts","../src/generated/src/callAutomationApiClient.ts","../src/callMedia.ts","../src/utli/converters.ts","../src/callConnection.ts","../src/contentDownloader.ts","../src/credential/cryptoUtils.ts","../src/credential/callAutomationAccessKeyCredentialPolicy.ts","../src/credential/callAutomationAuthPolicy.ts","../src/callRecording.ts","../src/callAutomationClient.ts","../src/models/mapper.ts","../src/callAutomationEventParser.ts","../src/models/models.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { createClientLogger } from \"@azure/logger\";\n\n/**\n * The \\@azure/logger configuration for this package.\n */\nexport const logger = createClientLogger(\"communication-call-automation\");\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport interface PageInfo {\n  continuationToken?: string;\n}\n\nconst pageMap = new WeakMap<object, PageInfo>();\n\n/**\n * Given the last `.value` produced by the `byPage` iterator,\n * returns a continuation token that can be used to begin paging from\n * that point later.\n * @param page An object from accessing `value` on the IteratorResult from a `byPage` iterator.\n * @returns The continuation token that can be passed into byPage() during future calls.\n */\nexport function getContinuationToken(page: unknown): string | undefined {\n  if (typeof page !== \"object\" || page === null) {\n    return undefined;\n  }\n  return pageMap.get(page)?.continuationToken;\n}\n\nexport function setContinuationToken(\n  page: unknown,\n  continuationToken: string | undefined,\n): void {\n  if (typeof page !== \"object\" || page === null || !continuationToken) {\n    return;\n  }\n  const pageInfo = pageMap.get(page) ?? {};\n  pageInfo.continuationToken = continuationToken;\n  pageMap.set(page, pageInfo);\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\n/** The request payload for creating the call. */\nexport interface CreateCallRequest {\n  /** The targets of the call. */\n  targets: CommunicationIdentifierModel[];\n  /**\n   * The source caller Id, a phone number, that's shown to the PSTN participant being invited.\n   * Required only when calling a PSTN callee.\n   */\n  sourceCallerIdNumber?: PhoneNumberIdentifierModel;\n  /** Display name of the call if dialing out to a pstn number */\n  sourceDisplayName?: string;\n  /** The identifier of the source of the call */\n  source?: CommunicationUserIdentifierModel;\n  /** A customer set value used to track the answering of a call. */\n  operationContext?: string;\n  /** The callback URI. */\n  callbackUri: string;\n  /** AI options for the call. */\n  callIntelligenceOptions?: CallIntelligenceOptionsInternal;\n}\n\n/** Identifies a participant in Azure Communication services. A participant is, for example, a phone number or an Azure communication user. This model is polymorphic: Apart from kind and rawId, at most one further property may be set which must match the kind enum value. */\nexport interface CommunicationIdentifierModel {\n  /** The identifier kind. Only required in responses. */\n  kind?: CommunicationIdentifierModelKind;\n  /** Raw Id of the identifier. Optional in requests, required in responses. */\n  rawId?: string;\n  /** The communication user. */\n  communicationUser?: CommunicationUserIdentifierModel;\n  /** The phone number. */\n  phoneNumber?: PhoneNumberIdentifierModel;\n  /** The Microsoft Teams user. */\n  microsoftTeamsUser?: MicrosoftTeamsUserIdentifierModel;\n  /** The Microsoft Teams application. */\n  microsoftTeamsApp?: MicrosoftTeamsAppIdentifierModel;\n}\n\n/** A user that got created with an Azure Communication Services resource. */\nexport interface CommunicationUserIdentifierModel {\n  /** The Id of the communication user. */\n  id: string;\n}\n\n/** A phone number. */\nexport interface PhoneNumberIdentifierModel {\n  /** The phone number in E.164 format. */\n  value: string;\n}\n\n/** A Microsoft Teams user. */\nexport interface MicrosoftTeamsUserIdentifierModel {\n  /** The Id of the Microsoft Teams user. If not anonymous, this is the AAD object Id of the user. */\n  userId: string;\n  /** True if the Microsoft Teams user is anonymous. By default false if missing. */\n  isAnonymous?: boolean;\n  /** The cloud that the Microsoft Teams user belongs to. By default 'public' if missing. */\n  cloud?: CommunicationCloudEnvironmentModel;\n}\n\n/** A Microsoft Teams application. */\nexport interface MicrosoftTeamsAppIdentifierModel {\n  /** The Id of the Microsoft Teams application. */\n  appId: string;\n  /** The cloud that the Microsoft Teams application belongs to. By default 'public' if missing. */\n  cloud?: CommunicationCloudEnvironmentModel;\n}\n\n/** AI options for the call. */\nexport interface CallIntelligenceOptionsInternal {\n  /** The identifier of the Cognitive Service resource assigned to this call. */\n  cognitiveServicesEndpoint?: string;\n}\n\n/** Properties of a call connection */\nexport interface CallConnectionPropertiesInternal {\n  /** The call connection id. */\n  callConnectionId?: string;\n  /** The server call id. */\n  serverCallId?: string;\n  /** The targets of the call. */\n  targets?: CommunicationIdentifierModel[];\n  /** The state of the call connection. */\n  callConnectionState?: CallConnectionStateModel;\n  /** The callback URI. */\n  callbackUri?: string;\n  /**\n   * The source caller Id, a phone number, that's shown to the PSTN participant being invited.\n   * Required only when calling a PSTN callee.\n   */\n  sourceCallerIdNumber?: PhoneNumberIdentifierModel;\n  /** Display name of the call if dialing out to a pstn number. */\n  sourceDisplayName?: string;\n  /** Source identity. */\n  source?: CommunicationIdentifierModel;\n  /** The correlation ID. */\n  correlationId?: string;\n  /** Identity of the answering entity. Only populated when identity is provided in the request. */\n  answeredBy?: CommunicationUserIdentifierModel;\n}\n\n/** The Communication Services error. */\nexport interface CommunicationErrorResponse {\n  /** The Communication Services error. */\n  error: CommunicationError;\n}\n\n/** The Communication Services error. */\nexport interface CommunicationError {\n  /** The error code. */\n  code: string;\n  /** The error message. */\n  message: string;\n  /**\n   * The error target.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly target?: string;\n  /**\n   * Further details about specific errors that led to this error.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly details?: CommunicationError[];\n  /**\n   * The inner error if any.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly innerError?: CommunicationError;\n}\n\n/** The request payload for answering the call. */\nexport interface AnswerCallRequest {\n  /** The context associated with the call. */\n  incomingCallContext: string;\n  /** The callback uri. */\n  callbackUri: string;\n  /** A customer set value used to track the answering of a call. */\n  operationContext?: string;\n  /** AI options for the call. */\n  callIntelligenceOptions?: CallIntelligenceOptionsInternal;\n  /** The identifier of the call automation entity which answers the call */\n  answeredBy?: CommunicationUserIdentifierModel;\n}\n\n/** The request payload for redirecting the call. */\nexport interface RedirectCallRequest {\n  /** The context associated with the call. */\n  incomingCallContext: string;\n  /** The target identity to redirect the call to. */\n  target: CommunicationIdentifierModel;\n}\n\n/** The request payload for rejecting the call. */\nexport interface RejectCallRequest {\n  /** The context associated with the call. */\n  incomingCallContext: string;\n  /** The rejection reason. */\n  callRejectReason?: CallRejectReason;\n}\n\n/** The request payload for transferring call to a participant. */\nexport interface TransferToParticipantRequest {\n  /** The identity of the target where call should be transferred to. */\n  targetParticipant: CommunicationIdentifierModel;\n  /** Used by customers when calling mid-call actions to correlate the request to the response event. */\n  operationContext?: string;\n  /** Transferee is the participant who is transferred away. */\n  transferee?: CommunicationIdentifierModel;\n  /**\n   * Set a callback URI that overrides the default callback URI set by CreateCall/AnswerCall for this operation.\n   * This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.\n   */\n  operationCallbackUri?: string;\n  /** Used by customer to send custom calling context to targets */\n  customCallingContext?: CustomCallingContextInternal;\n}\n\n/** The custom calling context which will be sent to the target */\nexport interface CustomCallingContextInternal {\n  /** Custom calling context VoiP headers */\n  voipHeaders?: { [propertyName: string]: string };\n  /** Custom calling context SIP headers */\n  sipHeaders?: { [propertyName: string]: string };\n}\n\n/** The response payload for transferring the call. */\nexport interface TransferCallResponse {\n  /** The operation context provided by client. */\n  operationContext?: string;\n}\n\nexport interface PlayRequest {\n  /** The source of the audio to be played. */\n  playSources: PlaySourceInternal[];\n  /**\n   * The list of call participants play provided audio to.\n   * Plays to everyone in the call when not provided.\n   */\n  playTo?: CommunicationIdentifierModel[];\n  /** Defines options for playing the audio. */\n  playOptions?: PlayOptionsInternal;\n  /** The value to identify context of the operation. */\n  operationContext?: string;\n  /**\n   * Set a callback URI that overrides the default callback URI set by CreateCall/AnswerCall for this operation.\n   * This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.\n   */\n  operationCallbackUri?: string;\n}\n\nexport interface PlaySourceInternal {\n  /** Defines the type of the play source */\n  kind: PlaySourceType;\n  /** Defines the identifier to be used for caching related media */\n  playSourceCacheId?: string;\n  /** Defines the file source info to be used for play */\n  file?: FileSourceInternal;\n  /** Defines the text source info to be used for play */\n  text?: TextSourceInternal;\n  /** Defines the ssml(Speech Synthesis Markup Language) source info to be used for play */\n  ssml?: SsmlSourceInternal;\n}\n\nexport interface FileSourceInternal {\n  /** Uri for the audio file to be played */\n  uri: string;\n}\n\nexport interface TextSourceInternal {\n  /** Text for the cognitive service to be played */\n  text: string;\n  /**\n   * Source language locale to be played\n   * Refer to available locales here: <seealso href=\"https://learn.microsoft.com/en-us/azure/cognitive-services/speech-service/language-support?tabs=stt-tts\" />\n   */\n  sourceLocale?: string;\n  /** Voice kind type */\n  voiceKind?: VoiceKind;\n  /**\n   * Voice name to be played\n   * Refer to available Text-to-speech voices here: <seealso href=\"https://learn.microsoft.com/en-us/azure/cognitive-services/speech-service/language-support?tabs=stt-tts\" />\n   */\n  voiceName?: string;\n  /** Endpoint where the custom voice was deployed. */\n  customVoiceEndpointId?: string;\n}\n\nexport interface SsmlSourceInternal {\n  /** Ssml string for the cognitive service to be played */\n  ssmlText: string;\n  /** Endpoint where the custom voice was deployed. */\n  customVoiceEndpointId?: string;\n}\n\nexport interface PlayOptionsInternal {\n  /** The option to play the provided audio source in loop when set to true */\n  loop: boolean;\n}\n\nexport interface RecognizeRequest {\n  /** Determines the type of the recognition. */\n  recognizeInputType: RecognizeInputType;\n  /** The source of the audio to be played for recognition. */\n  playPrompt?: PlaySourceInternal;\n  /** If set recognize can barge into other existing queued-up/currently-processing requests. */\n  interruptCallMediaOperation?: boolean;\n  /** Defines options for recognition. */\n  recognizeOptions: RecognizeOptions;\n  /** The value to identify context of the operation. */\n  operationContext?: string;\n  /**\n   * Set a callback URI that overrides the default callback URI set by CreateCall/AnswerCall for this operation.\n   * This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.\n   */\n  operationCallbackUri?: string;\n}\n\nexport interface RecognizeOptions {\n  /** Determines if we interrupt the prompt and start recognizing. */\n  interruptPrompt?: boolean;\n  /** Time to wait for first input after prompt (if any). */\n  initialSilenceTimeoutInSeconds?: number;\n  /** Target participant of DTMF tone recognition. */\n  targetParticipant: CommunicationIdentifierModel;\n  /** Speech language to be recognized, If not set default is en-US */\n  speechLanguage?: string;\n  /** Endpoint where the custom model was deployed. */\n  speechRecognitionModelEndpointId?: string;\n  /** Defines configurations for DTMF. */\n  dtmfOptions?: DtmfOptions;\n  /** Defines Ivr choices for recognize. */\n  choices?: Choice[];\n  /** Defines continuous speech recognition option. */\n  speechOptions?: SpeechOptions;\n}\n\n/** Options for DTMF recognition */\nexport interface DtmfOptions {\n  /** Time to wait between DTMF inputs to stop recognizing. */\n  interToneTimeoutInSeconds?: number;\n  /** Maximum number of DTMF tones to be collected. */\n  maxTonesToCollect?: number;\n  /** List of tones that will stop recognizing. */\n  stopTones?: Tone[];\n}\n\nexport interface Choice {\n  /** Identifier for a given choice */\n  label: string;\n  /** List of phrases to recognize */\n  phrases: string[];\n  tone?: Tone;\n}\n\n/** Options for continuous speech recognition */\nexport interface SpeechOptions {\n  /** The length of end silence when user stops speaking and cogservice send response. */\n  endSilenceTimeoutInMs?: number;\n}\n\nexport interface ContinuousDtmfRecognitionRequest {\n  /** Defines options for recognition. */\n  targetParticipant: CommunicationIdentifierModel;\n  /** The value to identify context of the operation. */\n  operationContext?: string;\n  /**\n   * Set a callback URI that overrides the default callback URI set by CreateCall/AnswerCall for this operation.\n   * This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.\n   */\n  operationCallbackUri?: string;\n}\n\nexport interface SendDtmfTonesRequest {\n  /** List of tones to be sent to target participant. */\n  tones: Tone[];\n  /** Target participant of send Dtmf tones. */\n  targetParticipant: CommunicationIdentifierModel;\n  /** The value to identify context of the operation. */\n  operationContext?: string;\n  /**\n   * Set a callback URI that overrides the default callback URI set by CreateCall/AnswerCall for this operation.\n   * This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.\n   */\n  operationCallbackUri?: string;\n}\n\nexport interface SendDtmfTonesResult {\n  /** The operation context provided by client. */\n  operationContext?: string;\n}\n\n/** The response payload for getting participants of the call. */\nexport interface GetParticipantsResponse {\n  /** List of the current participants in the call. */\n  value: CallParticipantInternal[];\n  /** Continue of the list of participants */\n  nextLink?: string;\n}\n\n/** A call participant. */\nexport interface CallParticipantInternal {\n  /** Communication identifier of the participant */\n  identifier?: CommunicationIdentifierModel;\n  /** Is participant muted */\n  isMuted?: boolean;\n}\n\n/** The request payload for adding participant to the call. */\nexport interface AddParticipantRequest {\n  /**\n   * The source caller Id, a phone number, that's shown to the PSTN participant being invited.\n   * Required only when inviting a PSTN participant.\n   */\n  sourceCallerIdNumber?: PhoneNumberIdentifierModel;\n  /**\n   * (Optional) The display name of the source that is associated with this invite operation when\n   * adding a PSTN participant or teams user.  Note: Will not update the display name in the roster.\n   */\n  sourceDisplayName?: string;\n  /** The participant to invite. */\n  participantToAdd: CommunicationIdentifierModel;\n  /**\n   * Gets or sets the timeout to wait for the invited participant to pickup.\n   * The maximum value of this is 180 seconds\n   */\n  invitationTimeoutInSeconds?: number;\n  /** Used by customers when calling mid-call actions to correlate the request to the response event. */\n  operationContext?: string;\n  /**\n   * Set a callback URI that overrides the default callback URI set by CreateCall/AnswerCall for this operation.\n   * This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.\n   */\n  operationCallbackUri?: string;\n  /** Used by customer to send custom calling context to targets */\n  customCallingContext?: CustomCallingContextInternal;\n}\n\n/** The response payload for adding participants to the call. */\nexport interface AddParticipantResponse {\n  /** List of current participants in the call. */\n  participant?: CallParticipantInternal;\n  /** The operation context provided by client. */\n  operationContext?: string;\n  /** Invitation ID used to add a participant. */\n  invitationId?: string;\n}\n\n/** The remove participant by identifier request. */\nexport interface RemoveParticipantRequest {\n  /** The participants to be removed from the call. */\n  participantToRemove: CommunicationIdentifierModel;\n  /** Used by customers when calling mid-call actions to correlate the request to the response event. */\n  operationContext?: string;\n  /**\n   * Set a callback URI that overrides the default callback URI set by CreateCall/AnswerCall for this operation.\n   * This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.\n   */\n  operationCallbackUri?: string;\n}\n\n/** The response payload for removing participants of the call. */\nexport interface RemoveParticipantResponse {\n  /** The operation context provided by client. */\n  operationContext?: string;\n}\n\n/** The request payload for muting participants from the call. */\nexport interface MuteParticipantsRequest {\n  /**\n   * Participants to be muted from the call.\n   * Only ACS Users are supported.\n   */\n  targetParticipants: CommunicationIdentifierModel[];\n  /** Used by customers when calling mid-call actions to correlate the request to the response event. */\n  operationContext?: string;\n}\n\n/** The result payload for muting participants from the call. */\nexport interface MuteParticipantsResult {\n  /** The operation context provided by client. */\n  operationContext?: string;\n}\n\n/** Request payload for cancelling add participant request. */\nexport interface CancelAddParticipantRequest {\n  /** Invitation ID used to add a participant. */\n  invitationId: string;\n  /** Used by customers when calling mid-call actions to correlate the request to the response event. */\n  operationContext?: string;\n  /**\n   * Set a callback URI that overrides the default callback URI set by CreateCall/AnswerCall for this operation.\n   * This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.\n   */\n  operationCallbackUri?: string;\n}\n\n/** Response payload for cancel add participant request. */\nexport interface CancelAddParticipantResponse {\n  /** Invitation ID used to cancel the add participant action. */\n  invitationId?: string;\n  /** The operation context provided by client. */\n  operationContext?: string;\n}\n\n/** The request payload start for call recording operation with call locator. */\nexport interface StartCallRecordingRequest {\n  /** The call locator. */\n  callLocator: CallLocator;\n  /** The uri to send notifications to. */\n  recordingStateCallbackUri?: string;\n  /** The content type of call recording. */\n  recordingContentType?: RecordingContentType;\n  /** The channel type of call recording. */\n  recordingChannelType?: RecordingChannelType;\n  /** The format type of call recording. */\n  recordingFormatType?: RecordingFormatType;\n  /**\n   * The sequential order in which audio channels are assigned to participants in the unmixed recording.\n   * When 'recordingChannelType' is set to 'unmixed' and `audioChannelParticipantOrdering is not specified,\n   * the audio channel to participant mapping will be automatically assigned based on the order in which participant\n   * first audio was detected.  Channel to participant mapping details can be found in the metadata of the recording.\n   */\n  audioChannelParticipantOrdering?: CommunicationIdentifierModel[];\n  /**\n   * The channel affinity of call recording\n   * When 'recordingChannelType' is set to 'unmixed', if channelAffinity is not specified, 'channel' will be automatically assigned.\n   * Channel-Participant mapping details can be found in the metadata of the recording.\n   * ///\n   */\n  channelAffinity?: ChannelAffinity[];\n  /** When set to true will start recording in Pause mode, which can be resumed. */\n  pauseOnStart?: boolean;\n  recordingStorage?: RecordingStorage;\n}\n\n/** The locator used for joining or taking action on a call. */\nexport interface CallLocator {\n  /** The group call id */\n  groupCallId?: string;\n  /** The server call id. */\n  serverCallId?: string;\n  /** The call locator kind. */\n  kind?: CallLocatorKind;\n}\n\n/** Channel affinity for a participant */\nexport interface ChannelAffinity {\n  /** Channel number to which bitstream from a particular participant will be written. */\n  channel?: number;\n  /**\n   * The identifier for the participant whose bitstream will be written to the channel\n   * represented by the channel number.\n   */\n  participant: CommunicationIdentifierModel;\n}\n\nexport interface RecordingStorage {\n  /** Defines the kind of external storage */\n  recordingStorageKind: RecordingStorageKind;\n  /** Uri of a container or a location within a container */\n  recordingDestinationContainerUrl?: string;\n}\n\nexport interface RecordingStateResponse {\n  recordingId?: string;\n  recordingState?: RecordingState;\n  recordingKind?: RecordingKind;\n}\n\n/** The failed to add participants event. */\nexport interface AddParticipantFailed {\n  /** Call connection ID. */\n  callConnectionId?: string;\n  /** Server call ID. */\n  serverCallId?: string;\n  /** Correlation ID for event to call correlation. Also called ChainId for skype chain ID. */\n  correlationId?: string;\n  /** Used by customers when calling mid-call actions to correlate the request to the response event. */\n  operationContext?: string;\n  /** Contains the resulting SIP code, sub-code and message. */\n  resultInformation?: ResultInformation;\n  /** Participant */\n  participant?: CommunicationIdentifierModel;\n}\n\nexport interface ResultInformation {\n  /** Code of the current result. This can be helpful to Call Automation team to troubleshoot the issue if this result was unexpected. */\n  code?: number;\n  /** Subcode of the current result. This can be helpful to Call Automation team to troubleshoot the issue if this result was unexpected. */\n  subCode?: number;\n  /** Detail message that describes the current result. */\n  message?: string;\n}\n\n/** The participants successfully added event. */\nexport interface AddParticipantSucceeded {\n  /** Call connection ID. */\n  callConnectionId?: string;\n  /** Server call ID. */\n  serverCallId?: string;\n  /** Correlation ID for event to call correlation. Also called ChainId for skype chain ID. */\n  correlationId?: string;\n  /** Used by customers when calling mid-call actions to correlate the request to the response event. */\n  operationContext?: string;\n  /** Contains the resulting SIP code, sub-code and message. */\n  resultInformation?: ResultInformation;\n  /** Participant */\n  participant?: CommunicationIdentifierModel;\n}\n\n/** The call connected event. */\nexport interface CallConnected {\n  /** Call connection ID. */\n  callConnectionId?: string;\n  /** Server call ID. */\n  serverCallId?: string;\n  /** Correlation ID for event to call correlation. Also called ChainId for skype chain ID. */\n  correlationId?: string;\n  /** Used by customers to set the context for creating a new call. This property will be null for answering a call. */\n  operationContext?: string;\n}\n\n/** The call disconnected event. */\nexport interface CallDisconnected {\n  /** Call connection ID. */\n  callConnectionId?: string;\n  /** Server call ID. */\n  serverCallId?: string;\n  /** Correlation ID for event to call correlation. Also called ChainId for skype chain ID. */\n  correlationId?: string;\n  /** Used by customers to set the context for creating a new call. This property will be null for answering a call. */\n  operationContext?: string;\n}\n\n/** The call transfer accepted event. */\nexport interface CallTransferAccepted {\n  /** Call connection ID. */\n  callConnectionId?: string;\n  /** Server call ID. */\n  serverCallId?: string;\n  /** Correlation ID for event to call correlation. Also called ChainId for skype chain ID. */\n  correlationId?: string;\n  /** Used by customers when calling mid-call actions to correlate the request to the response event. */\n  operationContext?: string;\n  /** Contains the resulting SIP code, sub-code and message. */\n  resultInformation?: ResultInformation;\n  /** Target who the call is transferred to. */\n  transferTarget?: CommunicationIdentifierModel;\n  /** the participant who is being transferred away. */\n  transferee?: CommunicationIdentifierModel;\n}\n\n/** The call transfer failed event. */\nexport interface CallTransferFailed {\n  /** Call connection ID. */\n  callConnectionId?: string;\n  /** Server call ID. */\n  serverCallId?: string;\n  /** Correlation ID for event to call correlation. Also called ChainId for skype chain ID. */\n  correlationId?: string;\n  /** Used by customers when calling mid-call actions to correlate the request to the response event. */\n  operationContext?: string;\n  /** Contains the resulting SIP code, sub-code and message. */\n  resultInformation?: ResultInformation;\n}\n\n/** The participants updated in a call event. */\nexport interface ParticipantsUpdated {\n  /** Call connection ID. */\n  callConnectionId?: string;\n  /** Server call ID. */\n  serverCallId?: string;\n  /** Correlation ID for event to call correlation. Also called ChainId for skype chain ID. */\n  correlationId?: string;\n  /** The Sequence Number of the event */\n  sequenceNumber?: number;\n  /** The list of participants in the call. */\n  participants?: CallParticipantInternal[];\n}\n\n/** The participant removed event. */\nexport interface RemoveParticipantSucceeded {\n  /** Call connection ID. */\n  callConnectionId?: string;\n  /** Server call ID. */\n  serverCallId?: string;\n  /** Correlation ID for event to call correlation. Also called ChainId for skype chain ID. */\n  correlationId?: string;\n  /** Used by customers when calling mid-call actions to correlate the request to the response event. */\n  operationContext?: string;\n  /** Contains the resulting SIP code, sub-code and message. */\n  resultInformation?: ResultInformation;\n  /** Participant */\n  participant?: CommunicationIdentifierModel;\n}\n\n/** The failed to remove participant event. */\nexport interface RemoveParticipantFailed {\n  /** Call connection ID. */\n  callConnectionId?: string;\n  /** Server call ID. */\n  serverCallId?: string;\n  /** Correlation ID for event to call correlation. Also called ChainId for skype chain ID. */\n  correlationId?: string;\n  /** Used by customers when calling mid-call actions to correlate the request to the response event. */\n  operationContext?: string;\n  /** Contains the resulting SIP code, sub-code and message. */\n  resultInformation?: ResultInformation;\n  /** Participant */\n  participant?: CommunicationIdentifierModel;\n}\n\n/** Successful cancel add participant event. */\nexport interface CancelAddParticipantSucceeded {\n  /** Call connection ID. */\n  callConnectionId?: string;\n  /** Server call ID. */\n  serverCallId?: string;\n  /** Correlation ID for event to call correlation. Also called ChainId for skype chain ID. */\n  correlationId?: string;\n  /** Used by customers when calling mid-call actions to correlate the request to the response event. */\n  operationContext?: string;\n  /** Invitation ID used to cancel the request. */\n  invitationId?: string;\n}\n\n/** Failed cancel add participant event. */\nexport interface CancelAddParticipantFailed {\n  /** Call connection ID. */\n  callConnectionId?: string;\n  /** Server call ID. */\n  serverCallId?: string;\n  /** Correlation ID for event to call correlation. Also called ChainId for skype chain ID. */\n  correlationId?: string;\n  /** Used by customers when calling mid-call actions to correlate the request to the response event. */\n  operationContext?: string;\n  /** Contains the resulting SIP code/sub-code and message from NGC services. */\n  resultInformation?: ResultInformation;\n  /** Invitation ID used to cancel the request. */\n  invitationId?: string;\n}\n\nexport interface RecordingStateChanged {\n  /** Call connection ID. */\n  callConnectionId?: string;\n  /** Server call ID. */\n  serverCallId?: string;\n  /** Correlation ID for event to call correlation. */\n  correlationId?: string;\n  /**\n   * The call recording id\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly recordingId?: string;\n  state?: RecordingState;\n  /**\n   * The time of the recording started\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly startDateTime?: Date;\n  recordingKind?: RecordingKind;\n}\n\nexport interface PlayCompleted {\n  /** Call connection ID. */\n  callConnectionId?: string;\n  /** Server call ID. */\n  serverCallId?: string;\n  /** Correlation ID for event to call correlation. */\n  correlationId?: string;\n  /** Used by customers when calling mid-call actions to correlate the request to the response event. */\n  operationContext?: string;\n  /** Contains the resulting SIP code, sub-code and message. */\n  resultInformation?: ResultInformation;\n}\n\nexport interface PlayFailed {\n  /** Call connection ID. */\n  callConnectionId?: string;\n  /** Server call ID. */\n  serverCallId?: string;\n  /** Correlation ID for event to call correlation. */\n  correlationId?: string;\n  /** Used by customers when calling mid-call actions to correlate the request to the response event. */\n  operationContext?: string;\n  /** Contains the resulting SIP code, sub-code and message. */\n  resultInformation?: ResultInformation;\n}\n\nexport interface PlayCanceled {\n  /** Call connection ID. */\n  callConnectionId?: string;\n  /** Server call ID. */\n  serverCallId?: string;\n  /** Correlation ID for event to call correlation. */\n  correlationId?: string;\n  /** Used by customers when calling mid-call actions to correlate the request to the response event. */\n  operationContext?: string;\n}\n\nexport interface RecognizeCompleted {\n  /** Call connection ID. */\n  callConnectionId?: string;\n  /** Server call ID. */\n  serverCallId?: string;\n  /** Correlation ID for event to call correlation. */\n  correlationId?: string;\n  /** Used by customers when calling mid-call actions to correlate the request to the response event. */\n  operationContext?: string;\n  /** Contains the resulting SIP code, sub-code and message. */\n  resultInformation?: ResultInformation;\n  /**\n   * Determines the sub-type of the recognize operation.\n   * In case of cancel operation the this field is not set and is returned empty\n   */\n  recognitionType?: RecognitionType;\n  /** Defines the result for RecognitionType = Dtmf */\n  dtmfResult?: DtmfResult;\n  /** Defines the result for RecognitionType = Choices */\n  choiceResult?: ChoiceResult;\n  /**\n   * Defines the result for RecognitionType = Speech and SpeechOrDtmf\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly speechResult?: SpeechResult;\n}\n\nexport interface DtmfResult {\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly tones?: Tone[];\n}\n\nexport interface ChoiceResult {\n  /** Label is the primary identifier for the choice detected */\n  label?: string;\n  /**\n   * Phrases are set to the value if choice is selected via phrase detection.\n   * If Dtmf input is recognized, then Label will be the identifier for the choice detected and phrases will be set to null\n   */\n  recognizedPhrase?: string;\n}\n\n/** The speech status as a result. */\nexport interface SpeechResult {\n  /** The recognized speech in string. */\n  speech?: string;\n}\n\nexport interface RecognizeFailed {\n  /** Call connection ID. */\n  callConnectionId?: string;\n  /** Server call ID. */\n  serverCallId?: string;\n  /** Correlation ID for event to call correlation. */\n  correlationId?: string;\n  /** Used by customers when calling mid-call actions to correlate the request to the response event. */\n  operationContext?: string;\n  /** Contains the resulting SIP code, sub-code and message. */\n  resultInformation?: ResultInformation;\n}\n\nexport interface RecognizeCanceled {\n  /** Call connection ID. */\n  callConnectionId?: string;\n  /** Server call ID. */\n  serverCallId?: string;\n  /** Correlation ID for event to call correlation. */\n  correlationId?: string;\n  /** Used by customers when calling mid-call actions to correlate the request to the response event. */\n  operationContext?: string;\n}\n\nexport interface ContinuousDtmfRecognitionToneFailed {\n  /** Call connection ID. */\n  callConnectionId?: string;\n  /** Server call ID. */\n  serverCallId?: string;\n  /** Correlation ID for event to call correlation. */\n  correlationId?: string;\n  /** Contains the resulting SIP code, sub-code and message. */\n  resultInformation?: ResultInformation;\n  /** Used by customers when calling mid-call actions to correlate the request to the response event. */\n  operationContext?: string;\n}\n\nexport interface ContinuousDtmfRecognitionToneReceived {\n  /**\n   * The sequence id which can be used to determine if the same tone was played multiple times or if any tones were missed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sequenceId?: number;\n  tone?: Tone;\n  /** Call connection ID. */\n  callConnectionId?: string;\n  /** Server call ID. */\n  serverCallId?: string;\n  /** Correlation ID for event to call correlation. Also called ChainId or skype chain ID. */\n  correlationId?: string;\n  /** Contains the resulting SIP code, sub-code and message. */\n  resultInformation?: ResultInformation;\n  /** Used by customers when calling mid-call actions to correlate the request to the response event. */\n  operationContext?: string;\n}\n\nexport interface ContinuousDtmfRecognitionStopped {\n  /** Call connection ID. */\n  callConnectionId?: string;\n  /** Server call ID. */\n  serverCallId?: string;\n  /** Correlation ID for event to call correlation. */\n  correlationId?: string;\n  /** Used by customers when calling mid-call actions to correlate the request to the response event. */\n  operationContext?: string;\n  /** Contains the resulting SIP code, sub-code and message. */\n  resultInformation?: ResultInformation;\n}\n\nexport interface SendDtmfTonesCompleted {\n  /** Call connection ID. */\n  callConnectionId?: string;\n  /** Server call ID. */\n  serverCallId?: string;\n  /** Correlation ID for event to call correlation. */\n  correlationId?: string;\n  /** Used by customers when calling mid-call actions to correlate the request to the response event. */\n  operationContext?: string;\n  /** Contains the resulting SIP code, sub-code and message. */\n  resultInformation?: ResultInformation;\n}\n\nexport interface SendDtmfTonesFailed {\n  /** Call connection ID. */\n  callConnectionId?: string;\n  /** Server call ID. */\n  serverCallId?: string;\n  /** Correlation ID for event to call correlation. */\n  correlationId?: string;\n  /** Used by customers when calling mid-call actions to correlate the request to the response event. */\n  operationContext?: string;\n  /** Contains the resulting SIP code, sub-code and message. */\n  resultInformation?: ResultInformation;\n}\n\n/** Known values of {@link CommunicationIdentifierModelKind} that the service accepts. */\nexport enum KnownCommunicationIdentifierModelKind {\n  /** Unknown */\n  Unknown = \"unknown\",\n  /** CommunicationUser */\n  CommunicationUser = \"communicationUser\",\n  /** PhoneNumber */\n  PhoneNumber = \"phoneNumber\",\n  /** MicrosoftTeamsUser */\n  MicrosoftTeamsUser = \"microsoftTeamsUser\",\n  /** MicrosoftTeamsApp */\n  MicrosoftTeamsApp = \"microsoftTeamsApp\",\n}\n\n/**\n * Defines values for CommunicationIdentifierModelKind. \\\n * {@link KnownCommunicationIdentifierModelKind} can be used interchangeably with CommunicationIdentifierModelKind,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **unknown** \\\n * **communicationUser** \\\n * **phoneNumber** \\\n * **microsoftTeamsUser** \\\n * **microsoftTeamsApp**\n */\nexport type CommunicationIdentifierModelKind = string;\n\n/** Known values of {@link CommunicationCloudEnvironmentModel} that the service accepts. */\nexport enum KnownCommunicationCloudEnvironmentModel {\n  /** Public */\n  Public = \"public\",\n  /** Dod */\n  Dod = \"dod\",\n  /** Gcch */\n  Gcch = \"gcch\",\n}\n\n/**\n * Defines values for CommunicationCloudEnvironmentModel. \\\n * {@link KnownCommunicationCloudEnvironmentModel} can be used interchangeably with CommunicationCloudEnvironmentModel,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **public** \\\n * **dod** \\\n * **gcch**\n */\nexport type CommunicationCloudEnvironmentModel = string;\n\n/** Known values of {@link CallConnectionStateModel} that the service accepts. */\nexport enum KnownCallConnectionStateModel {\n  /** Unknown */\n  Unknown = \"unknown\",\n  /** Connecting */\n  Connecting = \"connecting\",\n  /** Connected */\n  Connected = \"connected\",\n  /** Transferring */\n  Transferring = \"transferring\",\n  /** TransferAccepted */\n  TransferAccepted = \"transferAccepted\",\n  /** Disconnecting */\n  Disconnecting = \"disconnecting\",\n  /** Disconnected */\n  Disconnected = \"disconnected\",\n}\n\n/**\n * Defines values for CallConnectionStateModel. \\\n * {@link KnownCallConnectionStateModel} can be used interchangeably with CallConnectionStateModel,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **unknown** \\\n * **connecting** \\\n * **connected** \\\n * **transferring** \\\n * **transferAccepted** \\\n * **disconnecting** \\\n * **disconnected**\n */\nexport type CallConnectionStateModel = string;\n\n/** Known values of {@link CallRejectReason} that the service accepts. */\nexport enum KnownCallRejectReason {\n  /** None */\n  None = \"none\",\n  /** Busy */\n  Busy = \"busy\",\n  /** Forbidden */\n  Forbidden = \"forbidden\",\n}\n\n/**\n * Defines values for CallRejectReason. \\\n * {@link KnownCallRejectReason} can be used interchangeably with CallRejectReason,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **none** \\\n * **busy** \\\n * **forbidden**\n */\nexport type CallRejectReason = string;\n\n/** Known values of {@link PlaySourceType} that the service accepts. */\nexport enum KnownPlaySourceType {\n  /** File */\n  File = \"file\",\n  /** Text */\n  Text = \"text\",\n  /** Ssml */\n  Ssml = \"ssml\",\n}\n\n/**\n * Defines values for PlaySourceType. \\\n * {@link KnownPlaySourceType} can be used interchangeably with PlaySourceType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **file** \\\n * **text** \\\n * **ssml**\n */\nexport type PlaySourceType = string;\n\n/** Known values of {@link VoiceKind} that the service accepts. */\nexport enum KnownVoiceKind {\n  /** Male */\n  Male = \"male\",\n  /** Female */\n  Female = \"female\",\n}\n\n/**\n * Defines values for VoiceKind. \\\n * {@link KnownVoiceKind} can be used interchangeably with VoiceKind,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **male** \\\n * **female**\n */\nexport type VoiceKind = string;\n\n/** Known values of {@link RecognizeInputType} that the service accepts. */\nexport enum KnownRecognizeInputType {\n  /** Dtmf */\n  Dtmf = \"dtmf\",\n  /** Speech */\n  Speech = \"speech\",\n  /** SpeechOrDtmf */\n  SpeechOrDtmf = \"speechOrDtmf\",\n  /** Choices */\n  Choices = \"choices\",\n}\n\n/**\n * Defines values for RecognizeInputType. \\\n * {@link KnownRecognizeInputType} can be used interchangeably with RecognizeInputType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **dtmf** \\\n * **speech** \\\n * **speechOrDtmf** \\\n * **choices**\n */\nexport type RecognizeInputType = string;\n\n/** Known values of {@link Tone} that the service accepts. */\nexport enum KnownTone {\n  /** Zero */\n  Zero = \"zero\",\n  /** One */\n  One = \"one\",\n  /** Two */\n  Two = \"two\",\n  /** Three */\n  Three = \"three\",\n  /** Four */\n  Four = \"four\",\n  /** Five */\n  Five = \"five\",\n  /** Six */\n  Six = \"six\",\n  /** Seven */\n  Seven = \"seven\",\n  /** Eight */\n  Eight = \"eight\",\n  /** Nine */\n  Nine = \"nine\",\n  /** A */\n  A = \"a\",\n  /** B */\n  B = \"b\",\n  /** C */\n  C = \"c\",\n  /** D */\n  D = \"d\",\n  /** Pound */\n  Pound = \"pound\",\n  /** Asterisk */\n  Asterisk = \"asterisk\",\n}\n\n/**\n * Defines values for Tone. \\\n * {@link KnownTone} can be used interchangeably with Tone,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **zero** \\\n * **one** \\\n * **two** \\\n * **three** \\\n * **four** \\\n * **five** \\\n * **six** \\\n * **seven** \\\n * **eight** \\\n * **nine** \\\n * **a** \\\n * **b** \\\n * **c** \\\n * **d** \\\n * **pound** \\\n * **asterisk**\n */\nexport type Tone = string;\n\n/** Known values of {@link CallLocatorKind} that the service accepts. */\nexport enum KnownCallLocatorKind {\n  /** GroupCallLocator */\n  GroupCallLocator = \"groupCallLocator\",\n  /** ServerCallLocator */\n  ServerCallLocator = \"serverCallLocator\",\n}\n\n/**\n * Defines values for CallLocatorKind. \\\n * {@link KnownCallLocatorKind} can be used interchangeably with CallLocatorKind,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **groupCallLocator** \\\n * **serverCallLocator**\n */\nexport type CallLocatorKind = string;\n\n/** Known values of {@link RecordingContentType} that the service accepts. */\nexport enum KnownRecordingContentType {\n  /** Audio */\n  Audio = \"audio\",\n  /** AudioVideo */\n  AudioVideo = \"audioVideo\",\n}\n\n/**\n * Defines values for RecordingContentType. \\\n * {@link KnownRecordingContentType} can be used interchangeably with RecordingContentType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **audio** \\\n * **audioVideo**\n */\nexport type RecordingContentType = string;\n\n/** Known values of {@link RecordingChannelType} that the service accepts. */\nexport enum KnownRecordingChannelType {\n  /** Mixed */\n  Mixed = \"mixed\",\n  /** Unmixed */\n  Unmixed = \"unmixed\",\n}\n\n/**\n * Defines values for RecordingChannelType. \\\n * {@link KnownRecordingChannelType} can be used interchangeably with RecordingChannelType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **mixed** \\\n * **unmixed**\n */\nexport type RecordingChannelType = string;\n\n/** Known values of {@link RecordingFormatType} that the service accepts. */\nexport enum KnownRecordingFormatType {\n  /** Wav */\n  Wav = \"wav\",\n  /** Mp3 */\n  Mp3 = \"mp3\",\n  /** Mp4 */\n  Mp4 = \"mp4\",\n}\n\n/**\n * Defines values for RecordingFormatType. \\\n * {@link KnownRecordingFormatType} can be used interchangeably with RecordingFormatType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **wav** \\\n * **mp3** \\\n * **mp4**\n */\nexport type RecordingFormatType = string;\n\n/** Known values of {@link RecordingStorageKind} that the service accepts. */\nexport enum KnownRecordingStorageKind {\n  /** Storage managed by Azure Communication Services */\n  AzureCommunicationServices = \"AzureCommunicationServices\",\n  /** Storage managed by provided Azure blob */\n  AzureBlobStorage = \"AzureBlobStorage\",\n}\n\n/**\n * Defines values for RecordingStorageKind. \\\n * {@link KnownRecordingStorageKind} can be used interchangeably with RecordingStorageKind,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **AzureCommunicationServices**: Storage managed by Azure Communication Services \\\n * **AzureBlobStorage**: Storage managed by provided Azure blob\n */\nexport type RecordingStorageKind = string;\n\n/** Known values of {@link RecordingState} that the service accepts. */\nexport enum KnownRecordingState {\n  /** Active */\n  Active = \"active\",\n  /** Inactive */\n  Inactive = \"inactive\",\n}\n\n/**\n * Defines values for RecordingState. \\\n * {@link KnownRecordingState} can be used interchangeably with RecordingState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **active** \\\n * **inactive**\n */\nexport type RecordingState = string;\n\n/** Known values of {@link RecordingKind} that the service accepts. */\nexport enum KnownRecordingKind {\n  /** Recording initiated by Azure Communication Services */\n  AzureCommunicationServices = \"AzureCommunicationServices\",\n  /** Recording initiated by Teams user */\n  Teams = \"Teams\",\n  /** Recording initiated by Teams compliance policy */\n  TeamsCompliance = \"TeamsCompliance\",\n}\n\n/**\n * Defines values for RecordingKind. \\\n * {@link KnownRecordingKind} can be used interchangeably with RecordingKind,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **AzureCommunicationServices**: Recording initiated by Azure Communication Services \\\n * **Teams**: Recording initiated by Teams user \\\n * **TeamsCompliance**: Recording initiated by Teams compliance policy\n */\nexport type RecordingKind = string;\n\n/** Known values of {@link RecognitionType} that the service accepts. */\nexport enum KnownRecognitionType {\n  /** Dtmf */\n  Dtmf = \"dtmf\",\n  /** Speech */\n  Speech = \"speech\",\n  /** Choices */\n  Choices = \"choices\",\n}\n\n/**\n * Defines values for RecognitionType. \\\n * {@link KnownRecognitionType} can be used interchangeably with RecognitionType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **dtmf** \\\n * **speech** \\\n * **choices**\n */\nexport type RecognitionType = string;\n\n/** Optional parameters. */\nexport interface CreateCallOptionalParams extends coreClient.OperationOptions {\n  /** If specified, the client directs that the request is repeatable; that is, that the client can make the request multiple times with the same Repeatability-Request-Id and get back an appropriate response without the server executing the request multiple times. The value of the Repeatability-Request-Id is an opaque string representing a client-generated unique identifier for the request. It is a version 4 (random) UUID. */\n  repeatabilityRequestID?: string;\n  /** If Repeatability-Request-ID header is specified, then Repeatability-First-Sent header must also be specified. The value should be the date and time at which the request was first created, expressed using the IMF-fixdate form of HTTP-date. Example: Sun, 06 Nov 1994 08:49:37 GMT. */\n  repeatabilityFirstSent?: Date;\n}\n\n/** Contains response data for the createCall operation. */\nexport type CreateCallResponse = CallConnectionPropertiesInternal;\n\n/** Optional parameters. */\nexport interface AnswerCallOptionalParams extends coreClient.OperationOptions {\n  /** If specified, the client directs that the request is repeatable; that is, that the client can make the request multiple times with the same Repeatability-Request-Id and get back an appropriate response without the server executing the request multiple times. The value of the Repeatability-Request-Id is an opaque string representing a client-generated unique identifier for the request. It is a version 4 (random) UUID. */\n  repeatabilityRequestID?: string;\n  /** If Repeatability-Request-ID header is specified, then Repeatability-First-Sent header must also be specified. The value should be the date and time at which the request was first created, expressed using the IMF-fixdate form of HTTP-date. Example: Sun, 06 Nov 1994 08:49:37 GMT. */\n  repeatabilityFirstSent?: Date;\n}\n\n/** Contains response data for the answerCall operation. */\nexport type AnswerCallResponse = CallConnectionPropertiesInternal;\n\n/** Optional parameters. */\nexport interface RedirectCallOptionalParams\n  extends coreClient.OperationOptions {\n  /** If specified, the client directs that the request is repeatable; that is, that the client can make the request multiple times with the same Repeatability-Request-Id and get back an appropriate response without the server executing the request multiple times. The value of the Repeatability-Request-Id is an opaque string representing a client-generated unique identifier for the request. It is a version 4 (random) UUID. */\n  repeatabilityRequestID?: string;\n  /** If Repeatability-Request-ID header is specified, then Repeatability-First-Sent header must also be specified. The value should be the date and time at which the request was first created, expressed using the IMF-fixdate form of HTTP-date. Example: Sun, 06 Nov 1994 08:49:37 GMT. */\n  repeatabilityFirstSent?: Date;\n}\n\n/** Optional parameters. */\nexport interface RejectCallOptionalParams extends coreClient.OperationOptions {\n  /** If specified, the client directs that the request is repeatable; that is, that the client can make the request multiple times with the same Repeatability-Request-Id and get back an appropriate response without the server executing the request multiple times. The value of the Repeatability-Request-Id is an opaque string representing a client-generated unique identifier for the request. It is a version 4 (random) UUID. */\n  repeatabilityRequestID?: string;\n  /** If Repeatability-Request-ID header is specified, then Repeatability-First-Sent header must also be specified. The value should be the date and time at which the request was first created, expressed using the IMF-fixdate form of HTTP-date. Example: Sun, 06 Nov 1994 08:49:37 GMT. */\n  repeatabilityFirstSent?: Date;\n}\n\n/** Optional parameters. */\nexport interface CallConnectionGetCallOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getCall operation. */\nexport type CallConnectionGetCallResponse = CallConnectionPropertiesInternal;\n\n/** Optional parameters. */\nexport interface CallConnectionHangupCallOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface CallConnectionTerminateCallOptionalParams\n  extends coreClient.OperationOptions {\n  /** If specified, the client directs that the request is repeatable; that is, that the client can make the request multiple times with the same Repeatability-Request-Id and get back an appropriate response without the server executing the request multiple times. The value of the Repeatability-Request-Id is an opaque string representing a client-generated unique identifier for the request. It is a version 4 (random) UUID. */\n  repeatabilityRequestID?: string;\n  /** If Repeatability-Request-ID header is specified, then Repeatability-First-Sent header must also be specified. The value should be the date and time at which the request was first created, expressed using the IMF-fixdate form of HTTP-date. Example: Sun, 06 Nov 1994 08:49:37 GMT. */\n  repeatabilityFirstSent?: Date;\n}\n\n/** Optional parameters. */\nexport interface CallConnectionTransferToParticipantOptionalParams\n  extends coreClient.OperationOptions {\n  /** If specified, the client directs that the request is repeatable; that is, that the client can make the request multiple times with the same Repeatability-Request-Id and get back an appropriate response without the server executing the request multiple times. The value of the Repeatability-Request-Id is an opaque string representing a client-generated unique identifier for the request. It is a version 4 (random) UUID. */\n  repeatabilityRequestID?: string;\n  /** If Repeatability-Request-ID header is specified, then Repeatability-First-Sent header must also be specified. The value should be the date and time at which the request was first created, expressed using the IMF-fixdate form of HTTP-date. Example: Sun, 06 Nov 1994 08:49:37 GMT. */\n  repeatabilityFirstSent?: Date;\n}\n\n/** Contains response data for the transferToParticipant operation. */\nexport type CallConnectionTransferToParticipantResponse = TransferCallResponse;\n\n/** Optional parameters. */\nexport interface CallConnectionGetParticipantsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getParticipants operation. */\nexport type CallConnectionGetParticipantsResponse = GetParticipantsResponse;\n\n/** Optional parameters. */\nexport interface CallConnectionAddParticipantOptionalParams\n  extends coreClient.OperationOptions {\n  /** If specified, the client directs that the request is repeatable; that is, that the client can make the request multiple times with the same Repeatability-Request-Id and get back an appropriate response without the server executing the request multiple times. The value of the Repeatability-Request-Id is an opaque string representing a client-generated unique identifier for the request. It is a version 4 (random) UUID. */\n  repeatabilityRequestID?: string;\n  /** If Repeatability-Request-ID header is specified, then Repeatability-First-Sent header must also be specified. The value should be the date and time at which the request was first created, expressed using the IMF-fixdate form of HTTP-date. Example: Sun, 06 Nov 1994 08:49:37 GMT. */\n  repeatabilityFirstSent?: Date;\n}\n\n/** Contains response data for the addParticipant operation. */\nexport type CallConnectionAddParticipantResponse = AddParticipantResponse;\n\n/** Optional parameters. */\nexport interface CallConnectionRemoveParticipantOptionalParams\n  extends coreClient.OperationOptions {\n  /** If specified, the client directs that the request is repeatable; that is, that the client can make the request multiple times with the same Repeatability-Request-Id and get back an appropriate response without the server executing the request multiple times. The value of the Repeatability-Request-Id is an opaque string representing a client-generated unique identifier for the request. It is a version 4 (random) UUID. */\n  repeatabilityRequestID?: string;\n  /** If Repeatability-Request-ID header is specified, then Repeatability-First-Sent header must also be specified. The value should be the date and time at which the request was first created, expressed using the IMF-fixdate form of HTTP-date. Example: Sun, 06 Nov 1994 08:49:37 GMT. */\n  repeatabilityFirstSent?: Date;\n}\n\n/** Contains response data for the removeParticipant operation. */\nexport type CallConnectionRemoveParticipantResponse = RemoveParticipantResponse;\n\n/** Optional parameters. */\nexport interface CallConnectionMuteOptionalParams\n  extends coreClient.OperationOptions {\n  /** If specified, the client directs that the request is repeatable; that is, that the client can make the request multiple times with the same Repeatability-Request-Id and get back an appropriate response without the server executing the request multiple times. The value of the Repeatability-Request-Id is an opaque string representing a client-generated unique identifier for the request. It is a version 4 (random) UUID. */\n  repeatabilityRequestID?: string;\n  /** If Repeatability-Request-ID header is specified, then Repeatability-First-Sent header must also be specified. The value should be the date and time at which the request was first created, expressed using the IMF-fixdate form of HTTP-date. Example: Sun, 06 Nov 1994 08:49:37 GMT. */\n  repeatabilityFirstSent?: Date;\n}\n\n/** Contains response data for the mute operation. */\nexport type CallConnectionMuteResponse = MuteParticipantsResult;\n\n/** Optional parameters. */\nexport interface CallConnectionCancelAddParticipantOptionalParams\n  extends coreClient.OperationOptions {\n  /** If specified, the client directs that the request is repeatable; that is, that the client can make the request multiple times with the same Repeatability-Request-Id and get back an appropriate response without the server executing the request multiple times. The value of the Repeatability-Request-Id is an opaque string representing a client-generated unique identifier for the request. It is a version 4 (random) UUID. */\n  repeatabilityRequestID?: string;\n  /** If Repeatability-Request-ID header is specified, then Repeatability-First-Sent header must also be specified. The value should be the date and time at which the request was first created, expressed using the IMF-fixdate form of HTTP-date. Example: Sun, 06 Nov 1994 08:49:37 GMT. */\n  repeatabilityFirstSent?: Date;\n}\n\n/** Contains response data for the cancelAddParticipant operation. */\nexport type CallConnectionCancelAddParticipantResponse =\n  CancelAddParticipantResponse;\n\n/** Optional parameters. */\nexport interface CallConnectionGetParticipantOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getParticipant operation. */\nexport type CallConnectionGetParticipantResponse = CallParticipantInternal;\n\n/** Optional parameters. */\nexport interface CallConnectionGetParticipantsNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getParticipantsNext operation. */\nexport type CallConnectionGetParticipantsNextResponse = GetParticipantsResponse;\n\n/** Optional parameters. */\nexport interface CallMediaPlayOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface CallMediaCancelAllMediaOperationsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface CallMediaRecognizeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface CallMediaStartContinuousDtmfRecognitionOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface CallMediaStopContinuousDtmfRecognitionOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface CallMediaSendDtmfTonesOptionalParams\n  extends coreClient.OperationOptions {\n  /** If specified, the client directs that the request is repeatable; that is, that the client can make the request multiple times with the same Repeatability-Request-Id and get back an appropriate response without the server executing the request multiple times. The value of the Repeatability-Request-Id is an opaque string representing a client-generated unique identifier for the request. It is a version 4 (random) UUID. */\n  repeatabilityRequestID?: string;\n  /** If Repeatability-Request-ID header is specified, then Repeatability-First-Sent header must also be specified. The value should be the date and time at which the request was first created, expressed using the IMF-fixdate form of HTTP-date. Example: Sun, 06 Nov 1994 08:49:37 GMT. */\n  repeatabilityFirstSent?: Date;\n}\n\n/** Contains response data for the sendDtmfTones operation. */\nexport type CallMediaSendDtmfTonesResponse = SendDtmfTonesResult;\n\n/** Optional parameters. */\nexport interface CallRecordingStartRecordingOptionalParams\n  extends coreClient.OperationOptions {\n  /** If specified, the client directs that the request is repeatable; that is, that the client can make the request multiple times with the same Repeatability-Request-Id and get back an appropriate response without the server executing the request multiple times. The value of the Repeatability-Request-Id is an opaque string representing a client-generated unique identifier for the request. It is a version 4 (random) UUID. */\n  repeatabilityRequestID?: string;\n  /** If Repeatability-Request-ID header is specified, then Repeatability-First-Sent header must also be specified. The value should be the date and time at which the request was first created, expressed using the IMF-fixdate form of HTTP-date. Example: Sun, 06 Nov 1994 08:49:37 GMT. */\n  repeatabilityFirstSent?: Date;\n}\n\n/** Contains response data for the startRecording operation. */\nexport type CallRecordingStartRecordingResponse = RecordingStateResponse;\n\n/** Optional parameters. */\nexport interface CallRecordingGetRecordingPropertiesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getRecordingProperties operation. */\nexport type CallRecordingGetRecordingPropertiesResponse =\n  RecordingStateResponse;\n\n/** Optional parameters. */\nexport interface CallRecordingStopRecordingOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface CallRecordingPauseRecordingOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface CallRecordingResumeRecordingOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface CallAutomationApiClientOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** Api Version */\n  apiVersion?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport const CreateCallRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CreateCallRequest\",\n    modelProperties: {\n      targets: {\n        serializedName: \"targets\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CommunicationIdentifierModel\",\n            },\n          },\n        },\n      },\n      sourceCallerIdNumber: {\n        serializedName: \"sourceCallerIdNumber\",\n        type: {\n          name: \"Composite\",\n          className: \"PhoneNumberIdentifierModel\",\n        },\n      },\n      sourceDisplayName: {\n        serializedName: \"sourceDisplayName\",\n        type: {\n          name: \"String\",\n        },\n      },\n      source: {\n        serializedName: \"source\",\n        type: {\n          name: \"Composite\",\n          className: \"CommunicationUserIdentifierModel\",\n        },\n      },\n      operationContext: {\n        serializedName: \"operationContext\",\n        type: {\n          name: \"String\",\n        },\n      },\n      callbackUri: {\n        serializedName: \"callbackUri\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      callIntelligenceOptions: {\n        serializedName: \"callIntelligenceOptions\",\n        type: {\n          name: \"Composite\",\n          className: \"CallIntelligenceOptionsInternal\",\n        },\n      },\n    },\n  },\n};\n\nexport const CommunicationIdentifierModel: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CommunicationIdentifierModel\",\n    modelProperties: {\n      kind: {\n        serializedName: \"kind\",\n        type: {\n          name: \"String\",\n        },\n      },\n      rawId: {\n        serializedName: \"rawId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      communicationUser: {\n        serializedName: \"communicationUser\",\n        type: {\n          name: \"Composite\",\n          className: \"CommunicationUserIdentifierModel\",\n        },\n      },\n      phoneNumber: {\n        serializedName: \"phoneNumber\",\n        type: {\n          name: \"Composite\",\n          className: \"PhoneNumberIdentifierModel\",\n        },\n      },\n      microsoftTeamsUser: {\n        serializedName: \"microsoftTeamsUser\",\n        type: {\n          name: \"Composite\",\n          className: \"MicrosoftTeamsUserIdentifierModel\",\n        },\n      },\n      microsoftTeamsApp: {\n        serializedName: \"microsoftTeamsApp\",\n        type: {\n          name: \"Composite\",\n          className: \"MicrosoftTeamsAppIdentifierModel\",\n        },\n      },\n    },\n  },\n};\n\nexport const CommunicationUserIdentifierModel: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CommunicationUserIdentifierModel\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PhoneNumberIdentifierModel: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PhoneNumberIdentifierModel\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const MicrosoftTeamsUserIdentifierModel: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MicrosoftTeamsUserIdentifierModel\",\n    modelProperties: {\n      userId: {\n        serializedName: \"userId\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      isAnonymous: {\n        serializedName: \"isAnonymous\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      cloud: {\n        serializedName: \"cloud\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const MicrosoftTeamsAppIdentifierModel: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MicrosoftTeamsAppIdentifierModel\",\n    modelProperties: {\n      appId: {\n        serializedName: \"appId\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      cloud: {\n        serializedName: \"cloud\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const CallIntelligenceOptionsInternal: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CallIntelligenceOptionsInternal\",\n    modelProperties: {\n      cognitiveServicesEndpoint: {\n        serializedName: \"cognitiveServicesEndpoint\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const CallConnectionPropertiesInternal: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CallConnectionPropertiesInternal\",\n    modelProperties: {\n      callConnectionId: {\n        serializedName: \"callConnectionId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      serverCallId: {\n        serializedName: \"serverCallId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      targets: {\n        serializedName: \"targets\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CommunicationIdentifierModel\",\n            },\n          },\n        },\n      },\n      callConnectionState: {\n        serializedName: \"callConnectionState\",\n        type: {\n          name: \"String\",\n        },\n      },\n      callbackUri: {\n        serializedName: \"callbackUri\",\n        type: {\n          name: \"String\",\n        },\n      },\n      sourceCallerIdNumber: {\n        serializedName: \"sourceCallerIdNumber\",\n        type: {\n          name: \"Composite\",\n          className: \"PhoneNumberIdentifierModel\",\n        },\n      },\n      sourceDisplayName: {\n        serializedName: \"sourceDisplayName\",\n        type: {\n          name: \"String\",\n        },\n      },\n      source: {\n        serializedName: \"source\",\n        type: {\n          name: \"Composite\",\n          className: \"CommunicationIdentifierModel\",\n        },\n      },\n      correlationId: {\n        serializedName: \"correlationId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      answeredBy: {\n        serializedName: \"answeredBy\",\n        type: {\n          name: \"Composite\",\n          className: \"CommunicationUserIdentifierModel\",\n        },\n      },\n    },\n  },\n};\n\nexport const CommunicationErrorResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CommunicationErrorResponse\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"CommunicationError\",\n        },\n      },\n    },\n  },\n};\n\nexport const CommunicationError: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CommunicationError\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      message: {\n        serializedName: \"message\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      target: {\n        serializedName: \"target\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      details: {\n        serializedName: \"details\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CommunicationError\",\n            },\n          },\n        },\n      },\n      innerError: {\n        serializedName: \"innererror\",\n        type: {\n          name: \"Composite\",\n          className: \"CommunicationError\",\n        },\n      },\n    },\n  },\n};\n\nexport const AnswerCallRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AnswerCallRequest\",\n    modelProperties: {\n      incomingCallContext: {\n        serializedName: \"incomingCallContext\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      callbackUri: {\n        serializedName: \"callbackUri\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      operationContext: {\n        serializedName: \"operationContext\",\n        type: {\n          name: \"String\",\n        },\n      },\n      callIntelligenceOptions: {\n        serializedName: \"callIntelligenceOptions\",\n        type: {\n          name: \"Composite\",\n          className: \"CallIntelligenceOptionsInternal\",\n        },\n      },\n      answeredBy: {\n        serializedName: \"answeredBy\",\n        type: {\n          name: \"Composite\",\n          className: \"CommunicationUserIdentifierModel\",\n        },\n      },\n    },\n  },\n};\n\nexport const RedirectCallRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RedirectCallRequest\",\n    modelProperties: {\n      incomingCallContext: {\n        serializedName: \"incomingCallContext\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      target: {\n        serializedName: \"target\",\n        type: {\n          name: \"Composite\",\n          className: \"CommunicationIdentifierModel\",\n        },\n      },\n    },\n  },\n};\n\nexport const RejectCallRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RejectCallRequest\",\n    modelProperties: {\n      incomingCallContext: {\n        serializedName: \"incomingCallContext\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      callRejectReason: {\n        serializedName: \"callRejectReason\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const TransferToParticipantRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TransferToParticipantRequest\",\n    modelProperties: {\n      targetParticipant: {\n        serializedName: \"targetParticipant\",\n        type: {\n          name: \"Composite\",\n          className: \"CommunicationIdentifierModel\",\n        },\n      },\n      operationContext: {\n        serializedName: \"operationContext\",\n        type: {\n          name: \"String\",\n        },\n      },\n      transferee: {\n        serializedName: \"transferee\",\n        type: {\n          name: \"Composite\",\n          className: \"CommunicationIdentifierModel\",\n        },\n      },\n      operationCallbackUri: {\n        serializedName: \"operationCallbackUri\",\n        type: {\n          name: \"String\",\n        },\n      },\n      customCallingContext: {\n        serializedName: \"customCallingContext\",\n        type: {\n          name: \"Composite\",\n          className: \"CustomCallingContextInternal\",\n        },\n      },\n    },\n  },\n};\n\nexport const CustomCallingContextInternal: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CustomCallingContextInternal\",\n    modelProperties: {\n      voipHeaders: {\n        serializedName: \"voipHeaders\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n      sipHeaders: {\n        serializedName: \"sipHeaders\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n    },\n  },\n};\n\nexport const TransferCallResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TransferCallResponse\",\n    modelProperties: {\n      operationContext: {\n        serializedName: \"operationContext\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PlayRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PlayRequest\",\n    modelProperties: {\n      playSources: {\n        serializedName: \"playSources\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PlaySourceInternal\",\n            },\n          },\n        },\n      },\n      playTo: {\n        serializedName: \"playTo\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CommunicationIdentifierModel\",\n            },\n          },\n        },\n      },\n      playOptions: {\n        serializedName: \"playOptions\",\n        type: {\n          name: \"Composite\",\n          className: \"PlayOptionsInternal\",\n        },\n      },\n      operationContext: {\n        serializedName: \"operationContext\",\n        type: {\n          name: \"String\",\n        },\n      },\n      operationCallbackUri: {\n        serializedName: \"operationCallbackUri\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PlaySourceInternal: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PlaySourceInternal\",\n    modelProperties: {\n      kind: {\n        serializedName: \"kind\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      playSourceCacheId: {\n        serializedName: \"playSourceCacheId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      file: {\n        serializedName: \"file\",\n        type: {\n          name: \"Composite\",\n          className: \"FileSourceInternal\",\n        },\n      },\n      text: {\n        serializedName: \"text\",\n        type: {\n          name: \"Composite\",\n          className: \"TextSourceInternal\",\n        },\n      },\n      ssml: {\n        serializedName: \"ssml\",\n        type: {\n          name: \"Composite\",\n          className: \"SsmlSourceInternal\",\n        },\n      },\n    },\n  },\n};\n\nexport const FileSourceInternal: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FileSourceInternal\",\n    modelProperties: {\n      uri: {\n        serializedName: \"uri\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const TextSourceInternal: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TextSourceInternal\",\n    modelProperties: {\n      text: {\n        serializedName: \"text\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      sourceLocale: {\n        serializedName: \"sourceLocale\",\n        type: {\n          name: \"String\",\n        },\n      },\n      voiceKind: {\n        serializedName: \"voiceKind\",\n        type: {\n          name: \"String\",\n        },\n      },\n      voiceName: {\n        serializedName: \"voiceName\",\n        type: {\n          name: \"String\",\n        },\n      },\n      customVoiceEndpointId: {\n        serializedName: \"customVoiceEndpointId\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const SsmlSourceInternal: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SsmlSourceInternal\",\n    modelProperties: {\n      ssmlText: {\n        serializedName: \"ssmlText\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      customVoiceEndpointId: {\n        serializedName: \"customVoiceEndpointId\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PlayOptionsInternal: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PlayOptionsInternal\",\n    modelProperties: {\n      loop: {\n        serializedName: \"loop\",\n        required: true,\n        type: {\n          name: \"Boolean\",\n        },\n      },\n    },\n  },\n};\n\nexport const RecognizeRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RecognizeRequest\",\n    modelProperties: {\n      recognizeInputType: {\n        serializedName: \"recognizeInputType\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      playPrompt: {\n        serializedName: \"playPrompt\",\n        type: {\n          name: \"Composite\",\n          className: \"PlaySourceInternal\",\n        },\n      },\n      interruptCallMediaOperation: {\n        serializedName: \"interruptCallMediaOperation\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      recognizeOptions: {\n        serializedName: \"recognizeOptions\",\n        type: {\n          name: \"Composite\",\n          className: \"RecognizeOptions\",\n        },\n      },\n      operationContext: {\n        serializedName: \"operationContext\",\n        type: {\n          name: \"String\",\n        },\n      },\n      operationCallbackUri: {\n        serializedName: \"operationCallbackUri\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const RecognizeOptions: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RecognizeOptions\",\n    modelProperties: {\n      interruptPrompt: {\n        serializedName: \"interruptPrompt\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      initialSilenceTimeoutInSeconds: {\n        constraints: {\n          InclusiveMaximum: 300,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"initialSilenceTimeoutInSeconds\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      targetParticipant: {\n        serializedName: \"targetParticipant\",\n        type: {\n          name: \"Composite\",\n          className: \"CommunicationIdentifierModel\",\n        },\n      },\n      speechLanguage: {\n        serializedName: \"speechLanguage\",\n        type: {\n          name: \"String\",\n        },\n      },\n      speechRecognitionModelEndpointId: {\n        serializedName: \"speechRecognitionModelEndpointId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      dtmfOptions: {\n        serializedName: \"dtmfOptions\",\n        type: {\n          name: \"Composite\",\n          className: \"DtmfOptions\",\n        },\n      },\n      choices: {\n        serializedName: \"choices\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Choice\",\n            },\n          },\n        },\n      },\n      speechOptions: {\n        serializedName: \"speechOptions\",\n        type: {\n          name: \"Composite\",\n          className: \"SpeechOptions\",\n        },\n      },\n    },\n  },\n};\n\nexport const DtmfOptions: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DtmfOptions\",\n    modelProperties: {\n      interToneTimeoutInSeconds: {\n        constraints: {\n          InclusiveMaximum: 60,\n          InclusiveMinimum: 1,\n        },\n        serializedName: \"interToneTimeoutInSeconds\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      maxTonesToCollect: {\n        serializedName: \"maxTonesToCollect\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      stopTones: {\n        serializedName: \"stopTones\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const Choice: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Choice\",\n    modelProperties: {\n      label: {\n        serializedName: \"label\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      phrases: {\n        serializedName: \"phrases\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      tone: {\n        serializedName: \"tone\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const SpeechOptions: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SpeechOptions\",\n    modelProperties: {\n      endSilenceTimeoutInMs: {\n        serializedName: \"endSilenceTimeoutInMs\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContinuousDtmfRecognitionRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContinuousDtmfRecognitionRequest\",\n    modelProperties: {\n      targetParticipant: {\n        serializedName: \"targetParticipant\",\n        type: {\n          name: \"Composite\",\n          className: \"CommunicationIdentifierModel\",\n        },\n      },\n      operationContext: {\n        serializedName: \"operationContext\",\n        type: {\n          name: \"String\",\n        },\n      },\n      operationCallbackUri: {\n        serializedName: \"operationCallbackUri\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const SendDtmfTonesRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SendDtmfTonesRequest\",\n    modelProperties: {\n      tones: {\n        serializedName: \"tones\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      targetParticipant: {\n        serializedName: \"targetParticipant\",\n        type: {\n          name: \"Composite\",\n          className: \"CommunicationIdentifierModel\",\n        },\n      },\n      operationContext: {\n        serializedName: \"operationContext\",\n        type: {\n          name: \"String\",\n        },\n      },\n      operationCallbackUri: {\n        serializedName: \"operationCallbackUri\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const SendDtmfTonesResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SendDtmfTonesResult\",\n    modelProperties: {\n      operationContext: {\n        serializedName: \"operationContext\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const GetParticipantsResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GetParticipantsResponse\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CallParticipantInternal\",\n            },\n          },\n        },\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const CallParticipantInternal: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CallParticipantInternal\",\n    modelProperties: {\n      identifier: {\n        serializedName: \"identifier\",\n        type: {\n          name: \"Composite\",\n          className: \"CommunicationIdentifierModel\",\n        },\n      },\n      isMuted: {\n        serializedName: \"isMuted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n    },\n  },\n};\n\nexport const AddParticipantRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AddParticipantRequest\",\n    modelProperties: {\n      sourceCallerIdNumber: {\n        serializedName: \"sourceCallerIdNumber\",\n        type: {\n          name: \"Composite\",\n          className: \"PhoneNumberIdentifierModel\",\n        },\n      },\n      sourceDisplayName: {\n        serializedName: \"sourceDisplayName\",\n        type: {\n          name: \"String\",\n        },\n      },\n      participantToAdd: {\n        serializedName: \"participantToAdd\",\n        type: {\n          name: \"Composite\",\n          className: \"CommunicationIdentifierModel\",\n        },\n      },\n      invitationTimeoutInSeconds: {\n        constraints: {\n          InclusiveMaximum: 180,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"invitationTimeoutInSeconds\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      operationContext: {\n        serializedName: \"operationContext\",\n        type: {\n          name: \"String\",\n        },\n      },\n      operationCallbackUri: {\n        serializedName: \"operationCallbackUri\",\n        type: {\n          name: \"String\",\n        },\n      },\n      customCallingContext: {\n        serializedName: \"customCallingContext\",\n        type: {\n          name: \"Composite\",\n          className: \"CustomCallingContextInternal\",\n        },\n      },\n    },\n  },\n};\n\nexport const AddParticipantResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AddParticipantResponse\",\n    modelProperties: {\n      participant: {\n        serializedName: \"participant\",\n        type: {\n          name: \"Composite\",\n          className: \"CallParticipantInternal\",\n        },\n      },\n      operationContext: {\n        serializedName: \"operationContext\",\n        type: {\n          name: \"String\",\n        },\n      },\n      invitationId: {\n        serializedName: \"invitationId\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const RemoveParticipantRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RemoveParticipantRequest\",\n    modelProperties: {\n      participantToRemove: {\n        serializedName: \"participantToRemove\",\n        type: {\n          name: \"Composite\",\n          className: \"CommunicationIdentifierModel\",\n        },\n      },\n      operationContext: {\n        serializedName: \"operationContext\",\n        type: {\n          name: \"String\",\n        },\n      },\n      operationCallbackUri: {\n        serializedName: \"operationCallbackUri\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const RemoveParticipantResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RemoveParticipantResponse\",\n    modelProperties: {\n      operationContext: {\n        serializedName: \"operationContext\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const MuteParticipantsRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MuteParticipantsRequest\",\n    modelProperties: {\n      targetParticipants: {\n        serializedName: \"targetParticipants\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CommunicationIdentifierModel\",\n            },\n          },\n        },\n      },\n      operationContext: {\n        serializedName: \"operationContext\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const MuteParticipantsResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MuteParticipantsResult\",\n    modelProperties: {\n      operationContext: {\n        serializedName: \"operationContext\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const CancelAddParticipantRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CancelAddParticipantRequest\",\n    modelProperties: {\n      invitationId: {\n        serializedName: \"invitationId\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      operationContext: {\n        serializedName: \"operationContext\",\n        type: {\n          name: \"String\",\n        },\n      },\n      operationCallbackUri: {\n        serializedName: \"operationCallbackUri\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const CancelAddParticipantResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CancelAddParticipantResponse\",\n    modelProperties: {\n      invitationId: {\n        serializedName: \"invitationId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      operationContext: {\n        serializedName: \"operationContext\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const StartCallRecordingRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StartCallRecordingRequest\",\n    modelProperties: {\n      callLocator: {\n        serializedName: \"callLocator\",\n        type: {\n          name: \"Composite\",\n          className: \"CallLocator\",\n        },\n      },\n      recordingStateCallbackUri: {\n        serializedName: \"recordingStateCallbackUri\",\n        type: {\n          name: \"String\",\n        },\n      },\n      recordingContentType: {\n        serializedName: \"recordingContentType\",\n        type: {\n          name: \"String\",\n        },\n      },\n      recordingChannelType: {\n        serializedName: \"recordingChannelType\",\n        type: {\n          name: \"String\",\n        },\n      },\n      recordingFormatType: {\n        serializedName: \"recordingFormatType\",\n        type: {\n          name: \"String\",\n        },\n      },\n      audioChannelParticipantOrdering: {\n        serializedName: \"audioChannelParticipantOrdering\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CommunicationIdentifierModel\",\n            },\n          },\n        },\n      },\n      channelAffinity: {\n        serializedName: \"channelAffinity\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ChannelAffinity\",\n            },\n          },\n        },\n      },\n      pauseOnStart: {\n        serializedName: \"pauseOnStart\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      recordingStorage: {\n        serializedName: \"externalStorage\",\n        type: {\n          name: \"Composite\",\n          className: \"RecordingStorage\",\n        },\n      },\n    },\n  },\n};\n\nexport const CallLocator: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CallLocator\",\n    modelProperties: {\n      groupCallId: {\n        serializedName: \"groupCallId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      serverCallId: {\n        serializedName: \"serverCallId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      kind: {\n        serializedName: \"kind\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ChannelAffinity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelAffinity\",\n    modelProperties: {\n      channel: {\n        constraints: {\n          InclusiveMaximum: 4,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"channel\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      participant: {\n        serializedName: \"participant\",\n        type: {\n          name: \"Composite\",\n          className: \"CommunicationIdentifierModel\",\n        },\n      },\n    },\n  },\n};\n\nexport const RecordingStorage: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RecordingStorage\",\n    modelProperties: {\n      recordingStorageKind: {\n        serializedName: \"recordingStorageKind\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      recordingDestinationContainerUrl: {\n        serializedName: \"recordingDestinationContainerUrl\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const RecordingStateResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RecordingStateResponse\",\n    modelProperties: {\n      recordingId: {\n        serializedName: \"recordingId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      recordingState: {\n        serializedName: \"recordingState\",\n        type: {\n          name: \"String\",\n        },\n      },\n      recordingKind: {\n        serializedName: \"recordingKind\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const AddParticipantFailed: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AddParticipantFailed\",\n    modelProperties: {\n      callConnectionId: {\n        serializedName: \"callConnectionId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      serverCallId: {\n        serializedName: \"serverCallId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      correlationId: {\n        serializedName: \"correlationId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      operationContext: {\n        serializedName: \"operationContext\",\n        type: {\n          name: \"String\",\n        },\n      },\n      resultInformation: {\n        serializedName: \"resultInformation\",\n        type: {\n          name: \"Composite\",\n          className: \"ResultInformation\",\n        },\n      },\n      participant: {\n        serializedName: \"participant\",\n        type: {\n          name: \"Composite\",\n          className: \"CommunicationIdentifierModel\",\n        },\n      },\n    },\n  },\n};\n\nexport const ResultInformation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResultInformation\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      subCode: {\n        serializedName: \"subCode\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const AddParticipantSucceeded: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AddParticipantSucceeded\",\n    modelProperties: {\n      callConnectionId: {\n        serializedName: \"callConnectionId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      serverCallId: {\n        serializedName: \"serverCallId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      correlationId: {\n        serializedName: \"correlationId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      operationContext: {\n        serializedName: \"operationContext\",\n        type: {\n          name: \"String\",\n        },\n      },\n      resultInformation: {\n        serializedName: \"resultInformation\",\n        type: {\n          name: \"Composite\",\n          className: \"ResultInformation\",\n        },\n      },\n      participant: {\n        serializedName: \"participant\",\n        type: {\n          name: \"Composite\",\n          className: \"CommunicationIdentifierModel\",\n        },\n      },\n    },\n  },\n};\n\nexport const CallConnected: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CallConnected\",\n    modelProperties: {\n      callConnectionId: {\n        serializedName: \"callConnectionId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      serverCallId: {\n        serializedName: \"serverCallId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      correlationId: {\n        serializedName: \"correlationId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      operationContext: {\n        serializedName: \"operationContext\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const CallDisconnected: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CallDisconnected\",\n    modelProperties: {\n      callConnectionId: {\n        serializedName: \"callConnectionId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      serverCallId: {\n        serializedName: \"serverCallId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      correlationId: {\n        serializedName: \"correlationId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      operationContext: {\n        serializedName: \"operationContext\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const CallTransferAccepted: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CallTransferAccepted\",\n    modelProperties: {\n      callConnectionId: {\n        serializedName: \"callConnectionId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      serverCallId: {\n        serializedName: \"serverCallId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      correlationId: {\n        serializedName: \"correlationId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      operationContext: {\n        serializedName: \"operationContext\",\n        type: {\n          name: \"String\",\n        },\n      },\n      resultInformation: {\n        serializedName: \"resultInformation\",\n        type: {\n          name: \"Composite\",\n          className: \"ResultInformation\",\n        },\n      },\n      transferTarget: {\n        serializedName: \"transferTarget\",\n        type: {\n          name: \"Composite\",\n          className: \"CommunicationIdentifierModel\",\n        },\n      },\n      transferee: {\n        serializedName: \"transferee\",\n        type: {\n          name: \"Composite\",\n          className: \"CommunicationIdentifierModel\",\n        },\n      },\n    },\n  },\n};\n\nexport const CallTransferFailed: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CallTransferFailed\",\n    modelProperties: {\n      callConnectionId: {\n        serializedName: \"callConnectionId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      serverCallId: {\n        serializedName: \"serverCallId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      correlationId: {\n        serializedName: \"correlationId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      operationContext: {\n        serializedName: \"operationContext\",\n        type: {\n          name: \"String\",\n        },\n      },\n      resultInformation: {\n        serializedName: \"resultInformation\",\n        type: {\n          name: \"Composite\",\n          className: \"ResultInformation\",\n        },\n      },\n    },\n  },\n};\n\nexport const ParticipantsUpdated: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ParticipantsUpdated\",\n    modelProperties: {\n      callConnectionId: {\n        serializedName: \"callConnectionId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      serverCallId: {\n        serializedName: \"serverCallId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      correlationId: {\n        serializedName: \"correlationId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      sequenceNumber: {\n        serializedName: \"sequenceNumber\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      participants: {\n        serializedName: \"participants\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CallParticipantInternal\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const RemoveParticipantSucceeded: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RemoveParticipantSucceeded\",\n    modelProperties: {\n      callConnectionId: {\n        serializedName: \"callConnectionId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      serverCallId: {\n        serializedName: \"serverCallId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      correlationId: {\n        serializedName: \"correlationId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      operationContext: {\n        serializedName: \"operationContext\",\n        type: {\n          name: \"String\",\n        },\n      },\n      resultInformation: {\n        serializedName: \"resultInformation\",\n        type: {\n          name: \"Composite\",\n          className: \"ResultInformation\",\n        },\n      },\n      participant: {\n        serializedName: \"participant\",\n        type: {\n          name: \"Composite\",\n          className: \"CommunicationIdentifierModel\",\n        },\n      },\n    },\n  },\n};\n\nexport const RemoveParticipantFailed: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RemoveParticipantFailed\",\n    modelProperties: {\n      callConnectionId: {\n        serializedName: \"callConnectionId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      serverCallId: {\n        serializedName: \"serverCallId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      correlationId: {\n        serializedName: \"correlationId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      operationContext: {\n        serializedName: \"operationContext\",\n        type: {\n          name: \"String\",\n        },\n      },\n      resultInformation: {\n        serializedName: \"resultInformation\",\n        type: {\n          name: \"Composite\",\n          className: \"ResultInformation\",\n        },\n      },\n      participant: {\n        serializedName: \"participant\",\n        type: {\n          name: \"Composite\",\n          className: \"CommunicationIdentifierModel\",\n        },\n      },\n    },\n  },\n};\n\nexport const CancelAddParticipantSucceeded: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CancelAddParticipantSucceeded\",\n    modelProperties: {\n      callConnectionId: {\n        serializedName: \"callConnectionId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      serverCallId: {\n        serializedName: \"serverCallId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      correlationId: {\n        serializedName: \"correlationId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      operationContext: {\n        serializedName: \"operationContext\",\n        type: {\n          name: \"String\",\n        },\n      },\n      invitationId: {\n        serializedName: \"invitationId\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const CancelAddParticipantFailed: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CancelAddParticipantFailed\",\n    modelProperties: {\n      callConnectionId: {\n        serializedName: \"callConnectionId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      serverCallId: {\n        serializedName: \"serverCallId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      correlationId: {\n        serializedName: \"correlationId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      operationContext: {\n        serializedName: \"operationContext\",\n        type: {\n          name: \"String\",\n        },\n      },\n      resultInformation: {\n        serializedName: \"resultInformation\",\n        type: {\n          name: \"Composite\",\n          className: \"ResultInformation\",\n        },\n      },\n      invitationId: {\n        serializedName: \"invitationId\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const RecordingStateChanged: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RecordingStateChanged\",\n    modelProperties: {\n      callConnectionId: {\n        serializedName: \"callConnectionId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      serverCallId: {\n        serializedName: \"serverCallId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      correlationId: {\n        serializedName: \"correlationId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      recordingId: {\n        serializedName: \"recordingId\",\n        readOnly: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      state: {\n        serializedName: \"state\",\n        type: {\n          name: \"String\",\n        },\n      },\n      startDateTime: {\n        serializedName: \"startDateTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\",\n        },\n      },\n      recordingKind: {\n        serializedName: \"recordingKind\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PlayCompleted: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PlayCompleted\",\n    modelProperties: {\n      callConnectionId: {\n        serializedName: \"callConnectionId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      serverCallId: {\n        serializedName: \"serverCallId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      correlationId: {\n        serializedName: \"correlationId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      operationContext: {\n        serializedName: \"operationContext\",\n        type: {\n          name: \"String\",\n        },\n      },\n      resultInformation: {\n        serializedName: \"resultInformation\",\n        type: {\n          name: \"Composite\",\n          className: \"ResultInformation\",\n        },\n      },\n    },\n  },\n};\n\nexport const PlayFailed: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PlayFailed\",\n    modelProperties: {\n      callConnectionId: {\n        serializedName: \"callConnectionId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      serverCallId: {\n        serializedName: \"serverCallId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      correlationId: {\n        serializedName: \"correlationId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      operationContext: {\n        serializedName: \"operationContext\",\n        type: {\n          name: \"String\",\n        },\n      },\n      resultInformation: {\n        serializedName: \"resultInformation\",\n        type: {\n          name: \"Composite\",\n          className: \"ResultInformation\",\n        },\n      },\n    },\n  },\n};\n\nexport const PlayCanceled: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PlayCanceled\",\n    modelProperties: {\n      callConnectionId: {\n        serializedName: \"callConnectionId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      serverCallId: {\n        serializedName: \"serverCallId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      correlationId: {\n        serializedName: \"correlationId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      operationContext: {\n        serializedName: \"operationContext\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const RecognizeCompleted: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RecognizeCompleted\",\n    modelProperties: {\n      callConnectionId: {\n        serializedName: \"callConnectionId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      serverCallId: {\n        serializedName: \"serverCallId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      correlationId: {\n        serializedName: \"correlationId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      operationContext: {\n        serializedName: \"operationContext\",\n        type: {\n          name: \"String\",\n        },\n      },\n      resultInformation: {\n        serializedName: \"resultInformation\",\n        type: {\n          name: \"Composite\",\n          className: \"ResultInformation\",\n        },\n      },\n      recognitionType: {\n        serializedName: \"recognitionType\",\n        type: {\n          name: \"String\",\n        },\n      },\n      dtmfResult: {\n        serializedName: \"dtmfResult\",\n        type: {\n          name: \"Composite\",\n          className: \"DtmfResult\",\n        },\n      },\n      choiceResult: {\n        serializedName: \"choiceResult\",\n        type: {\n          name: \"Composite\",\n          className: \"ChoiceResult\",\n        },\n      },\n      speechResult: {\n        serializedName: \"speechResult\",\n        type: {\n          name: \"Composite\",\n          className: \"SpeechResult\",\n        },\n      },\n    },\n  },\n};\n\nexport const DtmfResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DtmfResult\",\n    modelProperties: {\n      tones: {\n        serializedName: \"tones\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const ChoiceResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChoiceResult\",\n    modelProperties: {\n      label: {\n        serializedName: \"label\",\n        type: {\n          name: \"String\",\n        },\n      },\n      recognizedPhrase: {\n        serializedName: \"recognizedPhrase\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const SpeechResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SpeechResult\",\n    modelProperties: {\n      speech: {\n        serializedName: \"speech\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const RecognizeFailed: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RecognizeFailed\",\n    modelProperties: {\n      callConnectionId: {\n        serializedName: \"callConnectionId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      serverCallId: {\n        serializedName: \"serverCallId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      correlationId: {\n        serializedName: \"correlationId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      operationContext: {\n        serializedName: \"operationContext\",\n        type: {\n          name: \"String\",\n        },\n      },\n      resultInformation: {\n        serializedName: \"resultInformation\",\n        type: {\n          name: \"Composite\",\n          className: \"ResultInformation\",\n        },\n      },\n    },\n  },\n};\n\nexport const RecognizeCanceled: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RecognizeCanceled\",\n    modelProperties: {\n      callConnectionId: {\n        serializedName: \"callConnectionId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      serverCallId: {\n        serializedName: \"serverCallId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      correlationId: {\n        serializedName: \"correlationId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      operationContext: {\n        serializedName: \"operationContext\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContinuousDtmfRecognitionToneFailed: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContinuousDtmfRecognitionToneFailed\",\n    modelProperties: {\n      callConnectionId: {\n        serializedName: \"callConnectionId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      serverCallId: {\n        serializedName: \"serverCallId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      correlationId: {\n        serializedName: \"correlationId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      resultInformation: {\n        serializedName: \"resultInformation\",\n        type: {\n          name: \"Composite\",\n          className: \"ResultInformation\",\n        },\n      },\n      operationContext: {\n        serializedName: \"operationContext\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContinuousDtmfRecognitionToneReceived: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className: \"ContinuousDtmfRecognitionToneReceived\",\n      modelProperties: {\n        sequenceId: {\n          serializedName: \"sequenceId\",\n          readOnly: true,\n          type: {\n            name: \"Number\",\n          },\n        },\n        tone: {\n          serializedName: \"tone\",\n          type: {\n            name: \"String\",\n          },\n        },\n        callConnectionId: {\n          serializedName: \"callConnectionId\",\n          type: {\n            name: \"String\",\n          },\n        },\n        serverCallId: {\n          serializedName: \"serverCallId\",\n          type: {\n            name: \"String\",\n          },\n        },\n        correlationId: {\n          serializedName: \"correlationId\",\n          type: {\n            name: \"String\",\n          },\n        },\n        resultInformation: {\n          serializedName: \"resultInformation\",\n          type: {\n            name: \"Composite\",\n            className: \"ResultInformation\",\n          },\n        },\n        operationContext: {\n          serializedName: \"operationContext\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ContinuousDtmfRecognitionStopped: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContinuousDtmfRecognitionStopped\",\n    modelProperties: {\n      callConnectionId: {\n        serializedName: \"callConnectionId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      serverCallId: {\n        serializedName: \"serverCallId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      correlationId: {\n        serializedName: \"correlationId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      operationContext: {\n        serializedName: \"operationContext\",\n        type: {\n          name: \"String\",\n        },\n      },\n      resultInformation: {\n        serializedName: \"resultInformation\",\n        type: {\n          name: \"Composite\",\n          className: \"ResultInformation\",\n        },\n      },\n    },\n  },\n};\n\nexport const SendDtmfTonesCompleted: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SendDtmfTonesCompleted\",\n    modelProperties: {\n      callConnectionId: {\n        serializedName: \"callConnectionId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      serverCallId: {\n        serializedName: \"serverCallId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      correlationId: {\n        serializedName: \"correlationId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      operationContext: {\n        serializedName: \"operationContext\",\n        type: {\n          name: \"String\",\n        },\n      },\n      resultInformation: {\n        serializedName: \"resultInformation\",\n        type: {\n          name: \"Composite\",\n          className: \"ResultInformation\",\n        },\n      },\n    },\n  },\n};\n\nexport const SendDtmfTonesFailed: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SendDtmfTonesFailed\",\n    modelProperties: {\n      callConnectionId: {\n        serializedName: \"callConnectionId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      serverCallId: {\n        serializedName: \"serverCallId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      correlationId: {\n        serializedName: \"correlationId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      operationContext: {\n        serializedName: \"operationContext\",\n        type: {\n          name: \"String\",\n        },\n      },\n      resultInformation: {\n        serializedName: \"resultInformation\",\n        type: {\n          name: \"Composite\",\n          className: \"ResultInformation\",\n        },\n      },\n    },\n  },\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter,\n} from \"@azure/core-client\";\nimport {\n  CreateCallRequest as CreateCallRequestMapper,\n  AnswerCallRequest as AnswerCallRequestMapper,\n  RedirectCallRequest as RedirectCallRequestMapper,\n  RejectCallRequest as RejectCallRequestMapper,\n  TransferToParticipantRequest as TransferToParticipantRequestMapper,\n  AddParticipantRequest as AddParticipantRequestMapper,\n  RemoveParticipantRequest as RemoveParticipantRequestMapper,\n  MuteParticipantsRequest as MuteParticipantsRequestMapper,\n  CancelAddParticipantRequest as CancelAddParticipantRequestMapper,\n  PlayRequest as PlayRequestMapper,\n  RecognizeRequest as RecognizeRequestMapper,\n  ContinuousDtmfRecognitionRequest as ContinuousDtmfRecognitionRequestMapper,\n  SendDtmfTonesRequest as SendDtmfTonesRequestMapper,\n  StartCallRecordingRequest as StartCallRecordingRequestMapper,\n} from \"../models/mappers\";\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const createCallRequest: OperationParameter = {\n  parameterPath: \"createCallRequest\",\n  mapper: CreateCallRequestMapper,\n};\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const endpoint: OperationURLParameter = {\n  parameterPath: \"endpoint\",\n  mapper: {\n    serializedName: \"endpoint\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n  skipEncoding: true,\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2024-04-15\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const repeatabilityRequestID: OperationParameter = {\n  parameterPath: [\"options\", \"repeatabilityRequestID\"],\n  mapper: {\n    serializedName: \"Repeatability-Request-ID\",\n    type: {\n      name: \"Uuid\",\n    },\n  },\n};\n\nexport const repeatabilityFirstSent: OperationParameter = {\n  parameterPath: [\"options\", \"repeatabilityFirstSent\"],\n  mapper: {\n    serializedName: \"Repeatability-First-Sent\",\n    type: {\n      name: \"DateTimeRfc1123\",\n    },\n  },\n};\n\nexport const answerCallRequest: OperationParameter = {\n  parameterPath: \"answerCallRequest\",\n  mapper: AnswerCallRequestMapper,\n};\n\nexport const redirectCallRequest: OperationParameter = {\n  parameterPath: \"redirectCallRequest\",\n  mapper: RedirectCallRequestMapper,\n};\n\nexport const rejectCallRequest: OperationParameter = {\n  parameterPath: \"rejectCallRequest\",\n  mapper: RejectCallRequestMapper,\n};\n\nexport const callConnectionId: OperationURLParameter = {\n  parameterPath: \"callConnectionId\",\n  mapper: {\n    serializedName: \"callConnectionId\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const transferToParticipantRequest: OperationParameter = {\n  parameterPath: \"transferToParticipantRequest\",\n  mapper: TransferToParticipantRequestMapper,\n};\n\nexport const addParticipantRequest: OperationParameter = {\n  parameterPath: \"addParticipantRequest\",\n  mapper: AddParticipantRequestMapper,\n};\n\nexport const removeParticipantRequest: OperationParameter = {\n  parameterPath: \"removeParticipantRequest\",\n  mapper: RemoveParticipantRequestMapper,\n};\n\nexport const muteParticipantsRequest: OperationParameter = {\n  parameterPath: \"muteParticipantsRequest\",\n  mapper: MuteParticipantsRequestMapper,\n};\n\nexport const cancelAddParticipantRequest: OperationParameter = {\n  parameterPath: \"cancelAddParticipantRequest\",\n  mapper: CancelAddParticipantRequestMapper,\n};\n\nexport const participantRawId: OperationURLParameter = {\n  parameterPath: \"participantRawId\",\n  mapper: {\n    serializedName: \"participantRawId\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const nextLink: OperationURLParameter = {\n  parameterPath: \"nextLink\",\n  mapper: {\n    serializedName: \"nextLink\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n  skipEncoding: true,\n};\n\nexport const playRequest: OperationParameter = {\n  parameterPath: \"playRequest\",\n  mapper: PlayRequestMapper,\n};\n\nexport const recognizeRequest: OperationParameter = {\n  parameterPath: \"recognizeRequest\",\n  mapper: RecognizeRequestMapper,\n};\n\nexport const continuousDtmfRecognitionRequest: OperationParameter = {\n  parameterPath: \"continuousDtmfRecognitionRequest\",\n  mapper: ContinuousDtmfRecognitionRequestMapper,\n};\n\nexport const sendDtmfTonesRequest: OperationParameter = {\n  parameterPath: \"sendDtmfTonesRequest\",\n  mapper: SendDtmfTonesRequestMapper,\n};\n\nexport const startCallRecording: OperationParameter = {\n  parameterPath: \"startCallRecording\",\n  mapper: StartCallRecordingRequestMapper,\n};\n\nexport const recordingId: OperationURLParameter = {\n  parameterPath: \"recordingId\",\n  mapper: {\n    serializedName: \"recordingId\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { CallConnection } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CallAutomationApiClient } from \"../callAutomationApiClient\";\nimport {\n  CallParticipantInternal,\n  CallConnectionGetParticipantsNextOptionalParams,\n  CallConnectionGetParticipantsOptionalParams,\n  CallConnectionGetParticipantsResponse,\n  CallConnectionGetCallOptionalParams,\n  CallConnectionGetCallResponse,\n  CallConnectionHangupCallOptionalParams,\n  CallConnectionTerminateCallOptionalParams,\n  TransferToParticipantRequest,\n  CallConnectionTransferToParticipantOptionalParams,\n  CallConnectionTransferToParticipantResponse,\n  AddParticipantRequest,\n  CallConnectionAddParticipantOptionalParams,\n  CallConnectionAddParticipantResponse,\n  RemoveParticipantRequest,\n  CallConnectionRemoveParticipantOptionalParams,\n  CallConnectionRemoveParticipantResponse,\n  MuteParticipantsRequest,\n  CallConnectionMuteOptionalParams,\n  CallConnectionMuteResponse,\n  CancelAddParticipantRequest,\n  CallConnectionCancelAddParticipantOptionalParams,\n  CallConnectionCancelAddParticipantResponse,\n  CallConnectionGetParticipantOptionalParams,\n  CallConnectionGetParticipantResponse,\n  CallConnectionGetParticipantsNextResponse,\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing CallConnection operations. */\nexport class CallConnectionImpl implements CallConnection {\n  private readonly client: CallAutomationApiClient;\n\n  /**\n   * Initialize a new instance of the class CallConnection class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CallAutomationApiClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get participants from a call. Recording and transcription bots are omitted from this list.\n   * @param callConnectionId The call connection Id\n   * @param options The options parameters.\n   */\n  public listParticipants(\n    callConnectionId: string,\n    options?: CallConnectionGetParticipantsOptionalParams,\n  ): PagedAsyncIterableIterator<CallParticipantInternal> {\n    const iter = this.getParticipantsPagingAll(callConnectionId, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.getParticipantsPagingPage(\n          callConnectionId,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *getParticipantsPagingPage(\n    callConnectionId: string,\n    options?: CallConnectionGetParticipantsOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<CallParticipantInternal[]> {\n    let result: CallConnectionGetParticipantsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._getParticipants(callConnectionId, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._getParticipantsNext(\n        callConnectionId,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *getParticipantsPagingAll(\n    callConnectionId: string,\n    options?: CallConnectionGetParticipantsOptionalParams,\n  ): AsyncIterableIterator<CallParticipantInternal> {\n    for await (const page of this.getParticipantsPagingPage(\n      callConnectionId,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get the detail properties of an ongoing call.\n   * @param callConnectionId The call connection id.\n   * @param options The options parameters.\n   */\n  getCall(\n    callConnectionId: string,\n    options?: CallConnectionGetCallOptionalParams,\n  ): Promise<CallConnectionGetCallResponse> {\n    return this.client.sendOperationRequest(\n      { callConnectionId, options },\n      getCallOperationSpec,\n    );\n  }\n\n  /**\n   * Hang up call automation service from the call. This will make call automation service leave the\n   * call, but does not terminate if there are more than 1 caller in the call.\n   * @param callConnectionId The call connection id.\n   * @param options The options parameters.\n   */\n  hangupCall(\n    callConnectionId: string,\n    options?: CallConnectionHangupCallOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { callConnectionId, options },\n      hangupCallOperationSpec,\n    );\n  }\n\n  /**\n   * Terminate a call using CallConnectionId.\n   * @param callConnectionId The terminate call request.\n   * @param options The options parameters.\n   */\n  terminateCall(\n    callConnectionId: string,\n    options?: CallConnectionTerminateCallOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { callConnectionId, options },\n      terminateCallOperationSpec,\n    );\n  }\n\n  /**\n   * Transfer the call to a participant.\n   * @param callConnectionId The call connection id.\n   * @param transferToParticipantRequest The transfer to participant request.\n   * @param options The options parameters.\n   */\n  transferToParticipant(\n    callConnectionId: string,\n    transferToParticipantRequest: TransferToParticipantRequest,\n    options?: CallConnectionTransferToParticipantOptionalParams,\n  ): Promise<CallConnectionTransferToParticipantResponse> {\n    return this.client.sendOperationRequest(\n      { callConnectionId, transferToParticipantRequest, options },\n      transferToParticipantOperationSpec,\n    );\n  }\n\n  /**\n   * Get participants from a call. Recording and transcription bots are omitted from this list.\n   * @param callConnectionId The call connection Id\n   * @param options The options parameters.\n   */\n  private _getParticipants(\n    callConnectionId: string,\n    options?: CallConnectionGetParticipantsOptionalParams,\n  ): Promise<CallConnectionGetParticipantsResponse> {\n    return this.client.sendOperationRequest(\n      { callConnectionId, options },\n      getParticipantsOperationSpec,\n    );\n  }\n\n  /**\n   * Add a participant to the call.\n   * @param callConnectionId The call connection Id\n   * @param addParticipantRequest The request payload for adding participant to the call.\n   * @param options The options parameters.\n   */\n  addParticipant(\n    callConnectionId: string,\n    addParticipantRequest: AddParticipantRequest,\n    options?: CallConnectionAddParticipantOptionalParams,\n  ): Promise<CallConnectionAddParticipantResponse> {\n    return this.client.sendOperationRequest(\n      { callConnectionId, addParticipantRequest, options },\n      addParticipantOperationSpec,\n    );\n  }\n\n  /**\n   * Remove a participant from the call using identifier.\n   * @param callConnectionId The call connection id.\n   * @param removeParticipantRequest The participant to be removed from the call.\n   * @param options The options parameters.\n   */\n  removeParticipant(\n    callConnectionId: string,\n    removeParticipantRequest: RemoveParticipantRequest,\n    options?: CallConnectionRemoveParticipantOptionalParams,\n  ): Promise<CallConnectionRemoveParticipantResponse> {\n    return this.client.sendOperationRequest(\n      { callConnectionId, removeParticipantRequest, options },\n      removeParticipantOperationSpec,\n    );\n  }\n\n  /**\n   * Mute participants from the call using identifier.\n   * @param callConnectionId The call connection id.\n   * @param muteParticipantsRequest The participants to be muted from the call.\n   * @param options The options parameters.\n   */\n  mute(\n    callConnectionId: string,\n    muteParticipantsRequest: MuteParticipantsRequest,\n    options?: CallConnectionMuteOptionalParams,\n  ): Promise<CallConnectionMuteResponse> {\n    return this.client.sendOperationRequest(\n      { callConnectionId, muteParticipantsRequest, options },\n      muteOperationSpec,\n    );\n  }\n\n  /**\n   * Cancel add participant operation.\n   * @param callConnectionId The call connection Id\n   * @param cancelAddParticipantRequest Cancellation request.\n   * @param options The options parameters.\n   */\n  cancelAddParticipant(\n    callConnectionId: string,\n    cancelAddParticipantRequest: CancelAddParticipantRequest,\n    options?: CallConnectionCancelAddParticipantOptionalParams,\n  ): Promise<CallConnectionCancelAddParticipantResponse> {\n    return this.client.sendOperationRequest(\n      { callConnectionId, cancelAddParticipantRequest, options },\n      cancelAddParticipantOperationSpec,\n    );\n  }\n\n  /**\n   * Get participant from a call.\n   * @param callConnectionId The call connection Id\n   * @param participantRawId Raw id of the participant to retrieve.\n   * @param options The options parameters.\n   */\n  getParticipant(\n    callConnectionId: string,\n    participantRawId: string,\n    options?: CallConnectionGetParticipantOptionalParams,\n  ): Promise<CallConnectionGetParticipantResponse> {\n    return this.client.sendOperationRequest(\n      { callConnectionId, participantRawId, options },\n      getParticipantOperationSpec,\n    );\n  }\n\n  /**\n   * GetParticipantsNext\n   * @param callConnectionId The call connection Id\n   * @param nextLink The nextLink from the previous successful call to the GetParticipants method.\n   * @param options The options parameters.\n   */\n  private _getParticipantsNext(\n    callConnectionId: string,\n    nextLink: string,\n    options?: CallConnectionGetParticipantsNextOptionalParams,\n  ): Promise<CallConnectionGetParticipantsNextResponse> {\n    return this.client.sendOperationRequest(\n      { callConnectionId, nextLink, options },\n      getParticipantsNextOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getCallOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections/{callConnectionId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CallConnectionPropertiesInternal,\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.callConnectionId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst hangupCallOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections/{callConnectionId}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.callConnectionId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst terminateCallOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections/{callConnectionId}:terminate\",\n  httpMethod: \"POST\",\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.callConnectionId],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.repeatabilityRequestID,\n    Parameters.repeatabilityFirstSent,\n  ],\n  serializer,\n};\nconst transferToParticipantOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections/{callConnectionId}:transferToParticipant\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {\n      bodyMapper: Mappers.TransferCallResponse,\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  requestBody: Parameters.transferToParticipantRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.callConnectionId],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.repeatabilityRequestID,\n    Parameters.repeatabilityFirstSent,\n  ],\n  mediaType: \"json\",\n  serializer,\n};\nconst getParticipantsOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections/{callConnectionId}/participants\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GetParticipantsResponse,\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.callConnectionId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst addParticipantOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections/{callConnectionId}/participants:add\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {\n      bodyMapper: Mappers.AddParticipantResponse,\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  requestBody: Parameters.addParticipantRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.callConnectionId],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.repeatabilityRequestID,\n    Parameters.repeatabilityFirstSent,\n  ],\n  mediaType: \"json\",\n  serializer,\n};\nconst removeParticipantOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections/{callConnectionId}/participants:remove\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {\n      bodyMapper: Mappers.RemoveParticipantResponse,\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  requestBody: Parameters.removeParticipantRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.callConnectionId],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.repeatabilityRequestID,\n    Parameters.repeatabilityFirstSent,\n  ],\n  mediaType: \"json\",\n  serializer,\n};\nconst muteOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections/{callConnectionId}/participants:mute\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MuteParticipantsResult,\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  requestBody: Parameters.muteParticipantsRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.callConnectionId],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.repeatabilityRequestID,\n    Parameters.repeatabilityFirstSent,\n  ],\n  mediaType: \"json\",\n  serializer,\n};\nconst cancelAddParticipantOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections/{callConnectionId}/participants:cancelAddParticipant\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {\n      bodyMapper: Mappers.CancelAddParticipantResponse,\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  requestBody: Parameters.cancelAddParticipantRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.callConnectionId],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.repeatabilityRequestID,\n    Parameters.repeatabilityFirstSent,\n  ],\n  mediaType: \"json\",\n  serializer,\n};\nconst getParticipantOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections/{callConnectionId}/participants/{participantRawId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CallParticipantInternal,\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.callConnectionId,\n    Parameters.participantRawId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getParticipantsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GetParticipantsResponse,\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.callConnectionId,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { CallMedia } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CallAutomationApiClient } from \"../callAutomationApiClient\";\nimport {\n  PlayRequest,\n  CallMediaPlayOptionalParams,\n  CallMediaCancelAllMediaOperationsOptionalParams,\n  RecognizeRequest,\n  CallMediaRecognizeOptionalParams,\n  ContinuousDtmfRecognitionRequest,\n  CallMediaStartContinuousDtmfRecognitionOptionalParams,\n  CallMediaStopContinuousDtmfRecognitionOptionalParams,\n  SendDtmfTonesRequest,\n  CallMediaSendDtmfTonesOptionalParams,\n  CallMediaSendDtmfTonesResponse,\n} from \"../models\";\n\n/** Class containing CallMedia operations. */\nexport class CallMediaImpl implements CallMedia {\n  private readonly client: CallAutomationApiClient;\n\n  /**\n   * Initialize a new instance of the class CallMedia class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CallAutomationApiClient) {\n    this.client = client;\n  }\n\n  /**\n   * Plays audio to participants in the call.\n   * @param callConnectionId The call connection id.\n   * @param playRequest play request payload.\n   * @param options The options parameters.\n   */\n  play(\n    callConnectionId: string,\n    playRequest: PlayRequest,\n    options?: CallMediaPlayOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { callConnectionId, playRequest, options },\n      playOperationSpec,\n    );\n  }\n\n  /**\n   * Cancel all media operations in a call.\n   * @param callConnectionId The call connection id\n   * @param options The options parameters.\n   */\n  cancelAllMediaOperations(\n    callConnectionId: string,\n    options?: CallMediaCancelAllMediaOperationsOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { callConnectionId, options },\n      cancelAllMediaOperationsOperationSpec,\n    );\n  }\n\n  /**\n   * Recognize media from call.\n   * @param callConnectionId The call connection id\n   * @param recognizeRequest The media recognize request\n   * @param options The options parameters.\n   */\n  recognize(\n    callConnectionId: string,\n    recognizeRequest: RecognizeRequest,\n    options?: CallMediaRecognizeOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { callConnectionId, recognizeRequest, options },\n      recognizeOperationSpec,\n    );\n  }\n\n  /**\n   * Start continuous Dtmf recognition by subscribing to tones.\n   * @param callConnectionId The call connection id\n   * @param continuousDtmfRecognitionRequest The continuous recognize request\n   * @param options The options parameters.\n   */\n  startContinuousDtmfRecognition(\n    callConnectionId: string,\n    continuousDtmfRecognitionRequest: ContinuousDtmfRecognitionRequest,\n    options?: CallMediaStartContinuousDtmfRecognitionOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { callConnectionId, continuousDtmfRecognitionRequest, options },\n      startContinuousDtmfRecognitionOperationSpec,\n    );\n  }\n\n  /**\n   * Stop continuous Dtmf recognition by unsubscribing to tones.\n   * @param callConnectionId The call connection id\n   * @param continuousDtmfRecognitionRequest The continuous recognize request\n   * @param options The options parameters.\n   */\n  stopContinuousDtmfRecognition(\n    callConnectionId: string,\n    continuousDtmfRecognitionRequest: ContinuousDtmfRecognitionRequest,\n    options?: CallMediaStopContinuousDtmfRecognitionOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { callConnectionId, continuousDtmfRecognitionRequest, options },\n      stopContinuousDtmfRecognitionOperationSpec,\n    );\n  }\n\n  /**\n   * Send dtmf tones.\n   * @param callConnectionId The call connection id\n   * @param sendDtmfTonesRequest The send dtmf tones request\n   * @param options The options parameters.\n   */\n  sendDtmfTones(\n    callConnectionId: string,\n    sendDtmfTonesRequest: SendDtmfTonesRequest,\n    options?: CallMediaSendDtmfTonesOptionalParams,\n  ): Promise<CallMediaSendDtmfTonesResponse> {\n    return this.client.sendOperationRequest(\n      { callConnectionId, sendDtmfTonesRequest, options },\n      sendDtmfTonesOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst playOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections/{callConnectionId}:play\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {},\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  requestBody: Parameters.playRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.callConnectionId],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\nconst cancelAllMediaOperationsOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections/{callConnectionId}:cancelAllMediaOperations\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {},\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.callConnectionId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst recognizeOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections/{callConnectionId}:recognize\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {},\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  requestBody: Parameters.recognizeRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.callConnectionId],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\nconst startContinuousDtmfRecognitionOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections/{callConnectionId}:startContinuousDtmfRecognition\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  requestBody: Parameters.continuousDtmfRecognitionRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.callConnectionId],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\nconst stopContinuousDtmfRecognitionOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections/{callConnectionId}:stopContinuousDtmfRecognition\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  requestBody: Parameters.continuousDtmfRecognitionRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.callConnectionId],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\nconst sendDtmfTonesOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections/{callConnectionId}:sendDtmfTones\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {\n      bodyMapper: Mappers.SendDtmfTonesResult,\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  requestBody: Parameters.sendDtmfTonesRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.callConnectionId],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.repeatabilityRequestID,\n    Parameters.repeatabilityFirstSent,\n  ],\n  mediaType: \"json\",\n  serializer,\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { CallRecording } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { CallAutomationApiClient } from \"../callAutomationApiClient\";\nimport {\n  StartCallRecordingRequest,\n  CallRecordingStartRecordingOptionalParams,\n  CallRecordingStartRecordingResponse,\n  CallRecordingGetRecordingPropertiesOptionalParams,\n  CallRecordingGetRecordingPropertiesResponse,\n  CallRecordingStopRecordingOptionalParams,\n  CallRecordingPauseRecordingOptionalParams,\n  CallRecordingResumeRecordingOptionalParams,\n} from \"../models\";\n\n/** Class containing CallRecording operations. */\nexport class CallRecordingImpl implements CallRecording {\n  private readonly client: CallAutomationApiClient;\n\n  /**\n   * Initialize a new instance of the class CallRecording class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CallAutomationApiClient) {\n    this.client = client;\n  }\n\n  /**\n   * Start recording the call.\n   * @param startCallRecording The request body of start call recording request.\n   * @param options The options parameters.\n   */\n  startRecording(\n    startCallRecording: StartCallRecordingRequest,\n    options?: CallRecordingStartRecordingOptionalParams,\n  ): Promise<CallRecordingStartRecordingResponse> {\n    return this.client.sendOperationRequest(\n      { startCallRecording, options },\n      startRecordingOperationSpec,\n    );\n  }\n\n  /**\n   * Get call recording properties.\n   * @param recordingId The recording id.\n   * @param options The options parameters.\n   */\n  getRecordingProperties(\n    recordingId: string,\n    options?: CallRecordingGetRecordingPropertiesOptionalParams,\n  ): Promise<CallRecordingGetRecordingPropertiesResponse> {\n    return this.client.sendOperationRequest(\n      { recordingId, options },\n      getRecordingPropertiesOperationSpec,\n    );\n  }\n\n  /**\n   * Stop recording the call.\n   * @param recordingId The recording id.\n   * @param options The options parameters.\n   */\n  stopRecording(\n    recordingId: string,\n    options?: CallRecordingStopRecordingOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { recordingId, options },\n      stopRecordingOperationSpec,\n    );\n  }\n\n  /**\n   * Pause recording the call.\n   * @param recordingId The recording id.\n   * @param options The options parameters.\n   */\n  pauseRecording(\n    recordingId: string,\n    options?: CallRecordingPauseRecordingOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { recordingId, options },\n      pauseRecordingOperationSpec,\n    );\n  }\n\n  /**\n   * Resume recording the call.\n   * @param recordingId The recording id.\n   * @param options The options parameters.\n   */\n  resumeRecording(\n    recordingId: string,\n    options?: CallRecordingResumeRecordingOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { recordingId, options },\n      resumeRecordingOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst startRecordingOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/recordings\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RecordingStateResponse,\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  requestBody: Parameters.startCallRecording,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.repeatabilityRequestID,\n    Parameters.repeatabilityFirstSent,\n  ],\n  mediaType: \"json\",\n  serializer,\n};\nconst getRecordingPropertiesOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/recordings/{recordingId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RecordingStateResponse,\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.recordingId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst stopRecordingOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/recordings/{recordingId}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.recordingId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst pauseRecordingOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/recordings/{recordingId}:pause\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {},\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.recordingId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst resumeRecordingOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/recordings/{recordingId}:resume\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {},\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.recordingId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport {\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest,\n} from \"@azure/core-rest-pipeline\";\nimport {\n  CallConnectionImpl,\n  CallMediaImpl,\n  CallRecordingImpl,\n} from \"./operations\";\nimport {\n  CallConnection,\n  CallMedia,\n  CallRecording,\n} from \"./operationsInterfaces\";\nimport * as Parameters from \"./models/parameters\";\nimport * as Mappers from \"./models/mappers\";\nimport {\n  CallAutomationApiClientOptionalParams,\n  CreateCallRequest,\n  CreateCallOptionalParams,\n  CreateCallResponse,\n  AnswerCallRequest,\n  AnswerCallOptionalParams,\n  AnswerCallResponse,\n  RedirectCallRequest,\n  RedirectCallOptionalParams,\n  RejectCallRequest,\n  RejectCallOptionalParams,\n} from \"./models\";\n\nexport class CallAutomationApiClient extends coreClient.ServiceClient {\n  endpoint: string;\n  apiVersion: string;\n\n  /**\n   * Initializes a new instance of the CallAutomationApiClient class.\n   * @param endpoint The endpoint of the Azure Communication resource.\n   * @param options The parameter options\n   */\n  constructor(\n    endpoint: string,\n    options?: CallAutomationApiClientOptionalParams,\n  ) {\n    if (endpoint === undefined) {\n      throw new Error(\"'endpoint' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: CallAutomationApiClientOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n    };\n\n    const packageDetails = `azsdk-js-communication-call-automation/1.2.0`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix,\n      },\n      endpoint: options.endpoint ?? options.baseUri ?? \"{endpoint}\",\n    };\n    super(optionsWithDefaults);\n    // Parameter assignments\n    this.endpoint = endpoint;\n\n    // Assigning values to Constant parameters\n    this.apiVersion = options.apiVersion || \"2024-04-15\";\n    this.callConnection = new CallConnectionImpl(this);\n    this.callMedia = new CallMediaImpl(this);\n    this.callRecording = new CallRecordingImpl(this);\n    this.addCustomApiVersionPolicy(options.apiVersion);\n  }\n\n  /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */\n  private addCustomApiVersionPolicy(apiVersion?: string) {\n    if (!apiVersion) {\n      return;\n    }\n    const apiVersionPolicy = {\n      name: \"CustomApiVersionPolicy\",\n      async sendRequest(\n        request: PipelineRequest,\n        next: SendRequest,\n      ): Promise<PipelineResponse> {\n        const param = request.url.split(\"?\");\n        if (param.length > 1) {\n          const newParams = param[1].split(\"&\").map((item) => {\n            if (item.indexOf(\"api-version\") > -1) {\n              return \"api-version=\" + apiVersion;\n            } else {\n              return item;\n            }\n          });\n          request.url = param[0] + \"?\" + newParams.join(\"&\");\n        }\n        return next(request);\n      },\n    };\n    this.pipeline.addPolicy(apiVersionPolicy);\n  }\n\n  /**\n   * Create an outbound call.\n   * @param createCallRequest The create call request.\n   * @param options The options parameters.\n   */\n  createCall(\n    createCallRequest: CreateCallRequest,\n    options?: CreateCallOptionalParams,\n  ): Promise<CreateCallResponse> {\n    return this.sendOperationRequest(\n      { createCallRequest, options },\n      createCallOperationSpec,\n    );\n  }\n\n  /**\n   * Answer a call using the IncomingCallContext from Event Grid.\n   * @param answerCallRequest The answer call request.\n   * @param options The options parameters.\n   */\n  answerCall(\n    answerCallRequest: AnswerCallRequest,\n    options?: AnswerCallOptionalParams,\n  ): Promise<AnswerCallResponse> {\n    return this.sendOperationRequest(\n      { answerCallRequest, options },\n      answerCallOperationSpec,\n    );\n  }\n\n  /**\n   * Redirect a call.\n   * @param redirectCallRequest The redirect call request.\n   * @param options The options parameters.\n   */\n  redirectCall(\n    redirectCallRequest: RedirectCallRequest,\n    options?: RedirectCallOptionalParams,\n  ): Promise<void> {\n    return this.sendOperationRequest(\n      { redirectCallRequest, options },\n      redirectCallOperationSpec,\n    );\n  }\n\n  /**\n   * Reject the call.\n   * @param rejectCallRequest The reject call request.\n   * @param options The options parameters.\n   */\n  rejectCall(\n    rejectCallRequest: RejectCallRequest,\n    options?: RejectCallOptionalParams,\n  ): Promise<void> {\n    return this.sendOperationRequest(\n      { rejectCallRequest, options },\n      rejectCallOperationSpec,\n    );\n  }\n\n  callConnection: CallConnection;\n  callMedia: CallMedia;\n  callRecording: CallRecording;\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createCallOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections\",\n  httpMethod: \"POST\",\n  responses: {\n    201: {\n      bodyMapper: Mappers.CallConnectionPropertiesInternal,\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  requestBody: Parameters.createCallRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.repeatabilityRequestID,\n    Parameters.repeatabilityFirstSent,\n  ],\n  mediaType: \"json\",\n  serializer,\n};\nconst answerCallOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections:answer\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CallConnectionPropertiesInternal,\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  requestBody: Parameters.answerCallRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.repeatabilityRequestID,\n    Parameters.repeatabilityFirstSent,\n  ],\n  mediaType: \"json\",\n  serializer,\n};\nconst redirectCallOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections:redirect\",\n  httpMethod: \"POST\",\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  requestBody: Parameters.redirectCallRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.repeatabilityRequestID,\n    Parameters.repeatabilityFirstSent,\n  ],\n  mediaType: \"json\",\n  serializer,\n};\nconst rejectCallOperationSpec: coreClient.OperationSpec = {\n  path: \"/calling/callConnections:reject\",\n  httpMethod: \"POST\",\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n    },\n  },\n  requestBody: Parameters.rejectCallRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.repeatabilityRequestID,\n    Parameters.repeatabilityFirstSent,\n  ],\n  mediaType: \"json\",\n  serializer,\n};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  PlayRequest,\n  PlaySourceInternal,\n  FileSourceInternal,\n  TextSourceInternal,\n  SsmlSourceInternal,\n  KnownPlaySourceType,\n  RecognizeRequest,\n  KnownRecognizeInputType,\n  RecognizeOptions,\n  DtmfOptions,\n  CallAutomationApiClient,\n  CallAutomationApiClientOptionalParams,\n  ContinuousDtmfRecognitionRequest,\n  SendDtmfTonesRequest,\n  Tone,\n  SpeechOptions,\n} from \"./generated/src\";\n\nimport { CallMediaImpl } from \"./generated/src/operations\";\n\nimport {\n  CommunicationIdentifier,\n  createCommunicationAuthPolicy,\n  serializeCommunicationIdentifier,\n} from \"@azure/communication-common\";\n\nimport { FileSource, TextSource, SsmlSource, DtmfTone } from \"./models/models\";\n\nimport {\n  PlayOptions,\n  CallMediaRecognizeDtmfOptions,\n  CallMediaRecognizeChoiceOptions,\n  ContinuousDtmfRecognitionOptions,\n  SendDtmfTonesOptions,\n  CallMediaRecognizeSpeechOptions,\n  CallMediaRecognizeSpeechOrDtmfOptions,\n} from \"./models/options\";\nimport { KeyCredential, TokenCredential } from \"@azure/core-auth\";\nimport { SendDtmfTonesResult } from \"./models/responses\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n/**\n * CallMedia class represents call media related APIs.\n */\nexport class CallMedia {\n  private readonly callConnectionId: string;\n  private readonly callMedia: CallMediaImpl;\n  private readonly callAutomationApiClient: CallAutomationApiClient;\n  constructor(\n    callConnectionId: string,\n    endpoint: string,\n    credential: KeyCredential | TokenCredential,\n    options?: CallAutomationApiClientOptionalParams,\n  ) {\n    this.callAutomationApiClient = new CallAutomationApiClient(endpoint, options);\n    const authPolicy = createCommunicationAuthPolicy(credential);\n    this.callAutomationApiClient.pipeline.addPolicy(authPolicy);\n    this.callConnectionId = callConnectionId;\n    this.callMedia = new CallMediaImpl(this.callAutomationApiClient);\n  }\n\n  private createPlaySourceInternal(\n    playSource: FileSource | TextSource | SsmlSource,\n  ): PlaySourceInternal {\n    if (playSource.kind === \"fileSource\") {\n      const fileSource: FileSourceInternal = {\n        uri: playSource.url,\n      };\n      return {\n        kind: KnownPlaySourceType.File,\n        file: fileSource,\n        playSourceCacheId: playSource.playsourcacheid,\n      };\n    } else if (playSource.kind === \"textSource\") {\n      const textSource: TextSourceInternal = {\n        text: playSource.text,\n        sourceLocale: playSource.sourceLocale,\n        voiceKind: playSource.voiceKind,\n        voiceName: playSource.voiceName,\n        customVoiceEndpointId: playSource.customVoiceEndpointId,\n      };\n      return {\n        kind: KnownPlaySourceType.Text,\n        text: textSource,\n        playSourceCacheId: playSource.playsourcacheid,\n      };\n    } else if (playSource.kind === \"ssmlSource\") {\n      const ssmlSource: SsmlSourceInternal = {\n        ssmlText: playSource.ssmlText,\n        customVoiceEndpointId: playSource.customVoiceEndpointId,\n      };\n      return {\n        kind: KnownPlaySourceType.Ssml,\n        ssml: ssmlSource,\n        playSourceCacheId: playSource.playsourcacheid,\n      };\n    }\n    throw new Error(\"Invalid play source\");\n  }\n\n  /**\n   * Play audio to a specific participant.\n   *\n   * @param playSources - A PlaySource representing the sources to play. Currently only single play source per request is supported.\n   * @param playTo - The targets to play to.\n   * @param options - Additional attributes for play.\n   */\n  public async play(\n    playSources: (FileSource | TextSource | SsmlSource)[],\n    playTo: CommunicationIdentifier[],\n    options: PlayOptions = { loop: false },\n  ): Promise<void> {\n    const playRequest: PlayRequest = {\n      playSources: playSources.map((source) => this.createPlaySourceInternal(source)),\n      playTo: playTo.map((identifier) => serializeCommunicationIdentifier(identifier)),\n      playOptions: {\n        loop: false,\n      },\n      operationContext: options.operationContext,\n      operationCallbackUri: options.operationCallbackUrl,\n    };\n\n    if (options.loop !== undefined) {\n      playRequest.playOptions = playRequest.playOptions || { loop: false }; // Ensure playOptions is defined\n      playRequest.playOptions.loop = options.loop;\n    }\n    return this.callMedia.play(this.callConnectionId, playRequest, options);\n  }\n\n  /**\n   * Play to all participants.\n   *\n   * @param playSources - A PlaySource representing the sources to play. Currently only single play source per request is supported.\n   * @param options - Additional attributes for play.\n   */\n  public async playToAll(\n    playSources: (FileSource | TextSource | SsmlSource)[],\n    options: PlayOptions = { loop: false },\n  ): Promise<void> {\n    const playRequest: PlayRequest = {\n      playSources: playSources.map((source) => this.createPlaySourceInternal(source)),\n      playTo: [],\n      playOptions: {\n        loop: false,\n      },\n      operationContext: options.operationContext,\n      operationCallbackUri: options.operationCallbackUrl,\n    };\n\n    if (options.loop !== undefined) {\n      playRequest.playOptions = playRequest.playOptions || { loop: false }; // Ensure playOptions is defined\n      playRequest.playOptions.loop = options.loop;\n    }\n    return this.callMedia.play(this.callConnectionId, playRequest, options);\n  }\n\n  private createRecognizeRequest(\n    targetParticipant: CommunicationIdentifier,\n    recognizeOptions:\n      | CallMediaRecognizeDtmfOptions\n      | CallMediaRecognizeChoiceOptions\n      | CallMediaRecognizeSpeechOptions\n      | CallMediaRecognizeSpeechOrDtmfOptions,\n  ): RecognizeRequest {\n    if (recognizeOptions.kind === \"callMediaRecognizeDtmfOptions\") {\n      const dtmfOptionsInternal: DtmfOptions = {\n        interToneTimeoutInSeconds: recognizeOptions.interToneTimeoutInSeconds\n          ? recognizeOptions.interToneTimeoutInSeconds\n          : 2,\n        maxTonesToCollect: recognizeOptions.maxTonesToCollect,\n        stopTones: recognizeOptions.stopDtmfTones,\n      };\n      const recognizeOptionsInternal: RecognizeOptions = {\n        interruptPrompt: recognizeOptions.interruptPrompt,\n        initialSilenceTimeoutInSeconds: recognizeOptions.initialSilenceTimeoutInSeconds\n          ? recognizeOptions.initialSilenceTimeoutInSeconds\n          : 5,\n        targetParticipant: serializeCommunicationIdentifier(targetParticipant),\n        dtmfOptions: dtmfOptionsInternal,\n      };\n      return {\n        recognizeInputType: KnownRecognizeInputType.Dtmf,\n        playPrompt: recognizeOptions.playPrompt\n          ? this.createPlaySourceInternal(recognizeOptions.playPrompt)\n          : undefined,\n        interruptCallMediaOperation: recognizeOptions.interruptCallMediaOperation,\n        recognizeOptions: recognizeOptionsInternal,\n        operationContext: recognizeOptions.operationContext,\n        operationCallbackUri: recognizeOptions.operationCallbackUrl,\n      };\n    } else if (recognizeOptions.kind === \"callMediaRecognizeChoiceOptions\") {\n      const recognizeOptionsInternal: RecognizeOptions = {\n        interruptPrompt: recognizeOptions.interruptPrompt,\n        initialSilenceTimeoutInSeconds: recognizeOptions.initialSilenceTimeoutInSeconds\n          ? recognizeOptions.initialSilenceTimeoutInSeconds\n          : 5,\n        targetParticipant: serializeCommunicationIdentifier(targetParticipant),\n        speechLanguage: recognizeOptions.speechLanguage,\n        speechRecognitionModelEndpointId: recognizeOptions.speechRecognitionModelEndpointId,\n        choices: recognizeOptions.choices,\n      };\n      return {\n        recognizeInputType: KnownRecognizeInputType.Choices,\n        playPrompt: recognizeOptions.playPrompt\n          ? this.createPlaySourceInternal(recognizeOptions.playPrompt)\n          : undefined,\n        interruptCallMediaOperation: recognizeOptions.interruptCallMediaOperation,\n        recognizeOptions: recognizeOptionsInternal,\n        operationContext: recognizeOptions.operationContext,\n        operationCallbackUri: recognizeOptions.operationCallbackUrl,\n      };\n    } else if (recognizeOptions.kind === \"callMediaRecognizeSpeechOptions\") {\n      const speechOptions: SpeechOptions = {\n        endSilenceTimeoutInMs: recognizeOptions.endSilenceTimeoutInSeconds\n          ? recognizeOptions.endSilenceTimeoutInSeconds * 1000\n          : 2000,\n      };\n      const recognizeOptionsInternal: RecognizeOptions = {\n        interruptPrompt: recognizeOptions.interruptPrompt,\n        initialSilenceTimeoutInSeconds: recognizeOptions.initialSilenceTimeoutInSeconds\n          ? recognizeOptions.initialSilenceTimeoutInSeconds\n          : 5,\n        targetParticipant: serializeCommunicationIdentifier(targetParticipant),\n        speechOptions: speechOptions,\n        speechLanguage: recognizeOptions.speechLanguage,\n        speechRecognitionModelEndpointId: recognizeOptions.speechRecognitionModelEndpointId,\n      };\n      return {\n        recognizeInputType: KnownRecognizeInputType.Speech,\n        playPrompt: recognizeOptions.playPrompt\n          ? this.createPlaySourceInternal(recognizeOptions.playPrompt)\n          : undefined,\n        interruptCallMediaOperation: recognizeOptions.interruptCallMediaOperation,\n        recognizeOptions: recognizeOptionsInternal,\n        operationContext: recognizeOptions.operationContext,\n        operationCallbackUri: recognizeOptions.operationCallbackUrl,\n      };\n    } else if (recognizeOptions.kind === \"callMediaRecognizeSpeechOrDtmfOptions\") {\n      const dtmfOptionsInternal: DtmfOptions = {\n        interToneTimeoutInSeconds: recognizeOptions.interToneTimeoutInSeconds\n          ? recognizeOptions.interToneTimeoutInSeconds\n          : 2,\n        maxTonesToCollect: recognizeOptions.maxTonesToCollect,\n        stopTones: recognizeOptions.stopDtmfTones,\n      };\n      const speechOptions: SpeechOptions = {\n        endSilenceTimeoutInMs: recognizeOptions.endSilenceTimeoutInSeconds\n          ? recognizeOptions.endSilenceTimeoutInSeconds * 1000\n          : 2000,\n      };\n      const recognizeOptionsInternal: RecognizeOptions = {\n        interruptPrompt: recognizeOptions.interruptPrompt,\n        initialSilenceTimeoutInSeconds: recognizeOptions.initialSilenceTimeoutInSeconds\n          ? recognizeOptions.initialSilenceTimeoutInSeconds\n          : 5,\n        targetParticipant: serializeCommunicationIdentifier(targetParticipant),\n        speechOptions: speechOptions,\n        dtmfOptions: dtmfOptionsInternal,\n        speechLanguage: recognizeOptions.speechLanguage,\n        speechRecognitionModelEndpointId: recognizeOptions.speechRecognitionModelEndpointId,\n      };\n      return {\n        recognizeInputType: KnownRecognizeInputType.SpeechOrDtmf,\n        playPrompt: recognizeOptions.playPrompt\n          ? this.createPlaySourceInternal(recognizeOptions.playPrompt)\n          : undefined,\n        interruptCallMediaOperation: recognizeOptions.interruptCallMediaOperation,\n        recognizeOptions: recognizeOptionsInternal,\n        operationContext: recognizeOptions.operationContext,\n        operationCallbackUri: recognizeOptions.operationCallbackUrl,\n      };\n    }\n    throw new Error(\"Invalid recognizeOptions\");\n  }\n\n  /**\n   *  Recognize participant input.\n   *  @deprecated This method signature is deprecated. Please use the new signature with targetParticipant and options params instead, and set maxTonesToCollect in options.\n   *  @param targetParticipant - Target participant.\n   *  @param maxTonesToCollect - Maximum number of DTMF tones to be collected.\n   *  @param options - Different attributes for recognize.\n   * */\n  public async startRecognizing(\n    targetParticipant: CommunicationIdentifier,\n    maxTonesToCollect: number,\n    options: CallMediaRecognizeDtmfOptions,\n  ): Promise<void>;\n\n  /**\n   *  Recognize participant input.\n   *  @param targetParticipant - Target participant.\n   *  @param options - Different attributes for recognize.\n   * */\n  public async startRecognizing(\n    targetParticipant: CommunicationIdentifier,\n    options:\n      | CallMediaRecognizeDtmfOptions\n      | CallMediaRecognizeChoiceOptions\n      | CallMediaRecognizeSpeechOptions\n      | CallMediaRecognizeSpeechOrDtmfOptions,\n  ): Promise<void>;\n  async startRecognizing(\n    targetParticipant: CommunicationIdentifier,\n    maxTonesOrOptions:\n      | number\n      | CallMediaRecognizeDtmfOptions\n      | CallMediaRecognizeChoiceOptions\n      | CallMediaRecognizeSpeechOptions\n      | CallMediaRecognizeSpeechOrDtmfOptions,\n    options?: CallMediaRecognizeDtmfOptions,\n  ): Promise<void> {\n    if (typeof maxTonesOrOptions === \"number\" && options) {\n      // Old function signature logic\n      console.warn(\n        \"Deprecated function signature used. Please use the new signature with targetParticipant and options params instead, and set maxTonesToCollect in options.\",\n      );\n      options.maxTonesToCollect = maxTonesOrOptions;\n      return this.callMedia.recognize(\n        this.callConnectionId,\n        this.createRecognizeRequest(targetParticipant, options),\n        {},\n      );\n    } else if (typeof maxTonesOrOptions !== \"number\" && !options) {\n      // New function signature logic\n      return this.callMedia.recognize(\n        this.callConnectionId,\n        this.createRecognizeRequest(targetParticipant, maxTonesOrOptions),\n        {},\n      );\n    }\n    throw new Error(\"Invalid params\");\n  }\n\n  /**\n   * Cancels all the queued media operations.\n   */\n  public async cancelAllOperations(): Promise<void> {\n    return this.callMedia.cancelAllMediaOperations(this.callConnectionId, {});\n  }\n\n  /**\n   * Start continuous Dtmf recognition by subscribing to tones.\n   * @param targetParticipant - Target participant.\n   * @param options - Additional attributes for continuous Dtmf recognition.\n   * */\n  public async startContinuousDtmfRecognition(\n    targetParticipant: CommunicationIdentifier,\n    options: ContinuousDtmfRecognitionOptions = {},\n  ): Promise<void> {\n    const continuousDtmfRecognitionRequest: ContinuousDtmfRecognitionRequest = {\n      targetParticipant: serializeCommunicationIdentifier(targetParticipant),\n      operationContext: options.operationContext,\n    };\n    return this.callMedia.startContinuousDtmfRecognition(\n      this.callConnectionId,\n      continuousDtmfRecognitionRequest,\n      {},\n    );\n  }\n\n  /**\n   * Stop continuous Dtmf recognition by unsubscribing to tones.\n   * @param targetParticipant - Target participant.\n   * @param options - Additional attributes for continuous Dtmf recognition.\n   * */\n  public async stopContinuousDtmfRecognition(\n    targetParticipant: CommunicationIdentifier,\n    options: ContinuousDtmfRecognitionOptions = {},\n  ): Promise<void> {\n    const continuousDtmfRecognitionRequest: ContinuousDtmfRecognitionRequest = {\n      targetParticipant: serializeCommunicationIdentifier(targetParticipant),\n      operationContext: options.operationContext,\n      operationCallbackUri: options.operationCallbackUrl,\n    };\n    return this.callMedia.stopContinuousDtmfRecognition(\n      this.callConnectionId,\n      continuousDtmfRecognitionRequest,\n      {},\n    );\n  }\n\n  /**\n   * Send Dtmf tones.\n   * @param tones - List of tones to be sent to target participant.\n   * @param targetParticipant - Target participant.\n   * @param options - Additional attributes for send Dtmf tones.\n   * */\n  public async sendDtmfTones(\n    tones: Tone[] | DtmfTone[],\n    targetParticipant: CommunicationIdentifier,\n    options: SendDtmfTonesOptions = {},\n  ): Promise<SendDtmfTonesResult> {\n    const sendDtmfTonesRequest: SendDtmfTonesRequest = {\n      tones: tones,\n      targetParticipant: serializeCommunicationIdentifier(targetParticipant),\n      operationContext: options.operationContext,\n      operationCallbackUri: options.operationCallbackUrl,\n    };\n    const optionsInternal = {\n      ...options,\n      repeatabilityFirstSent: new Date(),\n      repeatabilityRequestID: uuidv4(),\n    };\n    const result = await this.callMedia.sendDtmfTones(\n      this.callConnectionId,\n      sendDtmfTonesRequest,\n      optionsInternal,\n    );\n    const sendDtmfTonesResult: SendDtmfTonesResult = {\n      ...result,\n    };\n    return sendDtmfTonesResult;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  PhoneNumberIdentifier,\n  CommunicationUserIdentifier,\n  UnknownIdentifier,\n  serializeCommunicationIdentifier,\n  SerializedPhoneNumberIdentifier,\n  CommunicationIdentifier,\n  isCommunicationUserIdentifier,\n  isPhoneNumberIdentifier,\n  isUnknownIdentifier,\n  SerializedCommunicationIdentifier,\n  isMicrosoftTeamsUserIdentifier,\n  MicrosoftTeamsUserIdentifier,\n  isMicrosoftTeamsAppIdentifier,\n  MicrosoftTeamsAppIdentifier,\n} from \"@azure/communication-common\";\nimport {\n  CallParticipantInternal,\n  CommunicationIdentifierModel,\n  CommunicationIdentifierModelKind,\n  KnownCommunicationCloudEnvironmentModel,\n  KnownCommunicationIdentifierModelKind,\n  PhoneNumberIdentifierModel,\n  CommunicationUserIdentifierModel,\n} from \"../generated/src\";\nimport { CallParticipant } from \"../models/models\";\n\nfunction extractKind(\n  identifierModel: CommunicationIdentifierModel,\n): CommunicationIdentifierModelKind {\n  if (identifierModel.communicationUser !== undefined) {\n    return KnownCommunicationIdentifierModelKind.CommunicationUser;\n  }\n  if (identifierModel.phoneNumber !== undefined) {\n    return KnownCommunicationIdentifierModelKind.PhoneNumber;\n  }\n  if (identifierModel.microsoftTeamsUser !== undefined) {\n    return KnownCommunicationIdentifierModelKind.MicrosoftTeamsUser;\n  }\n  if (identifierModel.microsoftTeamsApp !== undefined) {\n    return KnownCommunicationIdentifierModelKind.MicrosoftTeamsApp;\n  }\n  return KnownCommunicationIdentifierModelKind.Unknown;\n}\n\n/** Convert PhoneNumberIdentifier to PhoneNumberIdentifierModel(Internal usage class) */\nexport function PhoneNumberIdentifierModelConverter(\n  phoneNumberIdentifier: PhoneNumberIdentifier | undefined,\n): PhoneNumberIdentifierModel | undefined {\n  if (phoneNumberIdentifier === undefined || phoneNumberIdentifier.phoneNumber === undefined) {\n    return undefined;\n  }\n\n  const phoneNumberIdentifierModel =\n    serializeCommunicationIdentifier(phoneNumberIdentifier).phoneNumber;\n  return phoneNumberIdentifierModel;\n}\n\n/** Convert SerializedPhoneNumberIdentifier to PhoneNumberIdentifier(Public usage class) */\nexport function phoneNumberIdentifierConverter(\n  serializedPhoneNumberIdentifier: SerializedPhoneNumberIdentifier | undefined,\n): PhoneNumberIdentifier | undefined {\n  if (\n    serializedPhoneNumberIdentifier === undefined ||\n    serializedPhoneNumberIdentifier?.value === null\n  ) {\n    return undefined;\n  }\n\n  const phoneNumberIdentifier: PhoneNumberIdentifier = {\n    phoneNumber: serializedPhoneNumberIdentifier.value,\n  };\n  return phoneNumberIdentifier;\n}\n\n/** Convert CommunicationIdentifierModel to CommunicationIdentifier(Public usage class) */\nexport function communicationIdentifierConverter(\n  identifierModel: CommunicationIdentifierModel,\n): CommunicationIdentifier {\n  const rawId = identifierModel.rawId;\n  const kind =\n    identifierModel.kind !== undefined ? identifierModel.kind : extractKind(identifierModel);\n\n  if (\n    kind === KnownCommunicationIdentifierModelKind.CommunicationUser &&\n    identifierModel.communicationUser !== undefined\n  ) {\n    const communicationUserIdentifier: CommunicationUserIdentifier = {\n      communicationUserId: identifierModel.communicationUser.id,\n    };\n    return communicationUserIdentifier;\n  }\n\n  if (\n    kind === KnownCommunicationIdentifierModelKind.PhoneNumber &&\n    identifierModel.phoneNumber !== undefined\n  ) {\n    const phoneNumberIdentifier: PhoneNumberIdentifier = {\n      phoneNumber: identifierModel.phoneNumber.value,\n      rawId: rawId,\n    };\n    return phoneNumberIdentifier;\n  }\n\n  if (\n    kind === KnownCommunicationIdentifierModelKind.MicrosoftTeamsUser &&\n    identifierModel.microsoftTeamsUser !== undefined\n  ) {\n    const microsoftTeamsUserIdentifier: MicrosoftTeamsUserIdentifier = {\n      rawId: rawId,\n      microsoftTeamsUserId: identifierModel.microsoftTeamsUser.userId,\n      isAnonymous: identifierModel.microsoftTeamsUser.isAnonymous,\n      cloud: identifierModel.microsoftTeamsUser.cloud as KnownCommunicationCloudEnvironmentModel,\n    };\n    return microsoftTeamsUserIdentifier;\n  }\n\n  if (\n    kind === KnownCommunicationIdentifierModelKind.MicrosoftTeamsApp &&\n    identifierModel.microsoftTeamsApp !== undefined\n  ) {\n    const microsoftTeamsAppIdentifier: MicrosoftTeamsAppIdentifier = {\n      teamsAppId: identifierModel.microsoftTeamsApp.appId,\n      cloud: identifierModel.microsoftTeamsApp.cloud as \"public\" | \"dod\" | \"gcch\" | undefined,\n      rawId: rawId,\n    };\n    return microsoftTeamsAppIdentifier;\n  }\n\n  const unknownIdentifier: UnknownIdentifier = {\n    id: rawId ? rawId : \"\",\n  };\n  return unknownIdentifier;\n}\n\n/** Convert CommunicationIdentifier to CommunicationIdentifierModel(Internal usage class) */\nexport function communicationIdentifierModelConverter(\n  identifier: CommunicationIdentifier,\n): CommunicationIdentifierModel {\n  const serializedIdentifier: SerializedCommunicationIdentifier =\n    serializeCommunicationIdentifier(identifier);\n  if (isCommunicationUserIdentifier(identifier)) {\n    const communicationUserIdentifierModel: CommunicationIdentifierModel = {\n      kind: KnownCommunicationIdentifierModelKind.CommunicationUser,\n      ...serializedIdentifier,\n    };\n    return communicationUserIdentifierModel;\n  }\n\n  if (isPhoneNumberIdentifier(identifier)) {\n    const phoneNumberIdentifierModel: CommunicationIdentifierModel = {\n      kind: KnownCommunicationIdentifierModelKind.PhoneNumber,\n      ...serializedIdentifier,\n    };\n    return phoneNumberIdentifierModel;\n  }\n\n  if (isMicrosoftTeamsUserIdentifier(identifier)) {\n    const microsoftTeamsUserIdentifierModel: CommunicationIdentifierModel = {\n      kind: KnownCommunicationIdentifierModelKind.MicrosoftTeamsUser,\n      ...serializedIdentifier,\n    };\n    return microsoftTeamsUserIdentifierModel;\n  }\n\n  if (isMicrosoftTeamsAppIdentifier(identifier)) {\n    const microsoftTeamsAppIdentifier: CommunicationIdentifierModel = {\n      kind: KnownCommunicationIdentifierModelKind.MicrosoftTeamsApp,\n      ...serializedIdentifier,\n    };\n    return microsoftTeamsAppIdentifier;\n  }\n\n  if (isUnknownIdentifier(identifier)) {\n    const unknownIdentifierModel: CommunicationIdentifierModel = {\n      kind: KnownCommunicationIdentifierModelKind.Unknown,\n      ...serializedIdentifier,\n    };\n    return unknownIdentifierModel;\n  }\n\n  throw new Error();\n}\n\n/** Convert CallParticipantInternal to CallParticipant */\nexport function callParticipantConverter(\n  acsCallParticipant: CallParticipantInternal,\n): CallParticipant {\n  const callParticipant: CallParticipant = {\n    ...acsCallParticipant,\n    identifier: acsCallParticipant.identifier\n      ? communicationIdentifierConverter(acsCallParticipant.identifier)\n      : undefined,\n  };\n  return callParticipant;\n}\n\n/** Convert CommunicationUserIdentifier to CommunicationUserIdentifierModel (Internal usage class) */\nexport function communicationUserIdentifierModelConverter(\n  identifier: CommunicationUserIdentifier | undefined,\n): CommunicationUserIdentifierModel | undefined {\n  if (!identifier || !identifier.communicationUserId) {\n    return undefined;\n  }\n\n  return { id: identifier.communicationUserId };\n}\n\n/** Convert CommunicationUserIdentifierModel to CommunicationUserIdentifier (Public usage class) */\nexport function communicationUserIdentifierConverter(\n  identifier: CommunicationUserIdentifierModel | undefined,\n): CommunicationUserIdentifier | undefined {\n  if (!identifier || !identifier.id) {\n    return undefined;\n  }\n\n  return { communicationUserId: identifier.id };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  CommunicationIdentifier,\n  createCommunicationAuthPolicy,\n} from \"@azure/communication-common\";\nimport { CallMedia } from \"./callMedia\";\nimport {\n  AddParticipantRequest,\n  CallAutomationApiClient,\n  CallAutomationApiClientOptionalParams,\n  CustomCallingContextInternal,\n  MuteParticipantsRequest,\n  RemoveParticipantRequest,\n  TransferToParticipantRequest,\n} from \"./generated/src\";\nimport { CallConnectionImpl } from \"./generated/src/operations\";\nimport {\n  CallConnectionProperties,\n  CallInvite,\n  CallParticipant,\n  CustomCallingContext,\n} from \"./models/models\";\nimport {\n  AddParticipantOptions,\n  CancelAddParticipantOperationOptions,\n  GetCallConnectionPropertiesOptions,\n  GetParticipantOptions,\n  HangUpOptions,\n  MuteParticipantOption,\n  RemoveParticipantsOption,\n  TransferCallToParticipantOptions,\n} from \"./models/options\";\nimport {\n  ListParticipantsResult,\n  TransferCallResult,\n  AddParticipantResult,\n  RemoveParticipantResult,\n  MuteParticipantResult,\n  CancelAddParticipantOperationResult,\n} from \"./models/responses\";\nimport {\n  callParticipantConverter,\n  communicationIdentifierConverter,\n  communicationIdentifierModelConverter,\n  communicationUserIdentifierConverter,\n  phoneNumberIdentifierConverter,\n  PhoneNumberIdentifierModelConverter,\n} from \"./utli/converters\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { KeyCredential, TokenCredential } from \"@azure/core-auth\";\n\n/**\n * CallConnection class represents call connection based APIs.\n */\nexport class CallConnection {\n  private readonly callConnectionId: string;\n  private readonly callConnection: CallConnectionImpl;\n  private readonly callAutomationApiClient: CallAutomationApiClient;\n  private readonly endpoint: string;\n  private readonly credential: TokenCredential | KeyCredential;\n  private readonly callAutomationApiClientOptions?: CallAutomationApiClientOptionalParams;\n  constructor(\n    callConnectionId: string,\n    endpoint: string,\n    credential: KeyCredential | TokenCredential,\n    options?: CallAutomationApiClientOptionalParams,\n  ) {\n    this.callAutomationApiClient = new CallAutomationApiClient(endpoint, options);\n    const authPolicy = createCommunicationAuthPolicy(credential);\n    this.callAutomationApiClient.pipeline.addPolicy(authPolicy);\n    this.callConnectionId = callConnectionId;\n    this.callConnection = new CallConnectionImpl(this.callAutomationApiClient);\n    this.endpoint = endpoint;\n    this.credential = credential;\n    this.callAutomationApiClientOptions = options;\n  }\n\n  /**\n   * Initializes a new instance of CallMedia.\n   */\n  public getCallMedia(): CallMedia {\n    return new CallMedia(\n      this.callConnectionId,\n      this.endpoint,\n      this.credential,\n      this.callAutomationApiClientOptions,\n    );\n  }\n\n  /**\n   * Get call connection properties of the call\n   */\n  public async getCallConnectionProperties(\n    options: GetCallConnectionPropertiesOptions = {},\n  ): Promise<CallConnectionProperties> {\n    const { targets, sourceCallerIdNumber, answeredBy, source, ...result } =\n      await this.callConnection.getCall(this.callConnectionId, options);\n    const callConnectionProperties: CallConnectionProperties = {\n      ...result,\n      source: source ? communicationIdentifierConverter(source) : undefined,\n      answeredby: communicationUserIdentifierConverter(answeredBy),\n      targetParticipants: targets?.map((target) => communicationIdentifierConverter(target)),\n      sourceCallerIdNumber: sourceCallerIdNumber\n        ? phoneNumberIdentifierConverter(sourceCallerIdNumber)\n        : undefined,\n    };\n    return callConnectionProperties;\n  }\n\n  /**\n   * Hang up the call for itself or terminate the whole call.\n   *\n   * @param isForEveryOne - Determine if every one in the call would be hung up or not.\n   */\n  public async hangUp(isForEveryone: boolean, options: HangUpOptions = {}): Promise<void> {\n    if (isForEveryone) {\n      const optionsInternal = {\n        ...options,\n        repeatabilityFirstSent: new Date(),\n        repeatabilityRequestID: uuidv4(),\n      };\n      await this.callConnection.terminateCall(this.callConnectionId, optionsInternal);\n    } else {\n      await this.callConnection.hangupCall(this.callConnectionId, options);\n    }\n    return;\n  }\n\n  /**\n   * Get a participant from the call\n   *\n   * @param targetParticipant - The communication identifier of requested participant.\n   */\n  public async getParticipant(\n    targetParticipant: CommunicationIdentifier,\n    options: GetParticipantOptions = {},\n  ): Promise<CallParticipant> {\n    let rawId: string | undefined = communicationIdentifierModelConverter(targetParticipant).rawId;\n    rawId = rawId === undefined ? \"\" : rawId;\n\n    const result = await this.callConnection.getParticipant(this.callConnectionId, rawId, options);\n    const callParticipant: CallParticipant = {\n      identifier: result.identifier\n        ? communicationIdentifierConverter(result.identifier)\n        : undefined,\n      isMuted: result.isMuted,\n    };\n    return callParticipant;\n  }\n\n  /**\n   * Get all participants from the call\n   */\n  public async listParticipants(\n    options: GetParticipantOptions = {},\n  ): Promise<ListParticipantsResult> {\n    const result = this.callConnection.listParticipants(this.callConnectionId, options);\n    const participants = [];\n    const pages = result?.byPage();\n\n    for await (const page of pages) {\n      for (const participant of page) {\n        participants.push(callParticipantConverter(participant));\n      }\n    }\n\n    const listParticipantResponse: ListParticipantsResult = {\n      ...result,\n      values: participants,\n    };\n    return listParticipantResponse;\n  }\n\n  private createCustomCallingContextInternal(\n    customCallingContext: CustomCallingContext,\n  ): CustomCallingContextInternal {\n    const sipHeaders: { [key: string]: string } = {};\n    const voipHeaders: { [key: string]: string } = {};\n    if (customCallingContext) {\n      for (const header of customCallingContext) {\n        if (header.kind === \"sipuui\") {\n          sipHeaders[`User-To-User`] = header.value;\n        } else if (header.kind === \"sipx\") {\n          sipHeaders[`X-MS-Custom-${header.key}`] = header.value;\n        } else if (header.kind === \"voip\") {\n          voipHeaders[`${header.key}`] = header.value;\n        }\n      }\n    }\n    return { sipHeaders: sipHeaders, voipHeaders: voipHeaders };\n  }\n\n  /**\n   * Add a participant to the call\n   *\n   * @param participant - The participant is going to be added.\n   */\n  public async addParticipant(\n    targetParticipant: CallInvite,\n    options: AddParticipantOptions = {},\n  ): Promise<AddParticipantResult> {\n    const addParticipantRequest: AddParticipantRequest = {\n      participantToAdd: communicationIdentifierModelConverter(targetParticipant.targetParticipant),\n      sourceCallerIdNumber: PhoneNumberIdentifierModelConverter(\n        targetParticipant.sourceCallIdNumber,\n      ),\n      sourceDisplayName: targetParticipant.sourceDisplayName,\n      invitationTimeoutInSeconds: options.invitationTimeoutInSeconds,\n      operationContext: options.operationContext,\n      operationCallbackUri: options.operationCallbackUrl,\n      customCallingContext: this.createCustomCallingContextInternal(\n        targetParticipant.customCallingContext!,\n      ),\n    };\n    const optionsInternal = {\n      ...options,\n      repeatabilityFirstSent: new Date(),\n      repeatabilityRequestID: uuidv4(),\n    };\n    const result = await this.callConnection.addParticipant(\n      this.callConnectionId,\n      addParticipantRequest,\n      optionsInternal,\n    );\n    const addParticipantsResult: AddParticipantResult = {\n      ...result,\n      participant: {\n        ...result.participant,\n        identifier: result.participant?.identifier\n          ? communicationIdentifierConverter(result.participant?.identifier)\n          : undefined,\n      },\n    };\n    return addParticipantsResult;\n  }\n\n  /**\n   * Transfer the call to a target participant\n   *\n   * @param targetParticipant - The target to be transferred to.\n   */\n  public async transferCallToParticipant(\n    targetParticipant: CommunicationIdentifier,\n    options: TransferCallToParticipantOptions = {},\n  ): Promise<TransferCallResult> {\n    const transferToParticipantRequest: TransferToParticipantRequest = {\n      targetParticipant: communicationIdentifierModelConverter(targetParticipant),\n      operationContext: options.operationContext,\n      operationCallbackUri: options.operationCallbackUrl,\n      transferee: options.transferee && communicationIdentifierModelConverter(options.transferee),\n      customCallingContext: this.createCustomCallingContextInternal(options.customCallingContext!),\n    };\n    const optionsInternal = {\n      ...options,\n      repeatabilityFirstSent: new Date(),\n      repeatabilityRequestID: uuidv4(),\n    };\n    const result = await this.callConnection.transferToParticipant(\n      this.callConnectionId,\n      transferToParticipantRequest,\n      optionsInternal,\n    );\n    const transferCallResult: TransferCallResult = { ...result };\n    return transferCallResult;\n  }\n\n  /**\n   * Remove a participant from the call\n   *\n   * @param participant - The participant is going to be removed from the call.\n   */\n  public async removeParticipant(\n    participant: CommunicationIdentifier,\n    options: RemoveParticipantsOption = {},\n  ): Promise<RemoveParticipantResult> {\n    const removeParticipantRequest: RemoveParticipantRequest = {\n      participantToRemove: communicationIdentifierModelConverter(participant),\n      operationContext: options.operationContext,\n      operationCallbackUri: options.operationCallbackUrl,\n    };\n    const optionsInternal = {\n      ...options,\n      repeatabilityFirstSent: new Date(),\n      repeatabilityRequestID: uuidv4(),\n    };\n    const result = await this.callConnection.removeParticipant(\n      this.callConnectionId,\n      removeParticipantRequest,\n      optionsInternal,\n    );\n    const removeParticipantsResult: RemoveParticipantResult = {\n      ...result,\n    };\n    return removeParticipantsResult;\n  }\n\n  /**\n   * Mute participant from the call.\n   *\n   * @param participant - Participant to be muted from the call.\n   * @param options - Additional attributes for mute participant.\n   */\n  public async muteParticipant(\n    participant: CommunicationIdentifier,\n    options: MuteParticipantOption = {},\n  ): Promise<MuteParticipantResult> {\n    const muteParticipantsRequest: MuteParticipantsRequest = {\n      targetParticipants: [communicationIdentifierModelConverter(participant)],\n      operationContext: options.operationContext,\n    };\n    const optionsInternal = {\n      ...options,\n      repeatabilityFirstSent: new Date(),\n      repeatabilityRequestID: uuidv4(),\n    };\n    const result = await this.callConnection.mute(\n      this.callConnectionId,\n      muteParticipantsRequest,\n      optionsInternal,\n    );\n    const muteParticipantResult: MuteParticipantResult = {\n      ...result,\n    };\n    return muteParticipantResult;\n  }\n\n  /** Cancel add participant operation.\n   *\n   * @param invitationId - Invitation ID used to cancel the add participant request.\n   * @param options - Additional attributes for cancel add participant operation.\n   */\n  public async cancelAddParticipantOperation(\n    invitationId: string,\n    options: CancelAddParticipantOperationOptions = {},\n  ): Promise<CancelAddParticipantOperationResult> {\n    const {\n      operationContext,\n      operationCallbackUrl: operationCallbackUri,\n      ...operationOptions\n    } = options;\n    const cancelAddParticipantRequest = {\n      invitationId,\n      operationContext: options.operationContext,\n      operationCallbackUri,\n    };\n    const optionsInternal = {\n      ...operationOptions,\n      repeatabilityFirstSent: new Date(),\n      repeatabilityRequestID: uuidv4(),\n    };\n\n    return this.callConnection.cancelAddParticipant(\n      this.callConnectionId,\n      cancelAddParticipantRequest,\n      optionsInternal,\n    ) as Promise<CancelAddParticipantOperationResult>;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { CallAutomationApiClient } from \"./generated/src/callAutomationApiClient\";\nimport {\n  AddPipelineOptions,\n  createHttpHeaders,\n  createPipelineRequest,\n  PipelineRequest,\n  PipelineRequestOptions,\n  PipelineResponse,\n  SendRequest,\n} from \"@azure/core-rest-pipeline\";\nimport { DeleteRecordingOptions, DownloadRecordingOptions } from \"./models/options\";\n\n/** Class containing ContentDownloading operations. */\nexport class ContentDownloaderImpl {\n  private readonly client: CallAutomationApiClient;\n\n  /**\n   * Initialize a new instance of the class ContentDownloader class.\n   * @param client - Reference to the service client\n   */\n  constructor(client: CallAutomationApiClient) {\n    this.client = client;\n    this.addCustomSignUrlPolicy();\n  }\n\n  private addCustomSignUrlPolicy(): void {\n    const signUrlPolicy = {\n      name: \"CustomSignUrlPolicy\",\n      async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n        if (request.headers.has(\"OriginalUrl\")) {\n          request.url = `${request.headers.get(\"OriginalUrl\")}`;\n          const originalRequest = new URL(request.url);\n          request.headers.set(\"Host\", originalRequest.host);\n        }\n        return next(request);\n      },\n    };\n\n    const pipelineOptions: AddPipelineOptions = {};\n    pipelineOptions.afterPhase = \"Sign\";\n    this.client.pipeline.addPolicy(signUrlPolicy, pipelineOptions);\n  }\n\n  /**\n   * Deletes a recording.\n   * @param deleteLocationUrl - The recording location url. Required.\n   */\n  async deleteRecording(deleteLocationUrl: string, options: DeleteRecordingOptions): Promise<void> {\n    const fileLocation = new URL(deleteLocationUrl);\n    const endpoint = new URL(this.client.endpoint);\n    const modifiedUrlForSigning = endpoint.origin + fileLocation.pathname;\n\n    const opt: PipelineRequestOptions = {\n      url: modifiedUrlForSigning,\n      method: \"DELETE\",\n      headers: createHttpHeaders(),\n      body: \"\",\n      abortSignal: options?.abortSignal,\n      tracingOptions: options?.tracingOptions,\n    };\n\n    opt.headers?.set(\"OriginalUrl\", deleteLocationUrl);\n    opt.headers?.set(\"x-ms-host\", endpoint.host);\n    opt.headers?.set(\"accept\", \"application/json\");\n\n    const req = createPipelineRequest(opt);\n\n    const results = await this.client.sendRequest(req);\n\n    if (results.status !== 200) {\n      if (results.bodyAsText) {\n        const jsonBody = JSON.parse(results.bodyAsText);\n        throw { status: jsonBody.status, message: jsonBody.message };\n      }\n      throw { status: results.status };\n    }\n  }\n\n  /**\n   * Returns a stream with a call recording.\n   * @param sourceLocationUrl - The source location url. Required.\n   * @param options - Additional request options contains downloadRecording options.\n   */\n  async download(\n    sourceLocationUrl: string,\n    options: DownloadRecordingOptions,\n  ): Promise<PipelineResponse> {\n    const fileLocation = new URL(sourceLocationUrl);\n    const endpoint = new URL(this.client.endpoint);\n    const modifiedUrlForSigning = endpoint.origin + fileLocation.pathname;\n\n    const opt: PipelineRequestOptions = {\n      url: modifiedUrlForSigning,\n      method: \"GET\",\n      headers: createHttpHeaders(),\n      body: \"\",\n      streamResponseStatusCodes: new Set([200, 206]),\n      abortSignal: options.abortSignal,\n      tracingOptions: options?.tracingOptions,\n    };\n\n    if (options.length && !options.offset) {\n      throw Error(\"Download offset value must not be empty if length is set.\");\n    } else if (options.length && options.offset) {\n      options.length = options.offset + options.length - 1;\n    }\n\n    let rangeHeader = \"bytes=\" + options.offset;\n    if (options.length) rangeHeader += \"-\" + options.length;\n\n    opt.headers?.set(\"OriginalUrl\", sourceLocationUrl);\n    opt.headers?.set(\"x-ms-host\", endpoint.host);\n    opt.headers?.set(\"accept\", \"application/json\");\n    opt.headers?.set(\"Range\", rangeHeader);\n\n    const req = createPipelineRequest(opt);\n\n    const results = await this.client.sendRequest(req);\n\n    if (results.status !== 200 && results.status !== 206) {\n      if (results.bodyAsText) {\n        const jsonBody = JSON.parse(results.bodyAsText);\n        throw { status: jsonBody.status, message: jsonBody.message };\n      }\n      throw { status: results.status };\n    }\n    return results;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { createHash, createHmac } from \"crypto\";\n\nexport const shaHash = async (content: string): Promise<string> =>\n  createHash(\"sha256\").update(content).digest(\"base64\");\n\nexport const shaHMAC = async (secret: string, content: string): Promise<string> => {\n  const decodedSecret = Buffer.from(secret, \"base64\");\n\n  return createHmac(\"sha256\", decodedSecret).update(content).digest(\"base64\");\n};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  PipelinePolicy,\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest,\n} from \"@azure/core-rest-pipeline\";\nimport { KeyCredential } from \"@azure/core-auth\";\nimport { shaHMAC, shaHash } from \"./cryptoUtils\";\nimport { isNode } from \"@azure/core-util\";\n\nconst callAutomationAccessKeyCredentialPolicy = \"CallAutomationAccessKeyCredentialPolicy\";\n\n/**\n * Creates an HTTP pipeline policy to authenticate a request using a `KeyCredential`.\n * @hidden\n *\n * @param credential - The key credential.\n */\nexport function createCallAutomationAccessKeyCredentialPolicy(\n  credential: KeyCredential,\n  acsUrl: string,\n): PipelinePolicy {\n  return {\n    name: callAutomationAccessKeyCredentialPolicy,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      const verb = request.method.toUpperCase();\n      const utcNow = new Date().toUTCString();\n      const contentHash = await shaHash(request.body?.toString() || \"\");\n      const dateHeader = \"x-ms-date\";\n      const signedHeaders = `${dateHeader};host;x-ms-content-sha256`;\n\n      const acsUrlCast = new URL(acsUrl);\n      request.headers.set(\"x-ms-host\", acsUrlCast.host);\n\n      const url = new URL(request.url);\n      const query = url.searchParams.toString();\n      const urlPathAndQuery = query ? `${url.pathname}?${query}` : url.pathname;\n\n      const stringToSign = `${verb}\\n${urlPathAndQuery}\\n${utcNow};${acsUrlCast.host};${contentHash}`;\n      const signature = await shaHMAC(credential.key, stringToSign);\n\n      if (isNode) {\n        request.headers.set(\"Host\", url.host || \"\");\n      }\n\n      request.headers.set(dateHeader, utcNow);\n      request.headers.set(\"x-ms-content-sha256\", contentHash);\n      request.headers.set(\n        \"Authorization\",\n        `HMAC-SHA256 SignedHeaders=${signedHeaders}&Signature=${signature}`,\n      );\n      return next(request);\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  BearerTokenAuthenticationPolicyOptions,\n  PipelinePolicy,\n  bearerTokenAuthenticationPolicy,\n} from \"@azure/core-rest-pipeline\";\nimport { KeyCredential, TokenCredential, isTokenCredential } from \"@azure/core-auth\";\nimport { createCallAutomationAccessKeyCredentialPolicy } from \"./callAutomationAccessKeyCredentialPolicy\";\nimport { CallAutomationApiClient, CallAutomationApiClientOptionalParams } from \"./../generated/src\";\nimport { createCommunicationAuthPolicy } from \"@azure/communication-common\";\n/**\n * Creates a pipeline policy to authenticate request based\n * on the credential passed in.\n * @hidden\n *\n * @param credential - The KeyCredential or TokenCredential.\n */\nexport function createCallAutomationAuthPolicy(\n  credential: KeyCredential | TokenCredential,\n  acsUrl: string,\n): PipelinePolicy {\n  if (isTokenCredential(credential)) {\n    const policyOptions: BearerTokenAuthenticationPolicyOptions = {\n      credential: credential,\n      scopes: [\"https://communication.azure.com//.default\"],\n    };\n    return bearerTokenAuthenticationPolicy(policyOptions);\n  } else {\n    return createCallAutomationAccessKeyCredentialPolicy(credential, acsUrl);\n  }\n}\n\n/**\n * Creates CallAutomationApiClient for custom endpoint\n * @hidden\n *\n * @param credential - The KeyCredential or TokenCredential.\n * @param internalPipelineOptions - CallAutomationApiClientOptionalParams if provided.\n * @param url - ACS url.\n */\nexport function createCustomCallAutomationApiClient(\n  credential: KeyCredential | TokenCredential,\n  internalPipelineOptions: CallAutomationApiClientOptionalParams | undefined,\n  url: string,\n): CallAutomationApiClient {\n  // read environment variable for callAutomation auth\n  const customEnabled = process.env.COMMUNICATION_CUSTOM_ENDPOINT_ENABLED;\n  const customUrl = process.env.COMMUNICATION_CUSTOM_URL;\n  let callAutomationApiClient: CallAutomationApiClient;\n\n  if (customEnabled?.toLowerCase() === \"true\" && customUrl) {\n    // add custom header for Call Automation auth when flag is true\n    callAutomationApiClient = new CallAutomationApiClient(customUrl, internalPipelineOptions);\n    const callAutomationAuthPolicy = createCallAutomationAuthPolicy(credential, url);\n    callAutomationApiClient.pipeline.addPolicy(callAutomationAuthPolicy);\n  } else {\n    callAutomationApiClient = new CallAutomationApiClient(url, internalPipelineOptions);\n    const authPolicy = createCommunicationAuthPolicy(credential);\n    callAutomationApiClient.pipeline.addPolicy(authPolicy);\n  }\n  return callAutomationApiClient;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { CallRecordingImpl } from \"./generated/src/operations\";\nimport {\n  CallAutomationApiClientOptionalParams,\n  StartCallRecordingRequest,\n} from \"./generated/src/models/index\";\nimport { RecordingStateResult } from \"./models/responses\";\nimport {\n  StartRecordingOptions,\n  StopRecordingOptions,\n  PauseRecordingOptions,\n  GetRecordingPropertiesOptions,\n  ResumeRecordingOptions,\n  DeleteRecordingOptions,\n  DownloadRecordingOptions,\n} from \"./models/options\";\nimport { communicationIdentifierModelConverter } from \"./utli/converters\";\nimport { ContentDownloaderImpl } from \"./contentDownloader\";\nimport * as fs from \"fs\";\nimport { randomUUID } from \"@azure/core-util\";\nimport { KeyCredential, TokenCredential } from \"@azure/core-auth\";\nimport { CallAutomationApiClient } from \"./generated/src\";\nimport { createCustomCallAutomationApiClient } from \"./credential/callAutomationAuthPolicy\";\n\n/**\n * CallRecording class represents call recording related APIs.\n */\nexport class CallRecording {\n  private readonly callRecordingImpl: CallRecordingImpl;\n  private readonly contentDownloader: ContentDownloaderImpl;\n  private readonly callAutomationApiClient: CallAutomationApiClient;\n\n  constructor(\n    endpoint: string,\n    credential: KeyCredential | TokenCredential,\n    options?: CallAutomationApiClientOptionalParams,\n  ) {\n    this.callAutomationApiClient = createCustomCallAutomationApiClient(\n      credential,\n      options,\n      endpoint,\n    );\n\n    this.callRecordingImpl = new CallRecordingImpl(this.callAutomationApiClient);\n    this.contentDownloader = new ContentDownloaderImpl(this.callAutomationApiClient);\n  }\n\n  /**\n   * Starts a call recording with the specified options.\n   * @param startCallRecordingRequest - options to start the call recording\n   * @param options - Operation options.\n   */\n  public async start(options: StartRecordingOptions): Promise<RecordingStateResult> {\n    const startCallRecordingRequest: StartCallRecordingRequest = {\n      callLocator: options.callLocator,\n    };\n\n    startCallRecordingRequest.recordingChannelType = options.recordingChannel;\n    startCallRecordingRequest.recordingContentType = options.recordingContent;\n    startCallRecordingRequest.recordingFormatType = options.recordingFormat;\n    startCallRecordingRequest.recordingStateCallbackUri = options.recordingStateCallbackEndpointUrl;\n    startCallRecordingRequest.pauseOnStart = options.pauseOnStart;\n    startCallRecordingRequest.recordingStorage = options.recordingStorage;\n\n    if (options.channelAffinity) {\n      startCallRecordingRequest.channelAffinity = [];\n      options.channelAffinity.forEach((identifier) => {\n        startCallRecordingRequest.channelAffinity?.push({\n          participant: communicationIdentifierModelConverter(identifier.targetParticipant),\n          channel: identifier.channel,\n        });\n      });\n    }\n\n    if (options.audioChannelParticipantOrdering) {\n      startCallRecordingRequest.audioChannelParticipantOrdering = [];\n      options.audioChannelParticipantOrdering.forEach((identifier) => {\n        startCallRecordingRequest.audioChannelParticipantOrdering?.push(\n          communicationIdentifierModelConverter(identifier),\n        );\n      });\n    }\n\n    if (options.callLocator.kind === \"groupCallLocator\") {\n      startCallRecordingRequest.callLocator.kind = \"groupCallLocator\";\n      startCallRecordingRequest.callLocator.groupCallId = options.callLocator.id;\n    } else {\n      startCallRecordingRequest.callLocator.kind = \"serverCallLocator\";\n      startCallRecordingRequest.callLocator.serverCallId = options.callLocator.id;\n    }\n\n    const optionsInternal = {\n      ...options,\n      repeatabilityFirstSent: new Date(),\n      repeatabilityRequestID: randomUUID(),\n    };\n    const response = await this.callRecordingImpl.startRecording(\n      startCallRecordingRequest,\n      optionsInternal,\n    );\n\n    const result: RecordingStateResult = {\n      recordingId: response.recordingId!,\n      recordingKind: response.recordingKind!,\n      recordingState: response.recordingState!,\n    };\n\n    return result;\n  }\n\n  /**\n   * Returns call recording properties.\n   * @param recordingId - The recordingId associated with the recording.\n   * @param options - Additional request options contains getRecordingProperties api options.\n   */\n  public async getState(\n    recordingId: string,\n    options: GetRecordingPropertiesOptions = {},\n  ): Promise<RecordingStateResult> {\n    const response = await this.callRecordingImpl.getRecordingProperties(recordingId, options);\n\n    const result: RecordingStateResult = {\n      recordingId: response.recordingId!,\n      recordingKind: response.recordingKind!,\n      recordingState: response.recordingState!,\n    };\n\n    return result;\n  }\n\n  /**\n   * Stops a call recording.\n   * @param recordingId - The recordingId associated with the recording.\n   * @param options - Additional request options contains stopRecording api options.\n   */\n  public async stop(recordingId: string, options: StopRecordingOptions = {}): Promise<void> {\n    return this.callRecordingImpl.stopRecording(recordingId, options);\n  }\n\n  /**\n   * Pauses a call recording.\n   * @param recordingId - The recordingId associated with the recording.\n   * @param options - Additional request options contains pauseRecording api options.\n   */\n  public async pause(recordingId: string, options: PauseRecordingOptions = {}): Promise<void> {\n    return this.callRecordingImpl.pauseRecording(recordingId, options);\n  }\n\n  /**\n   * Resumes a call recording.\n   * @param recordingId - The recordingId associated with the recording.\n   * @param options - Additional request options contains resumeRecording api options.\n   */\n  public async resume(recordingId: string, options: ResumeRecordingOptions = {}): Promise<void> {\n    return this.callRecordingImpl.resumeRecording(recordingId, options);\n  }\n\n  /**\n   * Deletes a recording.\n   * @param recordingLocationUrl - The recording location url. Required.\n   * @param options - Additional request options contains deleteRecording api options.\n   */\n  public async delete(\n    recordingLocationUrl: string,\n    options: DeleteRecordingOptions = {},\n  ): Promise<void> {\n    await this.contentDownloader.deleteRecording(recordingLocationUrl, options);\n  }\n\n  /**\n   * Returns a stream with a call recording.\n   * @param sourceLocationUrl - The source location url. Required.\n   * @param options - Additional request options contains downloadRecording api options.\n   */\n  public async downloadStreaming(\n    sourceLocationUrl: string,\n    options: DownloadRecordingOptions = {},\n  ): Promise<NodeJS.ReadableStream> {\n    const result = this.contentDownloader.download(sourceLocationUrl, options);\n    const recordingStream = (await result).readableStreamBody;\n    if (recordingStream) {\n      return recordingStream;\n    } else {\n      throw Error(\"failed to get stream\");\n    }\n  }\n\n  /**\n   * Downloads a call recording file to the specified stream.\n   * @param sourceLocationUrl - The source location url. Required.\n   * @param destinationStream - The destination stream. Required.\n   * @param options - Additional request options contains downloadRecording api options.\n   */\n  public async downloadToStream(\n    sourceLocationUrl: string,\n    destinationStream: NodeJS.WritableStream,\n    options: DownloadRecordingOptions = {},\n  ): Promise<void> {\n    const result = this.contentDownloader.download(sourceLocationUrl, options);\n    const recordingStream = (await result).readableStreamBody;\n    if (recordingStream) {\n      recordingStream.pipe(destinationStream);\n      const finish = new Promise<void>((resolve, reject) => {\n        destinationStream.on(\"finish\", resolve);\n        destinationStream.on(\"error\", reject);\n      });\n      await finish;\n    } else {\n      throw Error(\"failed to get stream\");\n    }\n  }\n\n  /**\n   * Downloads a call recording file to the specified path.\n   * @param sourceLocationUrl - The source location url. Required.\n   * @param destinationPath - The destination path. Required.\n   * @param options - Additional request options contains downloadRecording api options.\n   */\n  public async downloadToPath(\n    sourceLocationUrl: string,\n    destinationPath: string,\n    options: DownloadRecordingOptions = {},\n  ): Promise<void> {\n    const result = this.contentDownloader.download(sourceLocationUrl, options);\n    const recordingStream = (await result).readableStreamBody;\n    if (recordingStream) {\n      const writeFileStream = fs.createWriteStream(destinationPath);\n      recordingStream.pipe(writeFileStream);\n      const finish = new Promise<void>((resolve, reject) => {\n        writeFileStream.on(\"finish\", resolve);\n        writeFileStream.on(\"error\", reject);\n      });\n      await finish;\n    } else {\n      throw Error(\"failed to get stream\");\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { KeyCredential, TokenCredential, isTokenCredential } from \"@azure/core-auth\";\nimport { CommonClientOptions } from \"@azure/core-client\";\nimport { InternalPipelineOptions } from \"@azure/core-rest-pipeline\";\nimport {\n  parseClientArguments,\n  isKeyCredential,\n  createCommunicationAuthPolicy,\n  CommunicationIdentifier,\n  CommunicationUserIdentifier,\n} from \"@azure/communication-common\";\nimport { logger } from \"./models/logger\";\nimport {\n  AnswerCallRequest,\n  CallAutomationApiClient,\n  CommunicationUserIdentifierModel,\n  CreateCallRequest,\n  RedirectCallRequest,\n  RejectCallRequest,\n} from \"./generated/src\";\nimport { CallConnection } from \"./callConnection\";\nimport { CallRecording } from \"./callRecording\";\nimport {\n  AnswerCallOptions,\n  CreateCallOptions,\n  RedirectCallOptions,\n  RejectCallOptions,\n} from \"./models/options\";\nimport { AnswerCallResult, CreateCallResult } from \"./models/responses\";\nimport { CallConnectionProperties, CallInvite } from \"./models/models\";\nimport {\n  communicationIdentifierConverter,\n  communicationIdentifierModelConverter,\n  communicationUserIdentifierConverter,\n  communicationUserIdentifierModelConverter,\n  phoneNumberIdentifierConverter,\n  PhoneNumberIdentifierModelConverter,\n} from \"./utli/converters\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n/**\n * Client options used to configure CallAutomation Client API requests.\n */\nexport interface CallAutomationClientOptions extends CommonClientOptions {\n  /**\n   * The identifier of the source of the call for call creating/answering/inviting operation.\n   */\n  sourceIdentity?: CommunicationUserIdentifier;\n}\n\n/**\n * Checks whether the type of a value is CallAutomationClientOptions or not.\n *\n * @param options - The value being checked.\n */\nconst isCallAutomationClientOptions = (options: any): options is CallAutomationClientOptions =>\n  !!options && !isTokenCredential(options) && !isKeyCredential(options);\n\n/**\n * A CallAutomationClient represents a Client to the Azure Communication CallAutomation service.\n */\nexport class CallAutomationClient {\n  private readonly callAutomationApiClient: CallAutomationApiClient;\n  private readonly sourceIdentity?: CommunicationUserIdentifierModel;\n  private readonly credential: TokenCredential | KeyCredential;\n  private readonly internalPipelineOptions: InternalPipelineOptions;\n  /**\n   * Initializes a new instance of the CallAutomationClient class.\n   * @param connectionString - Connection string to connect to an Azure Communication Service resource.\n   *                         Example: \"endpoint=https://contoso.eastus.communications.azure.net/;accesskey=secret\";\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(connectionString: string, options?: CallAutomationClientOptions);\n\n  /**\n   * Initializes a new instance of the CallAutomationClient class using a TokenCredential or KeyCredential.\n   * @param endpoint - The endpoint of the service (ex: https://contoso.eastus.communications.azure.net).\n   * @param credential - TokenCredential or KeyCredential that is used to authenticate requests to the service.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(\n    endpoint: string,\n    credential: TokenCredential | KeyCredential,\n    options?: CallAutomationClientOptions,\n  );\n\n  constructor(\n    connectionStringOrUrl: string,\n    credentialOrOptions?: KeyCredential | TokenCredential | CallAutomationClientOptions,\n    maybeOptions: CallAutomationClientOptions = {},\n  ) {\n    const options = isCallAutomationClientOptions(credentialOrOptions)\n      ? credentialOrOptions\n      : maybeOptions;\n\n    if (!options?.userAgentOptions) {\n      options.userAgentOptions = {};\n    }\n\n    this.internalPipelineOptions = {\n      ...options,\n      ...{\n        loggingOptions: {\n          logger: logger.info,\n        },\n      },\n    };\n\n    const { url, credential } = parseClientArguments(connectionStringOrUrl, credentialOrOptions);\n    const authPolicy = createCommunicationAuthPolicy(credential);\n\n    this.credential = credential;\n    this.callAutomationApiClient = new CallAutomationApiClient(url, this.internalPipelineOptions);\n    this.callAutomationApiClient.pipeline.addPolicy(authPolicy);\n    this.sourceIdentity = communicationUserIdentifierModelConverter(options.sourceIdentity);\n  }\n\n  /**\n   * Initializes a new instance of CallConnection.\n   * @param callConnectionId - The CallConnection id for the CallConnection instance. (ex: 421CONTOSO-cRD6-4RDc-a078-99dRANDOMf).\n   */\n  public getCallConnection(callConnectionId: string): CallConnection {\n    return new CallConnection(\n      callConnectionId,\n      this.callAutomationApiClient.endpoint,\n      this.credential,\n      this.internalPipelineOptions,\n    );\n  }\n\n  /**\n   * Initializes a new instance of CallRecording.\n   */\n  public getCallRecording(): CallRecording {\n    return new CallRecording(\n      this.callAutomationApiClient.endpoint,\n      this.credential,\n      this.internalPipelineOptions,\n    );\n  }\n\n  /**\n   * Get Source Identity that is used for create and answer call\n   */\n  public getSourceIdentity(): CommunicationUserIdentifier | undefined {\n    return communicationUserIdentifierConverter(this.sourceIdentity);\n  }\n\n  private async createCallInternal(\n    request: CreateCallRequest,\n    options?: CreateCallOptions,\n  ): Promise<CreateCallResult> {\n    const optionsInternal = {\n      ...options,\n      repeatabilityFirstSent: new Date(),\n      repeatabilityRequestID: uuidv4(),\n    };\n    const { callConnectionId, answeredBy, targets, sourceCallerIdNumber, source, ...result } =\n      await this.callAutomationApiClient.createCall(request, optionsInternal);\n\n    if (callConnectionId) {\n      const callConnectionPropertiesDto: CallConnectionProperties = {\n        ...result,\n        callConnectionId: callConnectionId,\n        source: source ? communicationIdentifierConverter(source) : undefined,\n        answeredby: communicationUserIdentifierConverter(answeredBy),\n        targetParticipants: targets?.map((returnedTarget) =>\n          communicationIdentifierConverter(returnedTarget),\n        ),\n        sourceCallerIdNumber: sourceCallerIdNumber\n          ? phoneNumberIdentifierConverter(sourceCallerIdNumber)\n          : undefined,\n      };\n      const callConnection = new CallConnection(\n        callConnectionId,\n        this.callAutomationApiClient.endpoint,\n        this.credential,\n        this.internalPipelineOptions,\n      );\n      const createCallResult: CreateCallResult = {\n        callConnectionProperties: callConnectionPropertiesDto,\n        callConnection: callConnection,\n      };\n      return createCallResult;\n    }\n    throw \"callConnectionProperties / callConnectionId is missing in createCall result\";\n  }\n\n  /**\n   * Create an outgoing call from source to a target identity.\n   * @param targetParticipant - A single target.\n   * @param callbackUrl - The callback url.\n   * @param options - Additional request options contains createCallConnection api options.\n   */\n  public async createCall(\n    targetParticipant: CallInvite,\n    callbackUrl: string,\n    options: CreateCallOptions = {},\n  ): Promise<CreateCallResult> {\n    const request: CreateCallRequest = {\n      source: this.sourceIdentity,\n      targets: [communicationIdentifierModelConverter(targetParticipant.targetParticipant)],\n      callbackUri: callbackUrl,\n      operationContext: options.operationContext,\n      callIntelligenceOptions: options.callIntelligenceOptions,\n      sourceCallerIdNumber: PhoneNumberIdentifierModelConverter(\n        targetParticipant.sourceCallIdNumber,\n      ),\n      sourceDisplayName: targetParticipant.sourceDisplayName,\n    };\n\n    return this.createCallInternal(request, options);\n  }\n\n  /**\n   * Create an outgoing call from source to a group of targets identities.\n   * @param targetParticipants - A group of targets identities.\n   * @param callbackUrl - The callback url.\n   * @param options - Additional request options contains createCallConnection api options.\n   */\n  public async createGroupCall(\n    targetParticipants: CommunicationIdentifier[],\n    callbackUrl: string,\n    options: CreateCallOptions = {},\n  ): Promise<CreateCallResult> {\n    const request: CreateCallRequest = {\n      source: this.sourceIdentity,\n      targets: targetParticipants.map((target) => communicationIdentifierModelConverter(target)),\n      callbackUri: callbackUrl,\n      operationContext: options.operationContext,\n      callIntelligenceOptions: options.callIntelligenceOptions,\n      sourceCallerIdNumber: PhoneNumberIdentifierModelConverter(options.sourceCallIdNumber),\n      sourceDisplayName: options.sourceDisplayName,\n    };\n\n    return this.createCallInternal(request, options);\n  }\n\n  /**\n   * Answer the call.\n   * @param incomingCallContext - The context associated with the call.\n   * @param callbackUrl - The callback url.\n   * @param options - Additional request options contains answerCall api options.\n   */\n  public async answerCall(\n    incomingCallContext: string,\n    callbackUrl: string,\n    options: AnswerCallOptions = {},\n  ): Promise<AnswerCallResult> {\n    const { callIntelligenceOptions, operationContext, ...operationOptions } = options;\n    const request: AnswerCallRequest = {\n      incomingCallContext,\n      callIntelligenceOptions,\n      operationContext,\n      callbackUri: callbackUrl,\n      answeredBy: this.sourceIdentity,\n    };\n    const optionsInternal = {\n      ...operationOptions,\n      repeatabilityFirstSent: new Date(),\n      repeatabilityRequestID: uuidv4(),\n    };\n    const { callConnectionId, targets, sourceCallerIdNumber, answeredBy, source, ...result } =\n      await this.callAutomationApiClient.answerCall(request, optionsInternal);\n\n    if (callConnectionId) {\n      const callConnectionProperties: CallConnectionProperties = {\n        ...result,\n        callConnectionId: callConnectionId,\n        source: source ? communicationIdentifierConverter(source) : undefined,\n        answeredby: communicationUserIdentifierConverter(answeredBy),\n        targetParticipants: targets?.map((target) => communicationIdentifierConverter(target)),\n        sourceCallerIdNumber: sourceCallerIdNumber\n          ? phoneNumberIdentifierConverter(sourceCallerIdNumber)\n          : undefined,\n      };\n      const callConnection = new CallConnection(\n        callConnectionId,\n        this.callAutomationApiClient.endpoint,\n        this.credential,\n        this.internalPipelineOptions,\n      );\n      const answerCallResult: AnswerCallResult = {\n        callConnectionProperties: callConnectionProperties,\n        callConnection: callConnection,\n      };\n      return answerCallResult;\n    }\n    throw \"callConnectionProperties / callConnectionId is missing in createCall result\";\n  }\n\n  /**\n   * Redirect the call.\n   *\n   * @param incomingCallContext - The context associated with the call.\n   * @param targetParticipant - The target identity to redirect the call to.\n   * @param options - Additional request options contains redirectCall api options.\n   */\n  public async redirectCall(\n    incomingCallContext: string,\n    targetParticipant: CallInvite,\n    options: RedirectCallOptions = {},\n  ): Promise<void> {\n    const request: RedirectCallRequest = {\n      incomingCallContext: incomingCallContext,\n      target: communicationIdentifierModelConverter(targetParticipant.targetParticipant),\n    };\n    const optionsInternal = {\n      ...options,\n      repeatabilityFirstSent: new Date(),\n      repeatabilityRequestID: uuidv4(),\n    };\n\n    return this.callAutomationApiClient.redirectCall(request, optionsInternal);\n  }\n\n  /**\n   * Reject the call.\n   *\n   * @param incomingCallContext - The context associated with the call.\n   * @param options - Additional request options contains rejectCall api options.\n   */\n  public async rejectCall(\n    incomingCallContext: string,\n    options: RejectCallOptions = {},\n  ): Promise<void> {\n    const request: RejectCallRequest = {\n      incomingCallContext: incomingCallContext,\n      callRejectReason: options.callRejectReason,\n    };\n    const optionsInternal = {\n      ...options,\n      repeatabilityFirstSent: new Date(),\n      repeatabilityRequestID: uuidv4(),\n    };\n\n    return this.callAutomationApiClient.rejectCall(request, optionsInternal);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { CompositeMapper } from \"@azure/core-client\";\n\nexport const CloudEventMapper: CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CloudEvent\",\n    additionalProperties: { type: { name: \"Object\" } },\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      source: {\n        serializedName: \"source\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"any\",\n        },\n      },\n      dataBase64: {\n        serializedName: \"data_base64\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      time: {\n        serializedName: \"time\",\n        type: {\n          name: \"DateTime\",\n        },\n      },\n      specversion: {\n        serializedName: \"specversion\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      dataschema: {\n        serializedName: \"dataschema\",\n        type: {\n          name: \"String\",\n        },\n      },\n      datacontenttype: {\n        serializedName: \"datacontenttype\",\n        type: {\n          name: \"String\",\n        },\n      },\n      subject: {\n        serializedName: \"subject\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { createSerializer } from \"@azure/core-client\";\n\nimport { communicationIdentifierConverter, callParticipantConverter } from \"./utli/converters\";\n\nimport {\n  CallAutomationEvent,\n  AddParticipantSucceeded,\n  AddParticipantFailed,\n  CallConnected,\n  CallDisconnected,\n  CallTransferAccepted,\n  CallTransferFailed,\n  ParticipantsUpdated,\n  RecordingStateChanged,\n  PlayCompleted,\n  PlayFailed,\n  PlayCanceled,\n  RecognizeCompleted,\n  RecognizeCanceled,\n  RecognizeFailed,\n  RemoveParticipantSucceeded,\n  RemoveParticipantFailed,\n  ContinuousDtmfRecognitionToneReceived,\n  ContinuousDtmfRecognitionToneFailed,\n  ContinuousDtmfRecognitionStopped,\n  SendDtmfTonesCompleted,\n  SendDtmfTonesFailed,\n  CancelAddParticipantSucceeded,\n  CancelAddParticipantFailed,\n} from \"./models/events\";\n\nimport { CloudEventMapper } from \"./models/mapper\";\nimport { CallParticipantInternal } from \"./generated/src\";\n\nconst serializer = createSerializer();\n\n/**\n * Helper function for parsing Acs callback events.\n */\nexport function parseCallAutomationEvent(\n  encodedEvents: string | Record<string, unknown>,\n): CallAutomationEvent {\n  const decodedInput = parseAndWrap(encodedEvents);\n\n  // parse cloudevent\n  const deserialized = serializer.deserialize(CloudEventMapper, decodedInput, \"\");\n  const data = deserialized.data;\n  const eventType = deserialized.type;\n\n  // get proper callbackevent and its parser\n  let callbackEvent: CallAutomationEvent;\n  let parsed: any = data;\n  switch (eventType) {\n    case \"Microsoft.Communication.AddParticipantSucceeded\":\n      callbackEvent = { kind: \"AddParticipantSucceeded\" } as AddParticipantSucceeded;\n      parsed.participant = communicationIdentifierConverter(data.participant);\n      break;\n    case \"Microsoft.Communication.AddParticipantFailed\":\n      callbackEvent = { kind: \"AddParticipantFailed\" } as AddParticipantFailed;\n      parsed.participant = communicationIdentifierConverter(data.participant);\n      break;\n    case \"Microsoft.Communication.RemoveParticipantSucceeded\":\n      callbackEvent = { kind: \"RemoveParticipantSucceeded\" } as RemoveParticipantSucceeded;\n      parsed.participant = communicationIdentifierConverter(data.participant);\n      break;\n    case \"Microsoft.Communication.RemoveParticipantFailed\":\n      callbackEvent = { kind: \"RemoveParticipantFailed\" } as RemoveParticipantFailed;\n      parsed.participant = communicationIdentifierConverter(data.participant);\n      break;\n    case \"Microsoft.Communication.CallConnected\":\n      callbackEvent = { kind: \"CallConnected\" } as CallConnected;\n      break;\n    case \"Microsoft.Communication.CallDisconnected\":\n      callbackEvent = { kind: \"CallDisconnected\" } as CallDisconnected;\n      break;\n    case \"Microsoft.Communication.CallTransferAccepted\":\n      callbackEvent = { kind: \"CallTransferAccepted\" } as CallTransferAccepted;\n      break;\n    case \"Microsoft.Communication.CallTransferFailed\":\n      callbackEvent = { kind: \"CallTransferFailed\" } as CallTransferFailed;\n      break;\n    case \"Microsoft.Communication.ParticipantsUpdated\":\n      callbackEvent = { kind: \"ParticipantsUpdated\" } as ParticipantsUpdated;\n      parsed = participantsParserForEvent(data);\n      break;\n    case \"Microsoft.Communication.RecordingStateChanged\":\n      callbackEvent = { kind: \"RecordingStateChanged\" } as RecordingStateChanged;\n      break;\n    case \"Microsoft.Communication.PlayCompleted\":\n      callbackEvent = { kind: \"PlayCompleted\" } as PlayCompleted;\n      break;\n    case \"Microsoft.Communication.PlayFailed\":\n      callbackEvent = { kind: \"PlayFailed\" } as PlayFailed;\n      break;\n    case \"Microsoft.Communication.PlayCanceled\":\n      callbackEvent = { kind: \"PlayCanceled\" } as PlayCanceled;\n      break;\n    case \"Microsoft.Communication.RecognizeCompleted\":\n      callbackEvent = { kind: \"RecognizeCompleted\" } as RecognizeCompleted;\n      break;\n    case \"Microsoft.Communication.RecognizeCanceled\":\n      callbackEvent = { kind: \"RecognizeCanceled\" } as RecognizeCanceled;\n      break;\n    case \"Microsoft.Communication.RecognizeFailed\":\n      callbackEvent = { kind: \"RecognizeFailed\" } as RecognizeFailed;\n      break;\n    case \"Microsoft.Communication.ContinuousDtmfRecognitionToneReceived\":\n      callbackEvent = {\n        kind: \"ContinuousDtmfRecognitionToneReceived\",\n      } as ContinuousDtmfRecognitionToneReceived;\n      break;\n    case \"Microsoft.Communication.ContinuousDtmfRecognitionToneFailed\":\n      callbackEvent = {\n        kind: \"ContinuousDtmfRecognitionToneFailed\",\n      } as ContinuousDtmfRecognitionToneFailed;\n      break;\n    case \"Microsoft.Communication.ContinuousDtmfRecognitionStopped\":\n      callbackEvent = {\n        kind: \"ContinuousDtmfRecognitionStopped\",\n      } as ContinuousDtmfRecognitionStopped;\n      break;\n    case \"Microsoft.Communication.SendDtmfTonesCompleted\":\n      callbackEvent = { kind: \"SendDtmfTonesCompleted\" } as SendDtmfTonesCompleted;\n      break;\n    case \"Microsoft.Communication.SendDtmfTonesFailed\":\n      callbackEvent = { kind: \"SendDtmfTonesFailed\" } as SendDtmfTonesFailed;\n      break;\n    case \"Microsoft.Communication.CancelAddParticipantSucceeded\":\n      callbackEvent = { kind: \"CancelAddParticipantSucceeded\" } as CancelAddParticipantSucceeded;\n      break;\n    case \"Microsoft.Communication.CancelAddParticipantFailed\":\n      callbackEvent = { kind: \"CancelAddParticipantFailed\" } as CancelAddParticipantFailed;\n      break;\n    default:\n      throw new TypeError(`Unknown Call Automation Event type: ${eventType}`);\n  }\n\n  return { ...parsed, ...callbackEvent } as CallAutomationEvent;\n}\n\nfunction parseAndWrap(jsonStringOrObject: string | Record<string, unknown>): any {\n  if (typeof jsonStringOrObject === \"string\") {\n    const o = JSON.parse(jsonStringOrObject);\n    if (Array.isArray(o)) {\n      if (o.length === 0) {\n        throw Error(\"Empty event array.\");\n      }\n      return o[0];\n    } else {\n      return o;\n    }\n  }\n\n  if (Array.isArray(jsonStringOrObject)) {\n    if (jsonStringOrObject.length === 0) {\n      throw Error(\"Empty event array.\");\n    }\n    return jsonStringOrObject[0];\n  } else {\n    return jsonStringOrObject;\n  }\n}\n\nfunction participantsParserForEvent(data: any): any {\n  const { participants, ...rest } = data;\n  return {\n    ...rest,\n    participants: participants?.map((participant: CallParticipantInternal) =>\n      callParticipantConverter(participant),\n    ),\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  CommunicationIdentifier,\n  CommunicationUserIdentifier,\n  MicrosoftTeamsAppIdentifier,\n  MicrosoftTeamsUserIdentifier,\n  PhoneNumberIdentifier,\n} from \"@azure/communication-common\";\nimport { CallConnectionStateModel } from \"../generated/src\";\n\nexport {\n  CallConnectionStateModel,\n  CallRejectReason,\n  KnownCallRejectReason,\n  RecognitionType,\n  ChoiceResult,\n  DtmfResult,\n  SpeechResult,\n  RecordingState,\n  Tone,\n} from \"../generated/src/models/index\";\n\n/** Properties of a call connection */\nexport interface CallConnectionProperties {\n  /** The call connection id. */\n  callConnectionId?: string;\n  /** The server call id. */\n  serverCallId?: string;\n  /**\n   * The source caller Id, a phone number, that's shown to the PSTN participant being invited.\n   * Required only when calling a PSTN callee.\n   */\n  sourceCallerIdNumber?: PhoneNumberIdentifier;\n  /** Display name of the call if dialing out to a pstn number. */\n  sourceDisplayName?: string;\n  /** Source identity. */\n  source?: CommunicationIdentifier;\n  /** The targets of the call. */\n  targetParticipants?: CommunicationIdentifier[];\n  /** The state of the call connection. */\n  callConnectionState?: CallConnectionStateModel;\n  /** The callback URL. */\n  callbackUrl?: string;\n  /** The correlation ID. */\n  correlationId?: string;\n  /** Identity of the answering entity. Only populated when identity is provided in the request. */\n  answeredby?: CommunicationUserIdentifier;\n}\n\n/** Contract model of an ACS call participant */\nexport interface CallParticipant {\n  /** Communication identifier of the participant */\n  identifier?: CommunicationIdentifier;\n  /** Is participant muted */\n  isMuted?: boolean;\n}\n\n/** The locator used for joining or taking action on a call. */\nexport interface CallLocator {\n  id: string;\n  kind: CallLocatorType;\n}\n\n/** Defines values for VoiceKind that the service accepts. */\nexport enum VoiceKind {\n  /** Male */\n  Male = \"male\",\n  /** Female */\n  Female = \"female\",\n}\n\n/** The PlaySource model. */\nexport interface PlaySource {\n  /** @deprecated Not in use, instead use playsourcecacheid for similar functionality*/\n  playsourcacheid?: string;\n}\n\n/** The FileSource model. */\nexport interface FileSource extends PlaySource {\n  url: string;\n  readonly kind: \"fileSource\";\n}\n\n/** The TextSource model. */\nexport interface TextSource extends PlaySource {\n  text: string;\n  sourceLocale?: string;\n  voiceKind?: VoiceKind;\n  voiceName?: string;\n  customVoiceEndpointId?: string;\n  readonly kind: \"textSource\";\n}\n\n/** The SsmlSource model. */\nexport interface SsmlSource extends PlaySource {\n  ssmlText: string;\n  customVoiceEndpointId?: string;\n  readonly kind: \"ssmlSource\";\n}\n\n/** A Dtmf Tone. */\nexport enum DtmfTone {\n  /** Zero */\n  Zero = \"zero\",\n  /** One */\n  One = \"one\",\n  /** Two */\n  Two = \"two\",\n  /** Three */\n  Three = \"three\",\n  /** Four */\n  Four = \"four\",\n  /** Five */\n  Five = \"five\",\n  /** Six */\n  Six = \"six\",\n  /** Seven */\n  Seven = \"seven\",\n  /** Eight */\n  Eight = \"eight\",\n  /** Nine */\n  Nine = \"nine\",\n  /** A */\n  A = \"a\",\n  /** B */\n  B = \"b\",\n  /** C */\n  C = \"c\",\n  /** D */\n  D = \"d\",\n  /** Pound */\n  Pound = \"pound\",\n  /** Asterisk */\n  Asterisk = \"asterisk\",\n}\n\n/** A Recognition Choice */\nexport interface RecognitionChoice {\n  /** Identifier for a given choice */\n  label: string;\n  /** List of phrases to recognize */\n  phrases: string[];\n  tone?: DtmfTone;\n}\n\n/** The type of the recognition that the service accepts. */\nexport enum RecognizeInputType {\n  /** Dtmf */\n  Dtmf = \"dtmf\",\n}\n\n/** Call invitee details. */\nexport interface CallInvite {\n  /** The Target's PhoneNumberIdentifier, CommunicationUserIdentifier or MicrosoftTeamsUserIdentifier. */\n  readonly targetParticipant:\n    | PhoneNumberIdentifier\n    | CommunicationUserIdentifier\n    | MicrosoftTeamsUserIdentifier\n    | MicrosoftTeamsAppIdentifier;\n  /** Caller's phone number identifier. */\n  readonly sourceCallIdNumber?: PhoneNumberIdentifier;\n  sourceDisplayName?: string;\n  /** Used by customer to send custom context to targets. */\n  customCallingContext?: CustomCallingContext;\n}\n\n/** The locator type of a call. */\nexport type CallLocatorType = \"serverCallLocator\" | \"groupCallLocator\";\n\n/** The content type of a call recording. */\nexport type RecordingContent = \"audio\" | \"audioVideo\";\n\n/** The channel type of a call recording. */\nexport type RecordingChannel = \"mixed\" | \"unmixed\";\n\n/** The format type of a call recording. */\nexport type RecordingFormat = \"mp3\" | \"mp4\" | \"wav\";\n\n/** The format type of a call recording. */\nexport type RecordingKind = \"azureCommunicationServices\" | \"teams\" | \"teamsCompliance\";\n\n/** The storage type of a call recording. */\nexport type RecordingStorageKind = \"azureCommunicationServices\" | \"azureBlobStorage\";\n\n/** Channel affinity for a participant */\nexport interface ChannelAffinity {\n  /** Channel number to which bitstream from a particular participant will be written. */\n  channel?: number;\n  /**\n   * The identifier for the participant whose bitstream will be written to the channel\n   * represented by the channel number.\n   */\n  targetParticipant: CommunicationIdentifier;\n}\n\n/** The recording storage */\nexport interface RecordingStorage {\n  /** Defines the kind of recording storage */\n  recordingStorageKind: RecordingStorageKind;\n  /** Uri of a container or a location within a container */\n  recordingDestinationContainerUrl?: string;\n}\n\ninterface CustomCallingContextHeader {\n  key: string;\n  value: string;\n}\n\n/** VOIP header. */\nexport interface VoipHeader extends CustomCallingContextHeader {\n  kind: \"voip\";\n}\n\n/** SIP User To User header. */\nexport interface SipUserToUserHeader extends CustomCallingContextHeader {\n  kind: \"sipuui\";\n}\n\n/** SIP Custom header. */\nexport interface SipCustomHeader extends CustomCallingContextHeader {\n  kind: \"sipx\";\n}\n\n/** Custom Calling Context */\nexport type CustomCallingContext = (VoipHeader | SipUserToUserHeader | SipCustomHeader)[];\n\n/** AI options for the call. */\nexport interface CallIntelligenceOptions {\n  /** The identifier of the Cognitive Service resource assigned to this call. */\n  cognitiveServicesEndpoint?: string;\n}\n"],"names":["createClientLogger","KnownCallRejectReason","CreateCallRequestMapper","AnswerCallRequestMapper","RedirectCallRequestMapper","RejectCallRequestMapper","TransferToParticipantRequestMapper","AddParticipantRequestMapper","RemoveParticipantRequestMapper","MuteParticipantsRequestMapper","CancelAddParticipantRequestMapper","PlayRequestMapper","RecognizeRequestMapper","ContinuousDtmfRecognitionRequestMapper","SendDtmfTonesRequestMapper","StartCallRecordingRequestMapper","__await","__asyncValues","__asyncDelegator","serializer","coreClient","Mappers.CallConnectionPropertiesInternal","Mappers.CommunicationErrorResponse","Parameters.apiVersion","Parameters.endpoint","Parameters.callConnectionId","Parameters.accept","Parameters.repeatabilityRequestID","Parameters.repeatabilityFirstSent","Mappers.TransferCallResponse","Parameters.transferToParticipantRequest","Parameters.contentType","Mappers.GetParticipantsResponse","Mappers.AddParticipantResponse","Parameters.addParticipantRequest","Mappers.RemoveParticipantResponse","Parameters.removeParticipantRequest","Mappers.MuteParticipantsResult","Parameters.muteParticipantsRequest","Mappers.CancelAddParticipantResponse","Parameters.cancelAddParticipantRequest","Mappers.CallParticipantInternal","Parameters.participantRawId","Parameters.nextLink","Parameters.playRequest","Parameters.recognizeRequest","Parameters.continuousDtmfRecognitionRequest","Mappers.SendDtmfTonesResult","Parameters.sendDtmfTonesRequest","Mappers.RecordingStateResponse","Parameters.startCallRecording","Parameters.recordingId","Parameters.createCallRequest","Parameters.answerCallRequest","Parameters.redirectCallRequest","Parameters.rejectCallRequest","createCommunicationAuthPolicy","serializeCommunicationIdentifier","uuidv4","isCommunicationUserIdentifier","isPhoneNumberIdentifier","isMicrosoftTeamsUserIdentifier","isMicrosoftTeamsAppIdentifier","isUnknownIdentifier","__rest","createHttpHeaders","createPipelineRequest","createHash","createHmac","isNode","isTokenCredential","bearerTokenAuthenticationPolicy","randomUUID","fs","isKeyCredential","parseClientArguments","createSerializer","VoiceKind","DtmfTone","RecognizeInputType"],"mappings":"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"}